:root{--c-orange: #FD8127;--c-blue: #021A42;--bg-grey-light: #F2F2F2;--c-grey: #5A5A5A;--c-font-blue: #021A42;--c-font-grey: #A7A7A7;--border-rad-block: 60px}.section-title{font-family:'NeoSansW1G',Arial,Helvetica,sans-serif;font-style:normal;font-weight:300;font-size:96px;line-height:115px;text-transform:uppercase;color:var(--c-font-grey);padding-top:130px;padding-bottom:75px}@media (max-width:800px){.section-title{font-size:48px;line-height:58px;padding-top:50px;padding-bottom:40px}}.section-title--blue{color:var(--c-font-blue);font-weight:600}.section-title--white{color:#fff}.bold{font-weight:600}.section-title__img{margin-bottom:-10px}@media (max-width:800px){.section-title__img{max-height:52px;margin-bottom:-5px;margin-left:10px}}.section-title--wrap{display:block;padding-left:100px}@media (max-width:600px){.section-title--wrap{padding-left:60px}}.dec_desk{display:inline}.dec_mob{display:none}@media (max-width:800px){.dec_desk{display:none}.dec_mob{display:inline}.mob_wrap{display:block}}.hidden{display:none}.pecs{opacity:1;-webkit-transition:1s;transition:1s}.pecs_disappear{opacity:0}.fixedBlock{position:fixed!important;max-width:inherit;width:100%;top:0;margin-top:0!important}.hiddenBlock{opacity:0;top:150px!important}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Regular.ttf)}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Bold.ttf);font-weight:700}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Light.ttf);font-style:light}@font-face{font-family:"NeoSansW1G";src:url(../fonts/NeoSansW1G-Regular.otf)}@font-face{font-family:"NeoSansW1G";src:url(../fonts/NeoSansW1G-Light.otf);font-style:light}*{-webkit-box-sizing:border-box;box-sizing:border-box;outline:0;padding:0}body{font-family:'Montserrat',Arial,sans-serif;background:var(--bg-grey-light)}*,h1,h2,h3,h4,h5,h6{margin:0}.container{max-width:1920px;margin:0 auto;color:var(--c-font-regular);min-width:320px;padding:20px;position:relative;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory}@media (max-width:800px){.container{padding:12px}}.wrap{max-width:1160px;margin:0 auto;width:100%}li,ul{list-style:none}a{text-decoration:none;color:inherit}.btn,.btn-white{width:280px;height:54px;background:var(--c-gold-primary);text-align:center;border:0;border-radius:27px;font-family:'Inter';font-style:normal;font-weight:700;font-size:16px;line-height:24px;color:#fff;cursor:pointer;-webkit-transition:.2s;transition:.2s}@media (max-width:768px){.btn,.btn-white{font-size:14px}}.btn-white:hover,.btn:hover{background:var(--c-btn-primary)}.btn-white{background:#fff;color:var(--c-font-black)}.btn-white:hover{background:var(--c-btn-sec-hover)}.burger_menu{width:28px;height:23px;display:none;cursor:pointer}@media (max-width:1300px){.burger_menu{display:block}}.overlay-dark{width:100%;height:100%;position:fixed;background:#000;opacity:0;z-index:-10;-webkit-transition:.3s;transition:.3s}.overlay--shown{display:block;opacity:.8;z-index:1000}.modal{position:fixed;top:-50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background:#fff;border-radius:33px;-webkit-box-shadow:2px 0 8px 4px rgba(34,60,80,.2);box-shadow:2px 0 8px 4px rgba(34,60,80,.2);z-index:10000;opacity:0;-webkit-transition:.2s;transition:.2s;width:1160px;height:720px}.modal__wrap{padding:60px}.modal__images{display:-webkit-box;display:-ms-flexbox;display:flex;gap:20px;padding-bottom:60px}.modal__image{border-radius:10px;overflow:hidden;max-width:30%}.modal__image img{-o-object-fit:cover;object-fit:cover}.modal__text{max-width:75%}.modal__text p{font-family:'Montserrat';font-style:normal;font-weight:400;font-size:20px;line-height:24px;color:var(--c-grey);padding-bottom:30px}.modal__close{position:absolute;top:60px;right:60px;display:inline-block;width:24px;height:24px;padding:0;border:0;background:0 0;cursor:pointer;opacity:1}.modal__close::after,.modal__close::before{content:'';position:absolute;width:100%;height:3px;top:50%;left:0;background-color:#333}.modal__close::before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal__close::after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal.opened-modal{opacity:1!important;top:50%}.header{position:relative;padding:55px 80px;color:#fff}@media (max-width:900px){.header{padding:30px 20px}}.header-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-top__bg{position:absolute;top:0;left:0;z-index:-1;-webkit-filter:brightness(50%);filter:brightness(50%);-o-object-fit:cover;object-fit:cover;width:100%;height:calc(100% + 150px);border-radius:var(--border-rad-block) var(--border-rad-block) 0 0}@media (max-width:600px){.header-top__bg{height:calc(100% + 100px);border-radius:30px 30px 0 0}}.header-top__bg-vid{position:absolute;top:0;left:0;z-index:-1;-webkit-filter:brightness(50%);filter:brightness(50%);-o-object-fit:cover;object-fit:cover;width:100%;height:calc(100% + 150px);border-radius:var(--border-rad-block) var(--border-rad-block) 0 0}.header-top__logo{max-width:189px;max-height:79px}.header-top__logo img,.modal__image img{width:100%;height:100%}.header .n-menu{max-width:800px;background:rgba(255,255,255,.15);border-radius:90px}@media (max-width:1300px){.header .n-menu{display:none}}.header .n-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 50px}.header .n-menu__item{font-size:20px;line-height:24px;letter-spacing:.1em}.header .n-menu__item:not(:last-child){padding-right:50px}@media (max-width:1420px){.header .n-menu__item:not(:last-child){padding-right:25px}}.header .n-lang{width:160px;height:60px;background:#fff;border-radius:5px;position:relative;cursor:pointer}@media (max-width:1300px){.header .n-lang{display:none}}.header .n-lang__switch{position:absolute;left:0;top:0;height:100%;width:50%;border-radius:5px;background:var(--c-orange);-webkit-transition:.3s;transition:.3s}.header .n-lang__en,.header .n-lang__ru{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.header .n-lang__ru{left:28px}.header .n-lang__en{right:28px;color:#000}.header .n-lang.en .n-lang__switch{left:calc(100% - 80px)}.header .n-lang.en .n-lang__ru{color:#000}.header .n-lang.en .n-lang__en{color:#fff}.header-main{padding-top:480px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:15px}@media (max-width:1300px){.header-main{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:start;-ms-flex-align:start;align-items:start}}.header-main__title{padding-right:50px}.header-main__subtitle{font-family:'Montserrat';font-weight:300;font-size:36px;line-height:150%;letter-spacing:.1em;text-transform:uppercase;width:480px}@media (max-width:800px){.header-main__subtitle{font-size:20px;max-width:280px;padding-bottom:15px}}.product{background-color:#fff;border-radius:var(--border-rad-block);scroll-snap-align:start;position:relative;z-index:100}@media (max-width:600px){.product{border-radius:30px}}.product__wrap{max-width:1190px;margin:0 auto;width:100%;position:relative;padding:0 15px 130px}@media (max-width:600px){.product__wrap{margin-bottom:100px}}.products-menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-bottom:75px;min-width:300px}@media (max-width:1200px){.products-menu{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:30px;grid-row-gap:15px}}@media (max-width:500px){.products-menu{grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr);grid-column-gap:20px}}@media (max-width:350px){.products-menu{grid-column-gap:10px}}.products-menu__item{font-size:24px;line-height:29px;padding:20px 30px;border-radius:10px;cursor:pointer;-webkit-transition:.3s;transition:.3s;text-align:center;white-space:nowrap}.products-menu__item:hover{background:#fd80276e;color:#000}@media (max-width:800px){.products-menu__item{font-size:16px;line-height:20px;padding:10px 15px}}@media (max-width:370px){.products-menu__item{white-space:normal;padding:10px}}.products-menu__item--active{background:var(--c-orange);color:#fff}.products-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:25px}.products-list__item{cursor:pointer;max-width:370px;-webkit-transition:.2s;transition:.2s}@media (max-width:600px){.products-list__item{max-width:254px}}.products-list__item:hover{-webkit-filter:brightness(1.1);filter:brightness(1.1)}.products-list__item img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.order{margin-top:36px;width:350px;height:187px;border-radius:202px;background:var(--c-orange);color:#fff;padding:40px 64px;position:absolute;left:calc(100% - 350px);cursor:pointer;z-index:100;-webkit-transition:.2s;transition:.2s}@media (max-width:800px){.order{margin-top:50px;width:306px;height:149px}}@media (max-width:450px){.order{left:22px}}.order:hover{-webkit-filter:brightness(110%);filter:brightness(110%)}.order__text{font-weight:400;font-size:16px;line-height:20px;width:170px}@media (max-width:800px){.order__text{font-size:12px;line-height:15px;width:121px}}.order__vol{font-weight:400;font-size:64px;line-height:78px}@media (max-width:800px){.order__vol{font-size:48px;line-height:59px}}.order__arr{position:absolute;top:90px;right:70px;width:40px;height:35px}@media (max-width:800px){.order__arr{top:62px}}.product__decor{position:absolute;right:-37%;top:424px;-webkit-transform:rotate(90deg);transform:rotate(90deg);font-family:'NeoSansW1G';font-weight:400;font-size:115.222px;line-height:138px;text-transform:uppercase;color:#f8f8f8}@media (max-width:1530px){.product__decor{display:none}}.mission{padding-bottom:130px}.mission__wrap{position:relative}.mission-main{padding:90px 113px;background:var(--c-blue);max-width:653px;color:#fff;margin-bottom:75px}@media (max-width:600px){.mission-main{padding:60px 50px;border-radius:30px 30px 0 0}}@media (max-width:800px){.mission-main{max-width:none;width:100%;margin-bottom:50px}}.mission-main__img{position:absolute;top:40%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:-55px}@media (max-width:600px){.mission-main__img{width:13px;height:25px;left:-25px;top:33%}}.mission-main__img img{width:100%;height:100%}.mission-main__title{font-family:'NeoSansW1G';font-weight:400;font-size:36px;line-height:43px;letter-spacing:.1em;text-transform:uppercase;padding-bottom:15px;position:relative}@media (max-width:600px){.mission-main__title{font-size:20px;line-height:24px}}.mission-main__text{font-family:'Montserrat';font-weight:400;font-size:24px;line-height:29px}@media (max-width:600px){.mission-main__text{font-size:12px;line-height:15px}}.mission-adv{display:-webkit-box;display:-ms-flexbox;display:flex}@media (max-width:800px){.mission-adv{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.mission-adv__item{border:1px solid;border-color:rgba(2,25,64,.3);border-radius:50%;width:300px;height:300px;margin-right:-15px;position:relative}@media (max-width:1180px){.mission-adv__item{width:25vw;height:25vw}}@media (max-width:800px){.mission-adv__item{width:227px;height:227px;margin-right:0;margin-top:-15px}}.mission-adv__text{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:var(--c-blue);text-align:center}.mission-adv__top-text{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;text-align:center;display:block;min-height:80px}@media (max-width:1000px){.mission-adv__top-text{font-size:50px}}@media (max-width:800px){.mission-adv__top-text{font-size:64px;padding-top:15px}}.mission-adv__subtext{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:130%;text-align:center;color:#5a5a5a;min-width:250px;display:block;min-height:80px}@media (max-width:1000px){.mission-adv__subtext{font-size:16px;min-width:auto}}@media (max-width:800px){.mission-adv__subtext{font-size:20px;min-width:250px}}.mission__dec{position:absolute;right:276px;bottom:-150px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:800px){.mission__dec{max-width:80px;right:72px;bottom:-15px}}.history{position:relative}@media (max-width:880px){.history{display:none}}.history__wrap{position:relative}.rail,.year{display:-webkit-box;display:-ms-flexbox;display:flex}.rail{position:relative;padding-bottom:130px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.year{height:52px;margin-top:60px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;position:sticky;top:50%}.year__arr{margin-right:40px;margin-top:15px}.year__num{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;letter-spacing:.1em;color:var(--c-blue);white-space:nowrap;margin-right:20px}.events__item{max-width:660px;min-height:255px;padding:60px;background:#fff;top:0;position:relative;-webkit-transition:.4s;transition:.4s}.events__item:nth-child(2n){background:var(--c-blue)}.events__item:nth-child(2n) .events__text,.events__item:nth-child(2n) .events__title{color:#fff}.events__text,.events__title{font-weight:400;line-height:140%}.events__title{ont-family:'NeoSansW1G';letter-spacing:.05em;text-transform:uppercase;color:var(--c-blue);padding-bottom:15px;font-size:36px}.events__text{font-family:'Montserrat';font-style:normal;font-size:24px;color:#5a5a5a}.history__dec{position:absolute;left:0;bottom:150px;z-index:-1}.history__decor-circle,.history__decor-circle-2{width:100%;position:absolute;top:250px}.history__decor-circle-2{top:1200px}.geography{background:#fff;border-radius:var(--border-rad-block);padding:0 15px}@media (max-width:600px){.geography{border-radius:30px}}.geography__wrap{padding-bottom:150px}@media (max-width:800px){.geography__wrap{padding-bottom:60px}}.countries__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;width:510px;padding-left:20px}@media (max-width:800px){.countries__list{width:360px}}.countries__item{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;letter-spacing:.05em;text-transform:uppercase;color:var(--c-grey);width:50%;padding-bottom:15px}.countries__item::before,.work-adv__item::before{color:var(--c-blue);font-weight:700;display:inline-block}.countries__item::before{width:1em;content:"\2022";margin-left:-1em}@media (max-width:800px){.countries__item{font-size:16px;line-height:20px}}.geography__map-wrap{position:relative}#map,.map{padding-left:55px;max-width:100%}.map img{width:100%}@media (max-width:800px){.map{padding-left:0;padding-top:50px}}.label{position:absolute;top:0;right:150px}@media (max-width:1000px){.label{right:50px;max-width:250px}}@media (max-width:800px){.label{max-width:125px;top:20px;right:30px}.label img{width:100%}}@media (max-width:800px){#map{padding-left:0;padding-top:50px}}#map path{-webkit-transition:.2s;transition:.2s}#map path:hover{stroke-width:5px!important;stroke:#f5ff6f!important}.work{padding-bottom:130px}@media (max-width:550px){.work{padding-bottom:70px}}.work__wrap{position:relative}.work-adv{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:120px;grid-row-gap:40px;padding-bottom:75px;padding-left:35px}@media (max-width:1000px){.work-adv{grid-column-gap:60px;grid-row-gap:30px;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr)}}@media (max-width:480px){.work-adv{grid-template-columns:repeat(1,1fr);grid-template-rows:repeat(6,1fr);padding-bottom:50px;grid-row-gap:15px}}.work-adv__item{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;color:var(--c-grey);position:relative}@media (max-width:480px){.work-adv__item{font-size:16px;line-height:20px;max-width:250px}}.work-adv__item::before{content:"\2605";margin-left:-35px;font-size:24px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.work-form{max-width:560px}.work-form__cats{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:50px;border-bottom:3px solid #d9d9d9}@media (max-width:550px){.work-form__cats{margin-bottom:30px}}.work-form__cat{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;text-transform:uppercase;color:var(--c-grey);padding-bottom:16px;cursor:pointer}@media (max-width:550px){.work-form__cat{font-size:12px;line-height:15px}}.work-form__cat--active{position:relative}.work-form__cat--active::before{content:"";background:var(--c-orange);width:100%;display:inline-block;position:absolute;height:4px;bottom:-3px;-webkit-transition:.3s;transition:.3s}.work-form__item{padding:35px 50px;font-size:24px;line-height:29px;color:var(--c-grey);background:#fff;margin-bottom:20px;border-radius:15px}@media (max-width:550px){.work-form__item{font-size:20px;line-height:24px;padding:25px 30px}}.work-form__offer{padding-top:50px}.work-form__offer p{padding-top:10px;font-size:24px;line-height:29px;color:var(--c-grey)}@media (max-width:550px){.work-form__offer{padding-top:30px}.work-form__offer p{font-size:16px;line-height:20px;padding-top:0}}.work-form__link{font-weight:900;color:var(--c-orange)}.work-form__link--style{border-bottom:2px solid var(--c-orange)}.work__arr{width:22px;height:15px}.work__person{position:absolute;bottom:-130px;right:0}@media (max-width:1050px){.work__person{display:none}}.news{background:#fff;border-radius:var(--border-rad-block);padding:0 15px}@media (max-width:600px){.news{border-radius:30px}}.news__wrap{padding-bottom:230px}.news__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:35px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:850px){.news__list{gap:15px}}.news-item{width:calc(33% - 35px);cursor:pointer}@media (max-width:850px){.news-item{width:calc(50% - 15px)}}@media (max-width:500px){.news-item{width:100%}}.news-item__img-wrap{overflow:hidden;border-radius:30px 30px 0 30px}.news-item__img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.news-item__desc{padding:30px 30px 0;font-size:20px;line-height:24px;color:var(--c-grey)}@media (max-width:500px){.news-item__desc{padding:15px 30px 60px}}.news__spoiler{display:block;padding-top:115px;width:100%;font-size:20px;line-height:24px;text-align:center;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:var(--c-grey);cursor:pointer}@media (max-width:500px){.news__spoiler{padding-top:0}}.footer{background:url(../images/footer/bg.png);background-size:cover;margin-top:-100px;border-radius:var(--border-rad-block);position:relative}@media (max-width:600px){.footer{border-radius:30px}}.footer__wrap{padding:0 15px}.footer-map{position:relative;width:100%;height:700px;border-radius:30px;overflow:hidden}@media (max-width:500px){.footer-map{height:195px;border-radius:10px}}.footer-map__img{position:absolute;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.footer-map__icon{position:absolute;top:48%;left:51%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@media (max-width:800px){.footer-map__icon{max-width:16px}}.footer-map__adress{position:absolute;top:127px;right:164px;width:300px;height:183px;border-radius:5px 60px;background:var(--c-blue);-webkit-box-shadow:0 5px 20px rgba(0,0,0,.05);box-shadow:0 5px 20px rgba(0,0,0,.05);padding:45px 40px}@media (max-width:1200px){.footer-map__adress{right:50px;top:30px}}@media (max-width:500px){.footer-map__adress{display:none}}.footer-map__adress.mob{position:relative;top:0;left:0;margin-top:30px;display:none;width:auto;max-width:300px}@media (max-width:500px){.footer-map__adress.mob{display:block;background:#fff}.footer-map__adress.mob p{color:var(--c-grey)}.footer-map__adress.mob svg{width:22px;height:25px}}.footer-map__adress-text{color:#fff;font-size:20px;line-height:24px}.map_dot{width:22px;height:18px;margin-bottom:22px}.contacts{color:#fff;padding:75px 0;border-bottom:1px solid #fff}@media (max-width:600px){.contacts{padding:35px 0 30px}}.contacts__phone{font-size:48px;line-height:59px;text-align:center;letter-spacing:.05em;text-transform:uppercase;padding-bottom:35px;white-space:nowrap}@media (max-width:500px){.contacts__phone{font-size:32px;line-height:39px;padding-bottom:20px}}@media (max-width:350px){.contacts__phone{font-size:25px}}.contacts__emails{margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:800px}@media (max-width:600px){.contacts__emails{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.contacts__email{font-size:24px;line-height:29px;text-align:center;letter-spacing:.05em;text-transform:uppercase}@media (max-width:600px){.contacts__email{padding-bottom:15px;font-size:16px;line-height:20px}}.footer__policy{color:#fff;padding:40px 0;font-size:16px;line-height:20px}@media (max-width:600px){.footer__policy{font-size:12px;line-height:15px}}.footer__dec1{position:absolute;right:180px;top:-100px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:600px){.footer__dec1{width:93px;top:3px;right:45px}}.footer__dec2{position:absolute;bottom:285px;left:534px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:800px){.footer__dec2{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhc3MvX3ZhcmlhYmxlcy5zY3NzIiwiYXBwLmNzcyIsInNhc3MvX2VsZW1lbnRzLnNjc3MiLCJzYXNzL19mb250cy5zY3NzIiwic2Fzcy9fbWl4aW5zLnNjc3MiLCJzYXNzL19nbG9iYWwuc2NzcyIsInNhc3MvY29tcG9uZW50cy9fYnV0dG9ucy5zYXNzIiwic2Fzcy9jb21wb25lbnRzL19tb2JpbGUtbWVudS5zYXNzIiwic2Fzcy9jb21wb25lbnRzL19tb2RhbC5zYXNzIiwic2Fzcy9zZWN0aW9ucy9faGVhZGVyLnNhc3MiLCJzYXNzL3NlY3Rpb25zL19wcm9kdWN0LnNhc3MiLCJzYXNzL3NlY3Rpb25zL19taXNzaW9uLnNhc3MiLCJzYXNzL3NlY3Rpb25zL19oaXN0b3J5LnNhc3MiLCJzYXNzL3NlY3Rpb25zL19nZW9ncmFwaHkuc2FzcyIsInNhc3Mvc2VjdGlvbnMvX3dvcmsuc2FzcyIsInNhc3Mvc2VjdGlvbnMvX25ld3Muc2FzcyIsInNhc3Mvc2VjdGlvbnMvX2Zvb3Rlci5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEssQ0FDRSxtQixDQUNBLGlCLENBRUEsd0IsQ0FDQSxpQixDQUVBLHNCLENBQ0Esc0IsQ0FHQSx3QixDQ0RGLGMsQ0NSSSxtRCxDQUNBLGlCLENBQ0EsZSxDQUNBLGMsQ0FDQSxpQixDQUNBLHdCLENBQ0Esd0IsQ0FDQSxpQixDRFVBLG1CLENBR0oseUJDUFEsYyxDQUNBLGMsQ0FDQSxnQixDRFNBLGdCLENDSFIscUJBS0Esb0IsQ0FDSSx3QixDRElBLGUsQ0FHSixxQixDQ0FBLFUsQ0FJQSxLLENBSkEsZSxDRFFBLG1CLENBQ0ksbUIsQ0FHSix5QkFDSSxtQixDQ0lKLGUsQ0FMQSxrQixDQU9RLGtCRENSLG9CLENDT0EsYSxDQUNJLGtCLENESEoseUJDUVEsb0IsQ0FOUixtQkRJQSxTLENDY0EsYyxDQUlBLFEsQ0FDSSxZLENEWEoseUJDZUEsUyxDQUNJLFksQ0FJQSxRLENBQ0EsYyxDQUdBLFMsQ0RkSSxlQUlSLE8sQ0V6RkEsWSxDRjZGQSxLLENFeEZBLFMsQ0FDSSxxQixDQUNBLGEsQ0FJSixlLENBQ0ksUyxDRjJGSixXLENFdEZBLHdCLENBQ0ksaUIsQ0FDQSxVLENGd0ZBLEssQ0VyRkosc0IsQ0Z5RkEsWSxDQUNJLFMsQ0cvR0osbUIsQ0FxQkEsV0FNQSx3QixDQU9BLHlDLEFBcUJBLFdBUUEsd0IsQ0F5Q0EscUMsQ0N6R0EsZ0IsQUorSEEsV0kzSEUsd0IsQ0FDQSxzQyxDSjZIQSxpQixBQUdGLFdBQ0ksd0IsQ0l6SEoseUMsQUo2SEEsV0FDSSx3QixDQUNGLHNDLENJekhBLGlCSjZIRixDLENJeEhFLDZCLENBQ0EscUIsQ0FDQSxTLENBQ0EsUyxDSjZIRixJLENJeEhBLHlDLENBVkEsK0IsQ0owSEEsQyxDSTFHQSxFLENKd0hBLEUsQ0FDQSxFLENBQ0EsRSxDQUNBLEUsQ0lwSEEsRSxDQUNFLFEsQ0p3SEYsVSxDSW5IRSxnQixDSnFIRSxhLENLeEtKLDJCLENBQ0ksZSxDQUNBLFksQ0FDQSxpQixDQUNBLGdDLENBQ0EsNEIsQ0w0S0oseUJLeEtJLFUsQ0FDQSxjTDZLSixLLENLektJLGdCLENGcUNBLGEsQ0VuREosVSxDTDZMQSxFLENLektRLEUsQ0FFSixlLENMMktKLEMsQ0FDSSxvQixDQUNBLGEsQ0FHSixJLENNcE1JLFUsQ0FDQSxXLENBQ0EsVyxDSCtDQSxnQyxDR25ESixpQixDTjJNSSxRLENBQ0Esa0IsQ08zTUosbUIsQ0FDSSxpQixDQUNBLGUsQ0FDQSxjLENBQ0EsZ0IsQ0FDQSxVLENBQ0EsYyxDQUNBLHNCLENBQUEsYyxDUGdOSix5Qk81TUksSSxDQUFBLFUsQ0FDQSxnQkFJUyxnQixDUDZNYixVLENPNU1JLCtCLENQZ05KLFUsQ083TUksZSxDQUNBLHlCLENQaU5KLGdCLENPOU1JLGlDLENQa05KLFksQ083TUksVSxDQUNJLFcsQ0FFSixZLENBQ0ksYyxDUGdOUiwwQk85TVEsWSxDQUVKLGVQa05KLGEsQ0FDSSxVLENBQ0EsVyxDQUNBLGMsQ0FDQSxlLENPMU1BLFMsQ0FDSSxXLENBREgsc0IsQ1A4TUQsYyxDQUdKLGUsQ0FDSSxhLENBQ0EsVSxDQUNBLFksQ0FHSixNLENPak1RLGMsQ0FDQSxRLENBQ0EsUSxDQUNBLHNDLENBQ0EsOEIsQ0FDQSxlLENBQ0Esa0IsQ0FDQSxrRCxDQUNBLDBDLENBQ0EsYSxDQVhILFMsQ1ArTUQsc0IsQ0FDQSxjLENBQ0EsWSxDQUNBLFksQ0FHSixZLENPck5LLFksQ1B5TkwsYyxDQUNJLG1CLENBQ0EsbUIsQ09sUkosWSxDQXdGUSxRLENBQ0EsbUIsQ1ArTFIsYSxDUXJTSSxrQixDQUNBLGUsQ0xnREEsYSxDSDBQSixpQixDUWhTUSxtQixDQUNBLGdCLENSc1NSLFksQ0FDSSxhLENBR0osYyxDQUVJLHdCLENBQ0EsaUIsQ0FDQSxlLENBQ0EsYyxDQUNBLGdCLENBQ0EsbUIsQ0FDQSxtQixDQUdKLGEsQ0FDSSxpQixDQUNBLFEsQ0FDQSxVLENRclNJLG9CLENSdVNKLFUsQ0FDQSxXLENBQ0EsUyxDQUNBLFEsQ0FDQSxjLENBQ0EsYyxDQUNBLFMsQ1FwU1Esb0IsQ1J1U1oscUIsQ0FDSSxVLENRbFNJLGlCLENSb1NKLFUsQ0FDQSxVLENBQ0EsTyxDQUNBLE0sQ0FDQSxxQixDQUdKLHFCLENRaFNRLCtCLENBQ0EsdUIsQ1JvU1Isb0IsQ1FoV0EsZ0MsQ1JrV0ksd0IsQ0FHSixtQixDQUNJLG1CLENBQ0EsTyxDQUdKLE8sQ0FDSSxpQixDUTNXSixpQixDUjZXSSxVLENBR0oseUJBQ0ksTyxDRzlUQSxtQkhtVUosVyxDUWxTUSxtQixDQUNBLG1CLENBQ0EsWSxDQUNBLHdCLENBQ0EscUIsQ0xyQ0osNkIsQ0gwVUEsd0IsQ0FDQSxxQixDUTlYSixrQixDUmtZQSxlLENBQ0ksaUIsQ0FDQSxLLENBQ0EsTSxDQUNBLFUsQ0FDQSw4QixDQUNBLHNCLENReFlKLG1CLENSMFlJLGdCLENBQ0EsVSxDQUNBLHlCLENBQ0EsaUUsQ0FHSix5QkFDSSxlLENRaFNRLHlCLENBQ0EsNkJScVNaLG1CLENRdlpBLGlCLENBMEhRLEssQ0ExSFIsTSxDQTZIUSxVLENSK1JKLDhCLENRN1JKLHNCLENBQ0ksbUIsQ0FDQSxnQixDQUFBLFUsQ0FBQSx5QixDQUNBLGlFLENSbVNKLGlCLENHbFhJLGUsQ0s0RUosZSxDUjJTQSxxQixDQTdIQSxpQixDQThISSxVLENBQ0EsVyxDQUdKLGUsQ1FwU0ksZSxDUnVTQSxnQyxDUXJTSixrQixDUnlTQSwwQlFyU0ksZSxDQUNBLGNSMFNKLHFCLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSx3QixDU2hjSixxQixDQUNJLDZCLENBQ0Esd0IsQ0FDQSxxQixDQUNBLGtCLENBQ0EsaUIsQ1RvY0oscUIsQ1M5YkksYyxDQUNJLGdCLENBQ0EsbUIsQ1RrY1IsMEJTL2I2QixZLENObUN6QixrQixDSGdhSiwwQlN4YkEsMEJBQUEsWSxDQUNJLG9CVDZiSixlLENBQ0ksVyxDUzViQSxXLENUOGJBLGUsQ0FDQSxpQixDUzliQSxpQixDVGdjQSxjLENBR0osMEJTdmNBLGUsQ0FTUSxjVG9jUix1QixDR3JiSSxpQixDTXhCSixNLENUZ2RJLEssQ0FDQSxXLENBQ0EsUyxDRzFiQSxpQixDTXhCSiwwQixDVHFkSSxzQixDQUNBLGMsQ0FXSixtQixDQVJBLG1CLENTcmJRLGlCLENBQ0EsTyxDQWJSLGtDLENUOGNJLDBCLENBYkosbUIsQ1M1YkksUyxDVG9jSixtQixDR3pjSSxVLENIK2NBLFUsQ0FHSixrQyxDQUNJLHNCLENBR0osOEIsQ1MxYlEsVSxDVDhiUiw4QixDUzFiSSxVLENUOGJKLFksQ1M1YkksaUIsQ1Q4YkEsbUIsQ1M1YkosbUIsQ0FDSSxZLENBQ0Esd0IsQ0FDQSxxQixDQUFBLGtCLENOdkNBLG1CLENIeWVKLDBCUzViUSxZLENUOGJBLDJCLENTdmNSLDZCLENBWVEsaUMsQ0FDQSw2QixDQUNBLHVCLENBQUEsb0IsQ1QrYkEsbUJBSVIsbUIsQ1MzYkksa0IsQ1QrYkosc0IsQ1MzYkksd0IsQ0FDQSxlLENBQ0EsYyxDQUNBLGdCLENBQ0EsbUIsQ0FBQSx3QixDTmxFQSxXLENIbWdCSix5QkFDSSxzQixDR3BnQkEsYyxDTXNESixlLENBb0JRLHFCVGljUixRLENTNWJBLHFCLENBQ0kscUMsQ0FDQSx1QixDQUNBLGlCLENBQ0EsVyxDVGdjSix5QkFDSSxRLENTNWJJLG9CVGljUixjLENTNWJJLGdCLENON0ZBLGEsQ00wRkosVSxDVG1jSSxpQixDQUNBLG9CLENBR0oseUJTNWJJLGMsQ0FDQSxxQlRpY0osYyxDQUNJLG1CLENBQ0EsbUIsQ1MzYkosWSxDQUNJLHdCLENBQ0EscUIsQ0FDQSxrQixDQUNBLHdCLENUNmJBLHFCLENTNWJBLDZCLENBQ0Esa0IsQ0FDQSxjLENBQ0EsbUIsQ0FDQSxlLENUZ2NKLDBCQUNJLGMsQ0FDSSxZLENVNW1CUixtQyxDQUNJLGdDLENWOG1CSSxvQixDVTVtQlIsbUIsQVZpbkJBLHlCVTNtQkksYyxDQUNBLG1DLENBQ0EsZ0MsQ0FDQSxzQixBVmduQkoseUJHemtCSSxjLENPNUNKLHNCVjJuQkEsb0IsQ1UxbUJRLGMsQ0FDQSxnQixDQUNBLGlCLENWNG1CSixrQixDVTNtQkksYyxDUHdCSixzQixDSHNsQkEsYyxDQUNBLGlCLENBQ0Esa0IsQ0FHSiwwQixDQUNJLG9CLENBQ0EsVSxDQUdKLHlCVXptQlEsb0IsQ0FDQSxjLENBQ0EsZ0IsQ0FDQSxtQixBVjhtQlIseUJBQ0ksb0IsQ1V6bUJRLGtCLENBRVIsY1Y2bUJKLDRCLENHL21CSSwwQixDSGluQkEsVSxDQUdKLGMsQ1VwbUJBLG1CLENBQ0ksbUIsQ0FBQSxZLENBQUEsa0IsQ1BqQkEsYyxDT2dCSixRLENWNm1CQSxvQixDQUNJLGMsQ0FDQSxlLENBQ0Esc0IsQ0FDQSxjLENBR0oseUJVeG1CUSxvQixDQUNBLGlCVjZtQlIsMEIsQ0cxb0JJLDhCLENING9CQSxzQixDQUdKLHdCLENBQ0ksVSxDQUNBLFcsQ0FDQSxtQixDQUNBLGdCLENBR0osTSxDVWptQlEsZSxDQUNBLFcsQ0FDQSxZLENWbW1CSixtQixDVWxtQkksMEIsQ0FDQSxVLENBRUosaUIsQ0FDSSxpQixDQUNBLHVCLENBQ0EsYyxDQUNBLFcsQ0FDQSxzQixDQUNBLGMsQ1ZxbUJSLHlCQUNJLE0sQ0d2cUJBLGUsQ08yREEsVyxDQWFRLGMsQVZzbUJaLHlCVS9sQlEsTSxDQUNBLFdWb21CUixZLENVL2xCUSwrQixDUHJGSix1QixDSHlyQkosWSxDR3pyQkksZSxDSDJyQkEsYyxDQUNBLGdCLENBQ0EsVyxDQUdKLHlCVTlsQkksWSxDQUNBLGMsQ0FDQSxnQixDVmdtQkksYUFJUixXLENBQ0ksZSxDQUNBLGMsQ1c3dkJKLGdCLENYaXdCQSx5QkFDSSxXLENBQ0ksYyxDVy92QlIsa0JYb3dCQSxXLENXL3ZCSSxpQixDQUFBLFEsQ0FDQSxVLENYa3dCQSxVLENBQ0EsVyxDQUdKLHlCVy92QkEsVyxDQUNJLFVYb3dCSixlLENXandCSSxpQixDWG13QkEsVSxDQUNBLFMsQ1dud0JBLCtCLENYcXdCQSx1QixDQUNBLHdCLENXcndCQSxlLENBQ0EsbUIsQ0FJQSxpQixDQUNJLHdCLENBQ0EsYSxDWHN3QlIsMEJXandCUSxlLENBQ0EsY1hzd0JSLFEsQ0FDSSxvQixDQUdKLGMsQ1c1dkJRLGlCLENYZ3dCUixhLENXNXZCUSxrQixDQUFBLHdCLENBUEgsZSxDQVVPLFUsQ0FWUCxrQixDWDJ3QkwseUJBQ0ksYSxDV3h2QkEsaUIsQ0FDSSw2QixBWDZ2QlIseUJXeHZCUSxhLENBQ0EsYyxDQUNBLFUsQ1gwdkJBLG9CQUlSLGtCLENXeHZCUSxpQixDQUNBLE8sQ0FDQSxrQyxDWDB2QkosMEIsQ1d2dkJKLFUsQ1gydkJBLHlCV3Z2Qkksa0IsQ1h5dkJJLFUsQ1d2dkJSLFcsQ0FDSSxVLENBQ0EsU1g0dkJKLHNCLENXdnZCSSxVLENBQ0EsVyxDWDJ2Qkosb0IsQ1k3MUJJLHdCLENBQ0EsZSxDVGdEQSxjLENTbkRKLGdCLENabzJCSSxtQixDQUNBLHdCLENZNzFCSixtQixDQUNJLGlCLENaaTJCSix5QkFDSSxvQixDWXgxQkEsYyxDQUNJLGtCWjYxQlIsbUIsQ0FDSSx3QixDWTUxQkksZSxDWjgxQkosYyxDWTcxQkksZ0IsQ1ppMkJSLHlCQUNJLG1CLENBQ0ksYyxDWTUxQkosa0JaaTJCSixZLENZNTFCUSxtQixDQUNBLG1CLENBQ0EsWSxDWmcyQlIseUJZMzFCWSxZLENBQ0EsMkIsQ0FDQSw0QixDQUNBLHlCLENBQ0EscUIsQ0FDQSx3QixDVElSLHFCLENTckJBLG9CQXVCSixrQixDQUNJLGdCLENaNjFCQSw2QixDWTMxQkosaUIsQ0FDSSxXLENBQ0EsWSxDQUdJLGtCLENUVkosaUIsQ0h5MkJKLDBCQUNJLGtCLENZejFCSixVLENBQ0ksYSxBWjgxQkoseUJBQ0ksa0IsQ1l6MUJJLFcsQ1R4QkosWSxDU2lCSixjLENBVVEsa0JaODFCUixrQixDQUNJLGlCLENZcjFCSixPLENBQ0ksUSxDQUNBLHNDLENUdkNBLDhCLENTcUNKLG1CLENaMjFCSSxpQixDQUdKLHNCLENZcjFCUSx3QixDQVRSLGUsQ1ppMkJJLGMsQ0FDQSxnQixDQUNBLGlCLENhMzdCSixhLENBQ0ksZSxDYis3QkosMEJhMTdCSSxzQixDQUNJLGdCLEFiKzdCUix5QmF6N0JRLHNCLENBQ0EsYyxDQUNBLGtCYjg3QlIscUIsQ0FDSSx3QixDQUNBLGUsQ0FDQSxjLENHNzVCQSxnQixDSCs1QkEsaUIsQ0FDQSxhLENBQ0EsZSxDQUNBLGEsQ0FDQSxlLENBR0osMEJBQ0kscUIsQ2F4N0JRLGMsQ0FDQSxnQixBYjY3QloseUJBQ0kscUIsQ0FDSSxjLENBQ0EsaUJBSVIsYSxDQUNJLGlCLENBQ0EsVyxDQUNBLGEsQ0FDQSx3QixDQUNBLGdCLENBR0oseUJhcDdCUSxhLENBRUEsYyxDQUNJLFUsQ0FBQSxjYnk3QlosUSxDQUNJLGlCLENBR0oseUJBQ0ksUSxDYXI3QkksY2IwN0JSLGMsQ0FDSSxpQixDQUdKLEssQ0FXQSxLLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ0FkSixLLENBT0ksaUIsQ0FDQSxvQixDQUpBLHdCLENBQ0EscUIsQ0FDQSw2QixDQUtKLEssQ0FJSSxXLENBQ0EsZSxDYWg3Qkksd0IsQ2JrN0JKLHFCLENBQ0Esa0IsQ0FDQSxzQixDQUNBLG1CLENBQ0EscUIsQ0FDQSxlLENBQ0EsTyxDQUdKLFUsQ0FDSSxpQixDQUNBLGUsQ0FHSixVLENBQ0ksd0IsQ0FDQSxlLENBQ0EsYyxDQUNBLGdCLENBQ0EsbUIsQ0FDQSxtQixDQUNBLGtCLENBQ0EsaUIsQ0FHSixhLENhNzZCUSxlLENiKzZCSixnQixDQUNBLFksQ0FDQSxlLENBQ0EsSyxDQUNBLGlCLENhMTZCSixzQixDQUNJLGMsQ0FJSiwyQixDQUNJLHdCLENDbEpKLHlDLENkK2pDQSwwQyxDYTk2QkEsVSxDYmk4QkEsYSxDQVhBLGMsQ0FjSSxlLENBRUEsZ0IsQ0FoQkosYyxDY3ZrQ0EsdUIsQ0FXSSxvQixDQUNJLHdCLENBQUEsbUIsQ0FBQSxtQixDQUpKLGMsQ2Qwa0NKLGEsQ2Nua0NRLHdCLENkcWtDSixpQixDR2ppQ0EsYyxDSHFpQ0EsYSxDQUdKLGEsQ2Nwa0NJLGlCLENYNEJBLE0sQ1c5QkosWSxDZDBrQ0ksVSxDQUdKLHNCLENBTUEsd0IsQ2N6a0NJLFUsQ0FDSSxpQixDQUNBLFMsQ2R1a0NSLHdCLENjaGtDSSxVLENkc2tDSixVLENjbGtDUSxlLENYT0oscUMsQ0g4akNBLGMsQ2M5akNKLHlCQUNJLFUsQ0FDQSxvQmRxa0NKLGdCLENjaGtDSSxvQixDZG9rQ0oseUJjamtDSSxnQixDWFZBLHFCWW5ESixnQixDQUNJLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDWjhDQSw2QixDWW5ESixrQixDZjRvQ0ksYyxDZWxvQ0EsVyxDQUNJLGlCLENBS1IseUJBQ0ksZ0IsQ0FDQSxhZnFvQ0osZ0IsQ2V2b0NBLHdCLENmeW9DSSxlLENBQ0EsYyxDZS9uQ0EsZ0IsQ0FDSSxvQixDQUNBLHdCLENBQ0EsbUIsQ0FDQSxTLENmaW9DSixtQixDQUdKLHdCLENBK0lBLHVCLENBRUksbUIsQ0FDQSxlLENBQ0Esb0IsQ0FuSkosd0IsQ0FLSSxTLENlbm9DSSxlLENmb29DSixnQixDQUdKLHlCZTduQ1EsZ0IsQ0FDQSxjLENBQ0Esa0Jma29DUixvQixDZTluQ1EsaUIsQ2YycUNSLEksQ0F6Q0EsSSxDQUNJLGlCLENHcm9DQSxjLENIeW9DSixRLENlN25DUSxVLENmaW9DUix5QmU3bkNRLEksQ0FDQSxjLENBQ0Esa0Jma29DUixNLENBQ0ksaUIsQ0FDQSxLLENBQ0EsVyxDQUdKLDBCZXpuQ1EsTSxDQUNBLFUsQ0FDQSxpQixBZjhuQ1IseUJlem5DSSxNLENmMm5DSSxlLENleG5DUixRLENBQ0ksVSxDWjVDQSxVLENZMkNKLFksQWZ1b0NBLHlCR2xyQ0ksSSxDWW1EQSxjLENBVVEsa0JmNG5DWixTLENBQ0ksc0IsQ2VubkNBLGMsQ2Z1bkNKLGUsQ2VybkNRLDBCLENBQ0Esd0IsQ2Z5bkNSLEssQ0duc0NJLG9CLENIdXNDSix5QkFDSSxLLENBQ0kscUJBSVIsVyxDZXpuQ1EsaUIsQ2Y2bkNSLFMsQ0FDSSxZLENBQ0EsbUMsQ0FDQSxnQyxDQUNBLHFCLENBQ0EsaUIsQ2V6bkNKLG1CLENBQ0ksaUIsQ2Y2bkNKLDBCRzN0Q0ksUyxDWTZGSixvQixDQU9RLGlCLENBQ0EsbUMsQ2YybkNBLGtDLEFBSVIseUJleG5DSSxTLENmMG5DSSxtQyxDR3R1Q0osZ0MsQ1l3R0osbUIsQ0FPUSxtQkFJUixlLENBQ0ksd0IsQ0FDQSxlLENBQ0EsYyxDQUNBLGdCLENmMm5DQSxtQixDR2x2Q0EsaUIsQ0hzdkNKLHlCQUNJLGUsQ0FFSSxjLENBQ0EsZ0IsQ0FDQSxpQkFJUix1QixDQUNJLGUsQ0FJQSxpQixDQUNBLGMsQ0FDQSxpQixDQUNBLE8sQ0FDQSxrQyxDQUNBLDBCLENBR0osVSxDQUNJLGUsQ0FHSixnQixDQUNJLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDQUNBLDZCLENBQ0Esa0IsQ0FDQSwrQixDQUdKLHlCQUNJLGdCLENBQ0ksb0JBSVIsZSxDQUNJLHdCLENBQ0EsZSxDQUNBLGMsQ0FDQSxnQixDQUNBLHdCLENBQ0EsbUIsQ0FDQSxtQixDQUNBLGMsQ0FHSix5QkFDSSxlLENBQ0ksYyxDQUNBLGtCQUlSLHVCLENBQ0ksaUIsQ0FHSiwrQixDQUNJLFUsQ0FDQSwwQixDQUNBLFUsQ0FDQSxvQixDQUNBLGlCLENBQ0EsVSxDQUNBLFcsQ0FDQSxzQixDQUNBLGMsQ0FHSixnQixDQUNJLGlCLENBQ0EsYyxDQUNBLGdCLENBQ0EsbUIsQ0FDQSxlLENBQ0Esa0IsQ0FDQSxrQixDQUdKLHlCQUNJLGdCLENBQ0ksYyxDQUNBLGdCLENBQ0EsbUJBSVIsaUIsQ0FDSSxnQixDQUdKLG1CLENBQ0ksZ0IsQ0FDQSxjLENBQ0EsZ0IsQ0FDQSxtQixDQUdKLHlCQUNJLGlCLENBQ0ksZ0IsQ0FHSixtQixDQUNJLGMsQ0FDQSxnQixDQUNBLGVBSVIsZ0IsQ0FDSSxlLENBQ0EscUIsQ0FHSix1QixDQUNJLHVDLENBR0osVSxDQUNJLFUsQ0FDQSxXLENBR0osYSxDQUNJLGlCLENBQ0EsYSxDQUNBLE8sQ0FHSiwwQkFDSSxhLENBQ0ksY0FJUixLLENBQ0ksZSxDQUNBLHFDLENBQ0EsYyxDQUdKLHlCQUNJLEssQ0FDSSxvQkFJUixXLENBQ0ksb0IsQ0FHSixXLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSxrQixDQUNBLGMsQ0FDQSxRLENBQ0Esd0IsQ0FDQSxxQixDQUNBLDZCLENBR0oseUJBQ0ksVyxDQUNJLFVBSVIsVSxDQUNJLHNCLENBQ0EsYyxDQUdKLHlCQUNJLFUsQ0FDSSx3QixBQUlSLHlCQUNJLFUsQ0FDSSxZQUlSLG9CLENBQ0ksZSxDQUNBLDhCLENBR0osZSxDQUNJLFUsQ0FDQSxXLENBQ0EsbUIsQ0FDQSxnQixDQUdKLGdCLENBQ0ksbUIsQ0FDQSxjLENBQ0EsZ0IsQ0FDQSxtQixDQUdKLHlCQUNJLGdCLENBQ0ksd0JBSVIsYyxDQUNJLGEsQ0FDQSxpQixDQUNBLFUsQ0FFQSxjLENBQ0EsZ0IsQ0FDQSxpQixDQUNBLHNDLENBQ0EsOEIsQ0FDQSxtQixDQUNBLGMsQ0FHSix5QkFDSSxjLENBQ0ksZUFJUixPLENBQ0ksdUMsQ0FDQSxxQixDQUNBLGlCLENBQ0EscUMsQ0FDQSxpQixDQUdKLHlCQUNJLE8sQ0FDSSxvQkFJUixhLENBRUksYyxDQUdKLFcsQ0FDSSxpQixDQUNBLFUsQ0FDQSxZLENBQ0Esa0IsQ0FDQSxlLENBR0oseUJBQ0ksVyxDQUNJLFksQ0FDQSxvQkFJUixnQixDQUNJLGlCLENBQ0EsVSxDQUNBLFcsQ0FDQSxtQixDQUNBLGdCLENBR0osaUIsQ0FDSSxpQixDQUNBLE8sQ0FDQSxRLENBQ0Esc0MsQ0FDQSw4QixDQUdKLHlCQUNJLGlCLENBQ0ksZ0JBSVIsbUIsQ0FDSSxpQixDQUNBLFMsQ0FDQSxXLENBQ0EsVyxDQUNBLFksQ0FDQSxzQixDQUNBLHdCLENBQ0EsNkMsQ0FDQSxxQyxDQUNBLGlCLENBR0osMEJBQ0ksbUIsQ0FDSSxVLENBQ0EsVSxBQUlSLHlCQUNJLG1CLENBQ0ksY0FJUix1QixDQUNJLGlCLENBQ0EsSyxDQUNBLE0sQ0FDQSxlLENBQ0EsWSxDQUNBLFUsQ0FDQSxlLENBR0oseUJBQ0ksdUIsQ0FDSSxhLENBQ0EsZSxDQUdKLHlCLENBQ0ksbUIsQ0FHSiwyQixDQUNJLFUsQ0FDQSxhQUlSLHdCLENBQ0ksVSxDQUNBLGMsQ0FDQSxnQixDQUdKLFEsQ0FDSSxVLENBQ0EsVyxDQUNBLGtCLENBR0osUyxDQUNJLFUsQ0FDQSxjLENBQ0EsNEIsQ0FHSix5QkFDSSxTLENBQ0kscUJBSVIsZ0IsQ0FDSSxjLENBQ0EsZ0IsQ0FDQSxpQixDQUNBLG9CLENBQ0Esd0IsQ0FDQSxtQixDQUNBLGtCLENBR0oseUJBQ0ksZ0IsQ0FDSSxjLENBQ0EsZ0IsQ0FDQSxxQixBQUlSLHlCQUNJLGdCLENBQ0ksZ0JBSVIsaUIsQ0FDSSxhLENBQ0EsbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FDQSxlLENBR0oseUJBQ0ksaUIsQ0FDSSxrQixDQUNBLGMsQ0FDQSx1QixDQUNBLG9CLENBQ0Esd0JBSVIsZ0IsQ0FDSSxjLENBQ0EsZ0IsQ0FDQSxpQixDQUNBLG9CLENBQ0Esd0IsQ0FHSix5QkFDSSxnQixDQUNJLG1CLENBQ0EsYyxDQUNBLGtCQUlSLGUsQ0FDSSxVLENBQ0EsYyxDQUNBLGMsQ0FDQSxnQixDQUdKLHlCQUNJLGUsQ0FDSSxjLENBQ0Esa0JBSVIsYSxDQUNJLGlCLENBQ0EsVyxDQUNBLFUsQ0FDQSx3QixDQUNBLGdCLENBR0oseUJBQ0ksYSxDQUNJLFUsQ0FDQSxPLENBQ0EsWUFJUixhLENBQ0ksaUIsQ0FDQSxZLENBQ0EsVSxDQUNBLHdCLENBQ0EsZ0IsQ0FHSix5QkFDSSxhLENBQ0ksYyIsImZpbGUiOiJhcHAubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpyb290IHtcbiAgLS1jLW9yYW5nZTogI0ZEODEyNztcbiAgLS1jLWJsdWU6ICMwMjFBNDI7XG5cbiAgLS1iZy1ncmV5LWxpZ2h0OiAjRjJGMkYyO1xuICAtLWMtZ3JleTogIzVBNUE1QTtcblxuICAtLWMtZm9udC1ibHVlOiAjMDIxQTQyO1xuICAtLWMtZm9udC1ncmV5OiAjQTdBN0E3O1xuXG5cbiAgLS1ib3JkZXItcmFkLWJsb2NrOiA2MHB4OyBcblxuXG59XG5cblxuXG4iLCI6cm9vdCB7XG4gICAgLS1jLW9yYW5nZTogI0ZEODEyNztcbiAgICAtLWMtYmx1ZTogIzAyMUE0MjtcbiAgICAtLWJnLWdyZXktbGlnaHQ6ICNGMkYyRjI7XG4gICAgLS1jLWdyZXk6ICM1QTVBNUE7XG4gICAgLS1jLWZvbnQtYmx1ZTogIzAyMUE0MjtcbiAgICAtLWMtZm9udC1ncmV5OiAjQTdBN0E3O1xuICAgIC0tYm9yZGVyLXJhZC1ibG9jazogNjBweDtcbn1cblxuLnNlY3Rpb24tdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnTmVvU2Fuc1cxRycsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zaXplOiA5NnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTVweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1jLWZvbnQtZ3JleSk7XG4gICAgcGFkZGluZy10b3A6IDEzMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuc2VjdGlvbi10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogNDhweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDU4cHg7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1MHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNDBweDtcbiAgICB9XG59XG5cbi5zZWN0aW9uLXRpdGxlLS1ibHVlIHtcbiAgICBjb2xvcjogdmFyKC0tYy1mb250LWJsdWUpO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5zZWN0aW9uLXRpdGxlLS13aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7XG59XG5cbi5ib2xkIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuXG4uc2VjdGlvbi10aXRsZV9faW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAtMTBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLnNlY3Rpb24tdGl0bGVfX2ltZyB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDUycHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC01cHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIH1cbn1cblxuLnNlY3Rpb24tdGl0bGUtLXdyYXAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmctbGVmdDogMTAwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5zZWN0aW9uLXRpdGxlLS13cmFwIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA2MHB4O1xuICAgIH1cbn1cblxuLmRlY19kZXNrIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5kZWNfbW9iIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuZGVjX2Rlc2sge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC5kZWNfbW9iIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgIH1cblxuICAgIC5tb2Jfd3JhcCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbn1cblxuLmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBlY3Mge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAxcztcbiAgICB0cmFuc2l0aW9uOiAxcztcbn1cblxuLnBlY3NfZGlzYXBwZWFyIHtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4uZml4ZWRCbG9jayB7XG4gICAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XG4gICAgbWF4LXdpZHRoOiBpbmhlcml0O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5oaWRkZW5CbG9jayB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0b3A6IDE1MHB4ICFpbXBvcnRhbnQ7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LVJlZ3VsYXIudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTW9udHNlcnJhdC1Cb2xkLnR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUxpZ2h0LnR0ZlwiKTtcbiAgZm9udC1zdHlsZTogbGlnaHQ7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcIk5lb1NhbnNXMUdcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9OZW9TYW5zVzFHLVJlZ3VsYXIub3RmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJOZW9TYW5zVzFHXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTmVvU2Fuc1cxRy1MaWdodC5vdGZcIik7XG4gIGZvbnQtc3R5bGU6IGxpZ2h0O1xufVxuXG4qIHtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xufVxuXG5ib2R5IHtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1iZy1ncmV5LWxpZ2h0KTtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTkyMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGNvbG9yOiB2YXIoLS1jLWZvbnQtcmVndWxhcik7XG4gICAgbWluLXdpZHRoOiAzMjBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtbXMtc2Nyb2xsLXNuYXAtdHlwZTogeSBtYW5kYXRvcnk7XG4gICAgc2Nyb2xsLXNuYXAtdHlwZTogeSBtYW5kYXRvcnk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgICBwYWRkaW5nOiAxMnB4O1xuICAgIH1cbn1cblxuLndyYXAge1xuICAgIG1heC13aWR0aDogMTE2MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5saSwgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLmJ0biwgLmJ0bi13aGl0ZSB7XG4gICAgd2lkdGg6IDI4MHB4O1xuICAgIGhlaWdodDogNTRweDtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jLWdvbGQtcHJpbWFyeSk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAyN3B4O1xuICAgIGZvbnQtZmFtaWx5OiAnSW50ZXInO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuMnM7XG4gICAgdHJhbnNpdGlvbjogLjJzO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuYnRuLCAuYnRuLXdoaXRlIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbn1cblxuLmJ0bjpob3ZlciwgLmJ0bi13aGl0ZTpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tYy1idG4tcHJpbWFyeSk7XG59XG5cbi5idG4td2hpdGUge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgY29sb3I6IHZhcigtLWMtZm9udC1ibGFjayk7XG59XG5cbi5idG4td2hpdGU6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWMtYnRuLXNlYy1ob3Zlcik7XG59XG5cbi5idXJnZXJfbWVudSB7XG4gICAgd2lkdGg6IDI4cHg7XG4gICAgaGVpZ2h0OiAyM3B4O1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gICAgLmJ1cmdlcl9tZW51IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuXG4ub3ZlcmxheS1kYXJrIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgb3BhY2l0eTogMDtcbiAgICB6LWluZGV4OiAtMTA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gICAgdHJhbnNpdGlvbjogLjNzO1xufVxuXG4ub3ZlcmxheS0tc2hvd24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG9wYWNpdHk6IC44O1xuICAgIHotaW5kZXg6IDEwMDA7XG59XG5cbi5tb2RhbCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogLTUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDMzcHg7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAycHggMHB4IDhweCA0cHggcmdiYSgzNCwgNjAsIDgwLCAwLjIpO1xuICAgIGJveC1zaGFkb3c6IDJweCAwcHggOHB4IDRweCByZ2JhKDM0LCA2MCwgODAsIDAuMik7XG4gICAgei1pbmRleDogMTAwMDA7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG4gICAgd2lkdGg6IDExNjBweDtcbiAgICBoZWlnaHQ6IDcyMHB4O1xufVxuXG4ubW9kYWxfX3dyYXAge1xuICAgIHBhZGRpbmc6IDYwcHg7XG59XG5cbi5tb2RhbF9faW1hZ2VzIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjBweDtcbn1cblxuLm1vZGFsX19pbWFnZSB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1heC13aWR0aDogMzAlO1xufVxuXG4ubW9kYWxfX2ltYWdlIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4ubW9kYWxfX3RleHQge1xuICAgIG1heC13aWR0aDogNzUlO1xufVxuXG4ubW9kYWxfX3RleHQgcCB7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgY29sb3I6IHZhcigtLWMtZ3JleSk7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7XG59XG5cbi5tb2RhbF9fY2xvc2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDYwcHg7XG4gICAgcmlnaHQ6IDYwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvcGFjaXR5OiAxO1xufVxuXG4ubW9kYWxfX2Nsb3NlOjpiZWZvcmUsIC5tb2RhbF9fY2xvc2U6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzcHg7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4ubW9kYWxfX2Nsb3NlOjpiZWZvcmUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cblxuLm1vZGFsX19jbG9zZTo6YWZ0ZXIge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4ubW9kYWwub3BlbmVkLW1vZGFsIHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gICAgdG9wOiA1MCU7XG59XG5cbi5oZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiA1NXB4IDgwcHg7XG4gICAgY29sb3I6ICNmZmY7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgIC5oZWFkZXIge1xuICAgICAgICBwYWRkaW5nOiAzMHB4IDIwcHg7XG4gICAgfVxufVxuXG4uaGVhZGVyLXRvcCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyLXRvcF9fYmcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB6LWluZGV4OiAtMTtcbiAgICAtd2Via2l0LWZpbHRlcjogYnJpZ2h0bmVzcyg1MCUpO1xuICAgIGZpbHRlcjogYnJpZ2h0bmVzcyg1MCUpO1xuICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogY2FsYygxMDAlICsgMTUwcHgpO1xuICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWQtYmxvY2spIHZhcigtLWJvcmRlci1yYWQtYmxvY2spIDAgMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLmhlYWRlci10b3BfX2JnIHtcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgKyAxMDBweCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHggMzBweCAwIDA7XG4gICAgfVxufVxuXG4uaGVhZGVyLXRvcF9fYmctdmlkIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogLTE7XG4gICAgLXdlYmtpdC1maWx0ZXI6IGJyaWdodG5lc3MoNTAlKTtcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoNTAlKTtcbiAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSArIDE1MHB4KTtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkLWJsb2NrKSB2YXIoLS1ib3JkZXItcmFkLWJsb2NrKSAwIDA7XG59XG5cbi5oZWFkZXItdG9wX19sb2dvIHtcbiAgICBtYXgtd2lkdGg6IDE4OXB4O1xuICAgIG1heC1oZWlnaHQ6IDc5cHg7XG59XG5cbi5oZWFkZXItdG9wX19sb2dvIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uaGVhZGVyIC5uLW1lbnUge1xuICAgIG1heC13aWR0aDogNDYlO1xuICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcbiAgICBib3JkZXItcmFkaXVzOiA5MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gICAgLmhlYWRlciAubi1tZW51IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbi5oZWFkZXIgLm4tbWVudV9fbGlzdCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDMwcHggNTBweDtcbn1cblxuLmhlYWRlciAubi1tZW51X19pdGVtIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xufVxuXG4uaGVhZGVyIC5uLW1lbnVfX2l0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgcGFkZGluZy1yaWdodDogNTBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDE0MjBweCkge1xuICAgIC5oZWFkZXIgLm4tbWVudV9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjVweDtcbiAgICB9XG59XG5cbi5oZWFkZXIgLm4tbGFuZyB7XG4gICAgd2lkdGg6IDE2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gICAgLmhlYWRlciAubi1sYW5nIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbi5oZWFkZXIgLm4tbGFuZ19fc3dpdGNoIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWMtb3JhbmdlKTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgICB0cmFuc2l0aW9uOiAuM3M7XG59XG5cbi5oZWFkZXIgLm4tbGFuZ19fcnUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAyOHB4O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLmhlYWRlciAubi1sYW5nX19lbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIHJpZ2h0OiAyOHB4O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuLmhlYWRlciAubi1sYW5nLmVuIC5uLWxhbmdfX3N3aXRjaCB7XG4gICAgbGVmdDogY2FsYygxMDAlIC0gODBweCk7XG59XG5cbi5oZWFkZXIgLm4tbGFuZy5lbiAubi1sYW5nX19ydSB7XG4gICAgY29sb3I6ICMwMDA7XG59XG5cbi5oZWFkZXIgLm4tbGFuZy5lbiAubi1sYW5nX19lbiB7XG4gICAgY29sb3I6ICNmZmY7XG59XG5cbi5oZWFkZXItbWFpbiB7XG4gICAgcGFkZGluZy10b3A6IDQ4MHB4O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMzAwcHgpIHtcbiAgICAuaGVhZGVyLW1haW4ge1xuICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IHJldmVyc2U7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IHN0YXJ0O1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICB9XG59XG5cbi5oZWFkZXItbWFpbl9fdGl0bGUge1xuICAgIHBhZGRpbmctcmlnaHQ6IDUwcHg7XG59XG5cbi5oZWFkZXItbWFpbl9fc3VidGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE1MCU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgd2lkdGg6IDQ4MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuaGVhZGVyLW1haW5fX3N1YnRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBtYXgtd2lkdGg6IDI4MHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcbiAgICB9XG59XG5cbi5wcm9kdWN0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWQtYmxvY2spO1xuICAgIHNjcm9sbC1zbmFwLWFsaWduOiBzdGFydDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAucHJvZHVjdCB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgfVxufVxuXG4ucHJvZHVjdF9fd3JhcCB7XG4gICAgbWF4LXdpZHRoOiAxMTkwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDAgMTVweCAxMzBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLnByb2R1Y3RfX3dyYXAge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMDBweDtcbiAgICB9XG59XG5cbi5wcm9kdWN0cy1tZW51IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgcGFkZGluZy1ib3R0b206IDc1cHg7XG4gICAgbWluLXdpZHRoOiAzMDBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAgIC5wcm9kdWN0cy1tZW51IHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgMWZyKTtcbiAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAzMHB4O1xuICAgICAgICBncmlkLXJvdy1nYXA6IDE1cHg7XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAucHJvZHVjdHMtbWVudSB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogMjBweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCkge1xuICAgIC5wcm9kdWN0cy1tZW51IHtcbiAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxMHB4O1xuICAgIH1cbn1cblxuLnByb2R1Y3RzLW1lbnVfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjlweDtcbiAgICBwYWRkaW5nOiAyMHB4IDMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gICAgdHJhbnNpdGlvbjogLjNzO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4ucHJvZHVjdHMtbWVudV9faXRlbTpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2ZkODAyNzZlO1xuICAgIGNvbG9yOiAjMDAwMDAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAucHJvZHVjdHMtbWVudV9faXRlbSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNzBweCkge1xuICAgIC5wcm9kdWN0cy1tZW51X19pdGVtIHtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICB9XG59XG5cbi5wcm9kdWN0cy1tZW51X19pdGVtLS1hY3RpdmUge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWMtb3JhbmdlKTtcbiAgICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2R1Y3RzLWxpc3Qge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgZ2FwOiAyNXB4O1xufVxuXG4ucHJvZHVjdHMtbGlzdF9faXRlbSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG1heC13aWR0aDogMzcwcHg7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuMnM7XG4gICAgdHJhbnNpdGlvbjogLjJzO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAucHJvZHVjdHMtbGlzdF9faXRlbSB7XG4gICAgICAgIG1heC13aWR0aDogMjU0cHg7XG4gICAgfVxufVxuXG4ucHJvZHVjdHMtbGlzdF9faXRlbTpob3ZlciB7XG4gICAgLXdlYmtpdC1maWx0ZXI6IGJyaWdodG5lc3MoMS4xKTtcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMS4xKTtcbn1cblxuLnByb2R1Y3RzLWxpc3RfX2l0ZW0gaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5vcmRlciB7XG4gICAgbWFyZ2luLXRvcDogMzZweDtcbiAgICB3aWR0aDogMzUwcHg7XG4gICAgaGVpZ2h0OiAxODdweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMDJweDtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jLW9yYW5nZSk7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgcGFkZGluZzogNDBweCA2NHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiBjYWxjKDEwMCUgLSAzNTBweCk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHotaW5kZXg6IDEwMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5vcmRlciB7XG4gICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgICAgIHdpZHRoOiAzMDZweDtcbiAgICAgICAgaGVpZ2h0OiAxNDlweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgIC5vcmRlciB7XG4gICAgICAgIGxlZnQ6IDIycHg7XG4gICAgfVxufVxuXG4ub3JkZXI6aG92ZXIge1xuICAgIC13ZWJraXQtZmlsdGVyOiBicmlnaHRuZXNzKDExMCUpO1xuICAgIGZpbHRlcjogYnJpZ2h0bmVzcygxMTAlKTtcbn1cblxuLm9yZGVyX190ZXh0IHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICB3aWR0aDogMTcwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5vcmRlcl9fdGV4dCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE1cHg7XG4gICAgICAgIHdpZHRoOiAxMjFweDtcbiAgICB9XG59XG5cbi5vcmRlcl9fdm9sIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogNjRweDtcbiAgICBsaW5lLWhlaWdodDogNzhweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLm9yZGVyX192b2wge1xuICAgICAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA1OXB4O1xuICAgIH1cbn1cblxuLm9yZGVyX19hcnIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDkwcHg7XG4gICAgcmlnaHQ6IDcwcHg7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAub3JkZXJfX2FyciB7XG4gICAgICAgIHRvcDogNjJweDtcbiAgICB9XG59XG5cbi5wcm9kdWN0X19kZWNvciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtMzclO1xuICAgIHRvcDogNDI0cHg7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgIGZvbnQtZmFtaWx5OiAnTmVvU2Fuc1cxRyc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDExNS4yMjJweDtcbiAgICBsaW5lLWhlaWdodDogMTM4cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogI0Y4RjhGODtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDE1MzBweCkge1xuICAgIC5wcm9kdWN0X19kZWNvciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4ubWlzc2lvbiB7XG4gICAgcGFkZGluZy1ib3R0b206IDEzMHB4O1xufVxuXG4ubWlzc2lvbl9fd3JhcCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWlzc2lvbi1tYWluIHtcbiAgICBwYWRkaW5nOiA5MHB4IDExM3B4O1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWMtYmx1ZSk7XG4gICAgbWF4LXdpZHRoOiA2NTNweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tYm90dG9tOiA3NXB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAubWlzc2lvbi1tYWluIHtcbiAgICAgICAgcGFkZGluZzogNjBweCA1MHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4IDMwcHggMHB4IDBweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5taXNzaW9uLW1haW4ge1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAgIH1cbn1cblxuLm1pc3Npb24tbWFpbl9faW1nIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGxlZnQ6IC01NXB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAubWlzc2lvbi1tYWluX19pbWcge1xuICAgICAgICB3aWR0aDogMTNweDtcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICBsZWZ0OiAtMjVweDtcbiAgICAgICAgdG9wOiAzMyU7XG4gICAgfVxufVxuXG4ubWlzc2lvbi1tYWluX19pbWcgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5taXNzaW9uLW1haW5fX3RpdGxlIHtcbiAgICBmb250LWZhbWlseTogJ05lb1NhbnNXMUcnO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiA0M3B4O1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLm1pc3Npb24tbWFpbl9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIH1cbn1cblxuLm1pc3Npb24tbWFpbl9fdGV4dCB7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjlweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLm1pc3Npb24tbWFpbl9fdGV4dCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE1cHg7XG4gICAgfVxufVxuXG4ubWlzc2lvbi1hZHYge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5taXNzaW9uLWFkdiB7XG4gICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG59XG5cbi5taXNzaW9uLWFkdl9faXRlbSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDIsIDI1LCA2NCwgMC4zKTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogMzAwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTE4MHB4KSB7XG4gICAgLm1pc3Npb24tYWR2X19pdGVtIHtcbiAgICAgICAgd2lkdGg6IDI1dnc7XG4gICAgICAgIGhlaWdodDogMjV2dztcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5taXNzaW9uLWFkdl9faXRlbSB7XG4gICAgICAgIHdpZHRoOiAyMjdweDtcbiAgICAgICAgaGVpZ2h0OiAyMjdweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBtYXJnaW4tdG9wOiAtMTVweDtcbiAgICB9XG59XG5cbi5taXNzaW9uLWFkdl9fdGV4dCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIGNvbG9yOiB2YXIoLS1jLWJsdWUpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm1pc3Npb24tYWR2X190b3AtdGV4dCB7XG4gICAgZm9udC1mYW1pbHk6ICdOZW9TYW5zVzFHJztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogNjRweDtcbiAgICBsaW5lLWhlaWdodDogNzdweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWluLWhlaWdodDogODBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgIC5taXNzaW9uLWFkdl9fdG9wLXRleHQge1xuICAgICAgICBmb250LXNpemU6IDUwcHg7XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAubWlzc2lvbi1hZHZfX3RvcC10ZXh0IHtcbiAgICAgICAgZm9udC1zaXplOiA2NHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMTVweDtcbiAgICB9XG59XG5cbi5taXNzaW9uLWFkdl9fc3VidGV4dCB7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMTMwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICM1QTVBNUE7XG4gICAgbWluLXdpZHRoOiAyNTBweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtaW4taGVpZ2h0OiA4MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgLm1pc3Npb24tYWR2X19zdWJ0ZXh0IHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBtaW4td2lkdGg6IGF1dG87XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAubWlzc2lvbi1hZHZfX3N1YnRleHQge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIG1pbi13aWR0aDogMjUwcHg7XG4gICAgfVxufVxuXG4ubWlzc2lvbl9fZGVjIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDI3NnB4O1xuICAgIGJvdHRvbTogLTE1MHB4O1xuICAgIC13ZWJraXQtZmlsdGVyOiBibHVyKDlweCk7XG4gICAgZmlsdGVyOiBibHVyKDlweCk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5taXNzaW9uX19kZWMge1xuICAgICAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgICAgIHJpZ2h0OiA3MnB4O1xuICAgICAgICBib3R0b206IC0xNXB4O1xuICAgIH1cbn1cblxuLmhpc3Rvcnkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDg4MHB4KSB7XG4gICAgLmhpc3Rvcnkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cblxuLmhpc3RvcnlfX3dyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnJhaWwge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1ib3R0b206IDEzMHB4O1xufVxuXG4ueWVhciB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDUycHg7XG4gICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiA1MCU7XG59XG5cbi55ZWFyX19hcnIge1xuICAgIG1hcmdpbi1yaWdodDogNDBweDtcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4ueWVhcl9fbnVtIHtcbiAgICBmb250LWZhbWlseTogJ05lb1NhbnNXMUcnO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiA2NHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA3N3B4O1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgICBjb2xvcjogdmFyKC0tYy1ibHVlKTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLmV2ZW50c19faXRlbSB7XG4gICAgbWF4LXdpZHRoOiA2NjBweDtcbiAgICBtaW4taGVpZ2h0OiAyNTVweDtcbiAgICBwYWRkaW5nOiA2MHB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgdG9wOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcbiAgICB0cmFuc2l0aW9uOiAuNHM7XG59XG5cbi5ldmVudHNfX2l0ZW06bnRoLWNoaWxkKDJuKSB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tYy1ibHVlKTtcbn1cblxuLmV2ZW50c19faXRlbTpudGgtY2hpbGQoMm4pIC5ldmVudHNfX3RpdGxlIHtcbiAgICBjb2xvcjogI2ZmZjtcbn1cblxuLmV2ZW50c19faXRlbTpudGgtY2hpbGQoMm4pIC5ldmVudHNfX3RleHQge1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG4uZXZlbnRzX190aXRsZSB7XG4gICAgb250LWZhbWlseTogJ05lb1NhbnNXMUcnO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNDAlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogdmFyKC0tYy1ibHVlKTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcbn1cblxuLmV2ZW50c19fdGV4dCB7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0MCU7XG4gICAgY29sb3I6ICM1QTVBNUE7XG59XG5cbi5oaXN0b3J5X19kZWMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMTUwcHg7XG4gICAgei1pbmRleDogLTE7XG59XG5cbi5oaXN0b3J5X19kZWNvci1jaXJjbGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDI1MHB4O1xufVxuXG4uaGlzdG9yeV9fZGVjb3ItY2lyY2xlLTIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEyMDBweDtcbn1cblxuLmdlb2dyYXBoeSB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkLWJsb2NrKTtcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5nZW9ncmFwaHkge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgIH1cbn1cblxuLmdlb2dyYXBoeV9fd3JhcCB7XG4gICAgcGFkZGluZy1ib3R0b206IDE1MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuZ2VvZ3JhcGh5X193cmFwIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDYwcHg7XG4gICAgfVxufVxuXG4uY291bnRyaWVzX19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgd2lkdGg6IDUxMHB4O1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLmNvdW50cmllc19fbGlzdCB7XG4gICAgICAgIHdpZHRoOiAzNjBweDtcbiAgICB9XG59XG5cbi5jb3VudHJpZXNfX2l0ZW0ge1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG59XG5cbi5jb3VudHJpZXNfX2l0ZW06OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXDIwMjJcIjtcbiAgICBjb2xvcjogdmFyKC0tYy1ibHVlKTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDFlbTtcbiAgICBtYXJnaW4tbGVmdDogLTFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLmNvdW50cmllc19faXRlbSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgfVxufVxuXG4uZ2VvZ3JhcGh5X19tYXAtd3JhcCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubWFwIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDU1cHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4ubWFwIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5tYXAge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1MHB4O1xuICAgIH1cbn1cblxuLmxhYmVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAxNTBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgIC5sYWJlbCB7XG4gICAgICAgIHJpZ2h0OiA1MHB4O1xuICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLmxhYmVsIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMjVweDtcbiAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICByaWdodDogMzBweDtcbiAgICB9XG5cbiAgICAubGFiZWwgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuXG4jbWFwIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDU1cHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAjbWFwIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICBwYWRkaW5nLXRvcDogNTBweDtcbiAgICB9XG59XG5cbiNtYXAgcGF0aCB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuMnM7XG4gICAgdHJhbnNpdGlvbjogLjJzO1xufVxuXG4jbWFwIHBhdGg6aG92ZXIge1xuICAgIHN0cm9rZS13aWR0aDogNXB4ICFpbXBvcnRhbnQ7XG4gICAgc3Ryb2tlOiAjZjVmZjZmICFpbXBvcnRhbnQ7XG59XG5cbi53b3JrIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTMwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NTBweCkge1xuICAgIC53b3JrIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDcwcHg7XG4gICAgfVxufVxuXG4ud29ya19fd3JhcCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ud29yay1hZHYge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xuICAgIGdyaWQtY29sdW1uLWdhcDogMTIwcHg7XG4gICAgZ3JpZC1yb3ctZ2FwOiA0MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIHBhZGRpbmctbGVmdDogMzVweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgIC53b3JrLWFkdiB7XG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogNjBweDtcbiAgICAgICAgZ3JpZC1yb3ctZ2FwOiAzMHB4O1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCAxZnIpO1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLndvcmstYWR2IHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMWZyKTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNiwgMWZyKTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG4gICAgICAgIGdyaWQtcm93LWdhcDogMTVweDtcbiAgICB9XG59XG5cbi53b3JrLWFkdl9faXRlbSB7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC53b3JrLWFkdl9faXRlbSB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgICB9XG59XG5cbi53b3JrLWFkdl9faXRlbTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcMjYwNVwiO1xuICAgIGNvbG9yOiB2YXIoLS1jLWJsdWUpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogLTM1cHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi53b3JrLWZvcm0ge1xuICAgIG1heC13aWR0aDogNTYwcHg7XG59XG5cbi53b3JrLWZvcm1fX2NhdHMge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjRDlEOUQ5O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcbiAgICAud29yay1mb3JtX19jYXRzIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICB9XG59XG5cbi53b3JrLWZvcm1fX2NhdCB7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpO1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gICAgLndvcmstZm9ybV9fY2F0IHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTVweDtcbiAgICB9XG59XG5cbi53b3JrLWZvcm1fX2NhdC0tYWN0aXZlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi53b3JrLWZvcm1fX2NhdC0tYWN0aXZlOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tYy1vcmFuZ2UpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiA0cHg7XG4gICAgYm90dG9tOiAtM3B4O1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICAgIHRyYW5zaXRpb246IC4zcztcbn1cblxuLndvcmstZm9ybV9faXRlbSB7XG4gICAgcGFkZGluZzogMzVweCA1MHB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjlweDtcbiAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gICAgLndvcmstZm9ybV9faXRlbSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgIHBhZGRpbmc6IDI1cHggMzBweDtcbiAgICB9XG59XG5cbi53b3JrLWZvcm1fX29mZmVyIHtcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcbn1cblxuLndvcmstZm9ybV9fb2ZmZXIgcCB7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcbiAgICAud29yay1mb3JtX19vZmZlciB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgIH1cblxuICAgIC53b3JrLWZvcm1fX29mZmVyIHAge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICB9XG59XG5cbi53b3JrLWZvcm1fX2xpbmsge1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgY29sb3I6IHZhcigtLWMtb3JhbmdlKTtcbn1cblxuLndvcmstZm9ybV9fbGluay0tc3R5bGUge1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB2YXIoLS1jLW9yYW5nZSk7XG59XG5cbi53b3JrX19hcnIge1xuICAgIHdpZHRoOiAyMnB4O1xuICAgIGhlaWdodDogMTVweDtcbn1cblxuLndvcmtfX3BlcnNvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogLTEzMHB4O1xuICAgIHJpZ2h0OiAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTA1MHB4KSB7XG4gICAgLndvcmtfX3BlcnNvbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4ubmV3cyB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkLWJsb2NrKTtcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5uZXdzIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICB9XG59XG5cbi5uZXdzX193cmFwIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjMwcHg7XG59XG5cbi5uZXdzX19saXN0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGdhcDogMzVweDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODUwcHgpIHtcbiAgICAubmV3c19fbGlzdCB7XG4gICAgICAgIGdhcDogMTVweDtcbiAgICB9XG59XG5cbi5uZXdzLWl0ZW0ge1xuICAgIHdpZHRoOiBjYWxjKDMzJSAtIDM1cHgpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDg1MHB4KSB7XG4gICAgLm5ld3MtaXRlbSB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDE1cHgpO1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgLm5ld3MtaXRlbSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cblxuLm5ld3MtaXRlbV9faW1nLXdyYXAge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYm9yZGVyLXJhZGl1czogMzBweCAzMHB4IDBweCAzMHB4O1xufVxuXG4ubmV3cy1pdGVtX19pbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuLm5ld3MtaXRlbV9fZGVzYyB7XG4gICAgcGFkZGluZzogMzBweCAzMHB4IDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAubmV3cy1pdGVtX19kZXNjIHtcbiAgICAgICAgcGFkZGluZzogMTVweCAzMHB4IDYwcHg7XG4gICAgfVxufVxuXG4ubmV3c19fc3BvaWxlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy10b3A6IDExNXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLWxpbmU6IHVuZGVybGluZTtcbiAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lO1xuICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgLm5ld3NfX3Nwb2lsZXIge1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICB9XG59XG5cbi5mb290ZXIge1xuICAgIGJhY2tncm91bmQ6IHVybCguLi9pbWFnZXMvZm9vdGVyL2JnLnBuZyk7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBtYXJnaW4tdG9wOiAtMTAwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZC1ibG9jayk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuZm9vdGVyIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICB9XG59XG5cbi5mb290ZXJfX3dyYXAge1xuICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIHBhZGRpbmc6IDAgMTVweDtcbn1cblxuLmZvb3Rlci1tYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDcwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgLmZvb3Rlci1tYXAge1xuICAgICAgICBoZWlnaHQ6IDE5NXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIH1cbn1cblxuLmZvb3Rlci1tYXBfX2ltZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuLmZvb3Rlci1tYXBfX2ljb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDQ4JTtcbiAgICBsZWZ0OiA1MSU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLmZvb3Rlci1tYXBfX2ljb24ge1xuICAgICAgICBtYXgtd2lkdGg6IDE2cHg7XG4gICAgfVxufVxuXG4uZm9vdGVyLW1hcF9fYWRyZXNzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMjdweDtcbiAgICByaWdodDogMTY0cHg7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogMTgzcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4IDYwcHg7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tYy1ibHVlKTtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCA1cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgIGJveC1zaGFkb3c6IDBweCA1cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgIHBhZGRpbmc6IDQ1cHggNDBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAgIC5mb290ZXItbWFwX19hZHJlc3Mge1xuICAgICAgICByaWdodDogNTBweDtcbiAgICAgICAgdG9wOiAzMHB4O1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgLmZvb3Rlci1tYXBfX2FkcmVzcyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4uZm9vdGVyLW1hcF9fYWRyZXNzLm1vYiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAuZm9vdGVyLW1hcF9fYWRyZXNzLm1vYiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIH1cblxuICAgIC5mb290ZXItbWFwX19hZHJlc3MubW9iIHAge1xuICAgICAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICB9XG5cbiAgICAuZm9vdGVyLW1hcF9fYWRyZXNzLm1vYiBzdmcge1xuICAgICAgICB3aWR0aDogMjJweDtcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgIH1cbn1cblxuLmZvb3Rlci1tYXBfX2FkcmVzcy10ZXh0IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG59XG5cbi5tYXBfZG90IHtcbiAgICB3aWR0aDogMjJweDtcbiAgICBoZWlnaHQ6IDE4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjJweDtcbn1cblxuLmNvbnRhY3RzIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwYWRkaW5nOiA3NXB4IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmZmY7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5jb250YWN0cyB7XG4gICAgICAgIHBhZGRpbmc6IDM1cHggMCAzMHB4O1xuICAgIH1cbn1cblxuLmNvbnRhY3RzX19waG9uZSB7XG4gICAgZm9udC1zaXplOiA0OHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA1OXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgcGFkZGluZy1ib3R0b206IDM1cHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgLmNvbnRhY3RzX19waG9uZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDM5cHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1MHB4KSB7XG4gICAgLmNvbnRhY3RzX19waG9uZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICB9XG59XG5cbi5jb250YWN0c19fZW1haWxzIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLmNvbnRhY3RzX19lbWFpbHMge1xuICAgICAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG59XG5cbi5jb250YWN0c19fZW1haWwge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMjlweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuY29udGFjdHNfX2VtYWlsIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgfVxufVxuXG4uZm9vdGVyX19wb2xpY3kge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHBhZGRpbmc6IDQwcHggMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5mb290ZXJfX3BvbGljeSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE1cHg7XG4gICAgfVxufVxuXG4uZm9vdGVyX19kZWMxIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDE4MHB4O1xuICAgIHRvcDogLTEwMHB4O1xuICAgIC13ZWJraXQtZmlsdGVyOiBibHVyKDlweCk7XG4gICAgZmlsdGVyOiBibHVyKDlweCk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5mb290ZXJfX2RlYzEge1xuICAgICAgICB3aWR0aDogOTNweDtcbiAgICAgICAgdG9wOiAzcHg7XG4gICAgICAgIHJpZ2h0OiA0NXB4O1xuICAgIH1cbn1cblxuLmZvb3Rlcl9fZGVjMiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMjg1cHg7XG4gICAgbGVmdDogNTM0cHg7XG4gICAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoOXB4KTtcbiAgICBmaWx0ZXI6IGJsdXIoOXB4KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLmZvb3Rlcl9fZGVjMiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluTmhjM012WDNaaGNtbGhZbXhsY3k1elkzTnpJaXdpYzJGemN5OWZaV3hsYldWdWRITXVjMk56Y3lJc0luTmhjM012WDJadmJuUnpMbk5qYzNNaUxDSnpZWE56TDE5dGFYaHBibk11YzJOemN5SXNJbk5oYzNNdlgyZHNiMkpoYkM1elkzTnpJaXdpYzJGemN5OWpiMjF3YjI1bGJuUnpMMTlpZFhSMGIyNXpMbk5oYzNNaUxDSnpZWE56TDJOdmJYQnZibVZ1ZEhNdlgyMXZZbWxzWlMxdFpXNTFMbk5oYzNNaUxDSnpZWE56TDJOdmJYQnZibVZ1ZEhNdlgyMXZaR0ZzTG5OaGMzTWlMQ0p6WVhOekwzTmxZM1JwYjI1ekwxOW9aV0ZrWlhJdWMyRnpjeUlzSW5OaGMzTXZjMlZqZEdsdmJuTXZYM0J5YjJSMVkzUXVjMkZ6Y3lJc0luTmhjM012YzJWamRHbHZibk12WDIxcGMzTnBiMjR1YzJGemN5SXNJbk5oYzNNdmMyVmpkR2x2Ym5NdlgyaHBjM1J2Y25rdWMyRnpjeUlzSW5OaGMzTXZjMlZqZEdsdmJuTXZYMmRsYjJkeVlYQm9lUzV6WVhOeklpd2ljMkZ6Y3k5elpXTjBhVzl1Y3k5ZmQyOXlheTV6WVhOeklpd2ljMkZ6Y3k5elpXTjBhVzl1Y3k5ZmJtVjNjeTV6WVhOeklpd2ljMkZ6Y3k5elpXTjBhVzl1Y3k5ZlptOXZkR1Z5TG5OaGMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UlVGRFJTeHRRa0ZCVnp0RlFVTllMR2xDUVVGVE8wVkJSVlFzZDBKQlFXZENPMFZCUTJoQ0xHbENRVUZUTzBWQlJWUXNjMEpCUVdNN1JVRkRaQ3h6UWtGQll6dEZRVWRrTEhkQ1FVRnRRaXhGUVVGQk96dEJRMWh5UWp0RlFVTkpMSFZFUVVGMVJEdEZRVU4yUkN4clFrRkJhMEk3UlVGRGJFSXNaMEpCUVdkQ08wVkJRMmhDTEdWQlFXVTdSVUZEWml4clFrRkJhMEk3UlVGRGJFSXNlVUpCUVhsQ08wVkJRM3BDTEhsQ1FVRjVRanRGUVVONlFpeHJRa0ZCYTBJN1JVRkRiRUlzYjBKQlFXOUNMRVZCUVVFN08wRkJSM2hDTzBWQldrRTdTVUZqVVN4bFFVRmxPMGxCUTJZc2FVSkJRV2xDTzBsQlEycENMR2xDUVVGcFFqdEpRVU5xUWl4dlFrRkJiMElzUlVGQlFTeEZRVU4yUWpzN1FVRkxURHRGUVVOSkxIbENRVUY1UWp0RlFVTjZRaXhuUWtGQlowSXNSVUZCUVRzN1FVRkhjRUk3UlVGRFNTeFhRVUZYTEVWQlFVRTdPMEZCUjJZN1JVRkRTU3huUWtGQlowSXNSVUZCUVRzN1FVRkhjRUk3UlVGRFNTeHZRa0ZCYjBJc1JVRkJRVHM3UVVGSGVFSTdSVUZLUVR0SlFVMVJMR2RDUVVGblFqdEpRVU5vUWl4dFFrRkJiVUk3U1VGRGJrSXNhVUpCUVdsQ0xFVkJRVUVzUlVGRGNFSTdPMEZCUjB3N1JVRkRTU3hqUVVGak8wVkJRMlFzYlVKQlFXMUNMRVZCUVVFN08wRkJSM1pDTzBWQlRFRTdTVUZQVVN4clFrRkJhMElzUlVGQlFTeEZRVU55UWpzN1FVRkhURHRGUVVOSkxHVkJRV1VzUlVGQlFUczdRVUZIYmtJN1JVRkRTU3hoUVVGaExFVkJRVUU3TzBGQlIycENPMFZCVWtFN1NVRlZVU3hoUVVGaExFVkJRVUU3UlVGT2NrSTdTVUZWVVN4bFFVRmxMRVZCUVVFN1JVRkhia0k3U1VGRFNTeGpRVUZqTEVWQlFVRXNSVUZEYWtJN08wRkJSMHc3UlVGRFNTeGhRVUZoTEVWQlFVRTdPMEZCUjJwQ08wVkJRMGtzVlVGQlZUdEZRVU5XTEhOQ1FVRmpPMFZCUVdRc1kwRkJZeXhGUVVGQk96dEJRVWRzUWp0RlFVTkpMRlZCUVZVc1JVRkJRVHM3UVVGSFpEdEZRVU5KTERCQ1FVRXdRanRGUVVNeFFpeHJRa0ZCYTBJN1JVRkRiRUlzVjBGQlZ6dEZRVU5ZTEUxQlFVMDdSVUZEVGl4M1FrRkJkMElzUlVGQlFUczdRVUZITlVJN1JVRkRTU3hWUVVGVk8wVkJRMVlzY1VKQlFYRkNMRVZCUVVFN08wRkRlRWQ2UWp0RlFVTkpMSGxDUVVGNVFqdEZRVU42UWl3eVEwRkJNa01zUlVGQlFUczdRVUZITDBNN1JVRkRTU3g1UWtGQmVVSTdSVUZEZWtJc2QwTkJRWGRETzBWQlEzaERMR2xDUVVGcFFpeEZRVUZCT3p0QlFVZHlRanRGUVVOSkxIbENRVUY1UWp0RlFVTjZRaXg1UTBGQmVVTTdSVUZEZWtNc2FVSkJRV2xDTEVWQlFVRTdPMEZCUjNKQ08wVkJRMGtzZVVKQlFYbENPMFZCUTNwQ0xESkRRVUV5UXl4RlFVRkJPenRCUVVjdlF6dEZRVU5KTEhsQ1FVRjVRanRGUVVONlFpeDVRMEZCZVVNN1JVRkRla01zYVVKQlFXbENMRVZCUVVFN08wRkRlRUp5UWl3clFrRkJRVHRCUVU5QkxEWkNRVUZCTzBGQlQwRXNNRU5CUVVFN1FVRlBRU3gzUTBGQlFUdEJRVTFCTERCRFFVRkJPMEZCVDBFc1owTkJRVUU3UVVGUFFTeGhRVUZCTzBGQlQwRXNhVU5CUVVFN1FVRlBRU3hwUTBGQlFUdEJRVkZCTEhsQ1FVRkJPMEZCZVVOQkxEWkNRVUZCTzBGRGVrZEJPMFZCUTBVc09FSkJRVGhDTzBWQlEzUkNMSE5DUVVGelFqdEZRVU01UWl4aFFVRmhPMFZCUTJJc1ZVRkJWVHRGUVVOV0xGTkJRVk1zUlVGQlFUczdRVUZIV0R0RlFVTkZMRFJEUVVFMFF6dEZRVU0xUXl4blEwRkJaME1zUlVGQlFUczdRVUZIYkVNN096czdPenRGUVUxRkxGTkJRVk1zUlVGQlFUczdRVUZIV0R0RlFVTkZMR2xDUVVGcFFqdEZRVU5xUWl4alFVRmpPMFZCUTJRc05FSkJRVFJDTzBWQlF6VkNMR2RDUVVGblFqdEZRVU5vUWl4aFFVRmhPMFZCUTJJc2EwSkJRV3RDTzBWQlEyeENMR2xEUVVFMlFqdE5RVUUzUWl3MlFrRkJOa0lzUlVGQlFUczdRVUZITDBJN1JVRldRVHRKUVZsSkxHRkJRV0VzUlVGQlFTeEZRVU5rT3p0QlFVZElPMFZCUTBVc2FVSkJRV2xDTzBWQlEycENMR05CUVdNN1JVRkRaQ3hYUVVGWExFVkJRVUU3TzBGQlNXSTdSVUZEUlN4blFrRkJaMElzUlVGQlFUczdRVUZIYkVJN1JVRkRSU3h4UWtGQmNVSTdSVUZEY2tJc1kwRkJZeXhGUVVGQk96dEJRMjVFYUVJN1JVRkRTU3haUVVGWk8wVkJRMW9zV1VGQldUdEZRVU5hTEdsRFFVRnBRenRGUVVOcVF5eHJRa0ZCYTBJN1JVRkRiRUlzV1VGQldUdEZRVU5hTEcxQ1FVRnRRanRGUVVOdVFpeHZRa0ZCYjBJN1JVRkRjRUlzYTBKQlFXdENPMFZCUTJ4Q0xHZENRVUZuUWp0RlFVTm9RaXhsUVVGbE8wVkJRMllzYVVKQlFXbENPMFZCUTJwQ0xHTkJRV003UlVGRFpDeGxRVUZsTzBWQlEyWXNkVUpCUVdVN1JVRkJaaXhsUVVGbExFVkJRVUU3UlVaeFEyWTdTVVZ1UkVvN1RVRm5RbEVzWlVGQlpTeEZRVUZCTEVWQldUaENPMFZCTlVKeVJEdEpRVzlDVVN4blEwRkJaME1zUlVGQlFUdEZRVVZ3UXp0SlFVVkpMR2RDUVVGblFqdEpRVU5vUWl3d1FrRkJNRUlzUlVGQlFUdEpRVWczUWp0TlFVMVBMR3REUVVGclF5eEZRVUZCT3p0QlF6VkNPVU03UlVGRFNTeFhRVUZYTzBWQlExZ3NXVUZCV1R0RlFVTmFMR0ZCUVdFN1JVRkRZaXhsUVVGbExFVkJRVUU3UlVnclEyWTdTVWR1UkVvN1RVRlBVU3hqUVVGakxFVkJRVUVzUlVGQlN6czdRVU5PTTBJN1JVRkRTU3hYUVVGWE8wVkJRMWdzV1VGQldUdEZRVU5hTEdWQlFXVTdSVUZEWml4blFrRkJaMEk3UlVGRGFFSXNWVUZCVlR0RlFVTldMRmxCUVZrN1JVRkRXaXgxUWtGQlpUdEZRVUZtTEdWQlFXVXNSVUZCUVRzN1FVRkZia0k3UlVGRFNTeGpRVUZqTzBWQlEyUXNWMEZCVnp0RlFVTllMR0ZCUVdFc1JVRkJRVHM3UVVGRmFrSTdSVUZEU1N4bFFVRmxPMFZCUTJZc1UwRkJVenRGUVVOVUxGTkJRVk03UlVGRFZDeDNRMEZCWjBNN1ZVRkJhRU1zWjBOQlFXZERPMFZCUTJoRExHZENRVUZuUWp0RlFVTm9RaXh0UWtGQmJVSTdSVUZEYmtJc2VVUkJRV2xFTzFWQlFXcEVMR2xFUVVGcFJEdEZRVU5xUkN4alFVRmpPMFZCUTJRc1ZVRkJWVHRGUVVOV0xIVkNRVUZsTzBWQlFXWXNaVUZCWlR0RlFVTm1MR0ZCUVdFN1JVRkRZaXhoUVVGaExFVkJRVUU3UlVGSFlqdEpRVU5KTEdGQlFXRXNSVUZCUVR0RlFVVnFRanRKUVVOSkxHOUNRVUZoTzBsQlFXSXNiMEpCUVdFN1NVRkJZaXhoUVVGaE8wbEJRMklzVTBGQlV6dEpRVU5VTEc5Q1FVRnZRaXhGUVVGQk8wVkJSWGhDTzBsQlEwa3NiVUpCUVcxQ08wbEJRMjVDTEdkQ1FVRm5RanRKUVVOb1FpeGpRVUZqTEVWQlFVRTdTVUZJYWtJN1RVRk5UeXhYUVVGWE8wMUJRMWdzV1VGQldUdE5RVU5hTEc5Q1FVRnBRanRUUVVGcVFpeHBRa0ZCYVVJc1JVRkJRVHRGUVVsNlFqdEpRVU5KTEdOQlFXTXNSVUZCUVR0SlFVUnFRanROUVV0UExHOUNRVUZ2UWp0TlFVTndRaXg1UWtGQmVVSTdUVUZEZWtJc2EwSkJRV3RDTzAxQlEyeENMR2RDUVVGblFqdE5RVU5vUWl4bFFVRmxPMDFCUTJZc2FVSkJRV2xDTzAxQlEycENMRzlDUVVGdlFqdE5RVU53UWl4dlFrRkJiMElzUlVGQlFUdEZRVkUxUWp0SlFVTkpMR3RDUVVGclFqdEpRVU5zUWl4VFFVRlRPMGxCUTFRc1YwRkJWenRKUVVOWUxIRkNRVUZ4UWp0SlFVTnlRaXhYUVVGWE8wbEJRMWdzV1VGQldUdEpRVU5hTEZWQlFWVTdTVUZEVml4WlFVRlpPMGxCUTFvc1owSkJRV2RDTzBsQlEyaENMR1ZCUVdVN1NVRkRaaXhWUVVGVkxFVkJRVUU3U1VGWVlqdE5RV2RDVHl4WFFVRlhPMDFCUTFnc2EwSkJRV3RDTzAxQlEyeENMRmRCUVZjN1RVRkRXQ3hYUVVGWE8wMUJRMWdzVVVGQlVUdE5RVU5TTEU5QlFVODdUVUZEVUN4elFrRkJjMElzUlVGQlFUdEpRWFJDTjBJN1RVRXdRazhzWjBOQlFYZENPMk5CUVhoQ0xIZENRVUYzUWl4RlFVRkJPMGxCTVVJdlFqdE5RVGhDVHl4cFEwRkJlVUk3WTBGQmVrSXNlVUpCUVhsQ0xFVkJRVUU3UlVGeVJuSkRPMGxCZDBaUkxIRkNRVUZ4UWp0SlFVTnlRaXhSUVVGUkxFVkJRVUU3TzBGRGVFZG9RanRGUVVOSkxHdENRVUZyUWp0RlFVTnNRaXhyUWtGQmEwSTdSVUZEYkVJc1YwRkJWeXhGUVVGQk8wVk1aMFJZTzBsTGJrUktPMDFCVVZFc2EwSkJRV3RDTEVWQlFVRXNSVUZ4U0VZN1JVRnFTSEJDTzBsQlEwa3NiMEpCUVdFN1NVRkJZaXh2UWtGQllUdEpRVUZpTEdGQlFXRTdTVUZEWWl4NVFrRkJPRUk3VVVGQk9VSXNjMEpCUVRoQ08xbEJRVGxDTERoQ1FVRTRRanRKUVVNNVFpeDVRa0ZCYlVJN1VVRkJia0lzYzBKQlFXMUNPMWxCUVc1Q0xHMUNRVUZ0UWl4RlFVRkJPMGxCUlc1Q08wMUJRMGtzYTBKQlFXdENPMDFCUTJ4Q0xFMUJRVTA3VFVGRFRpeFBRVUZQTzAxQlExQXNWMEZCVnp0TlFVTllMQ3RDUVVGMVFqdGpRVUYyUWl4MVFrRkJkVUk3VFVGRmRrSXNiMEpCUVdsQ08xTkJRV3BDTEdsQ1FVRnBRanROUVVOcVFpeFhRVUZYTzAxQlExZ3NNRUpCUVRCQ08wMUJRekZDTEd0RlFVRnZSU3hGUVVGQk8wMU1kMEkxUlR0UlMyeERTVHRWUVdGUkxEQkNRVUV3UWp0VlFVTXhRaXcwUWtGQk5FSXNSVUZCUVN4RlFVRkxPMGxCUlhwRE8wMUJRMGtzYTBKQlFXdENPMDFCUTJ4Q0xFMUJRVTA3VFVGRFRpeFBRVUZQTzAxQlExQXNWMEZCVnp0TlFVTllMQ3RDUVVGMVFqdGpRVUYyUWl4MVFrRkJkVUk3VFVGRmRrSXNiMEpCUVdsQ08xTkJRV3BDTEdsQ1FVRnBRanROUVVOcVFpeFhRVUZYTzAxQlExZ3NNRUpCUVRCQ08wMUJRekZDTEd0RlFVRnZSU3hGUVVGQk8wbEJTM2hGTzAxQlEwa3NaMEpCUVdkQ08wMUJRMmhDTEdkQ1FVRm5RaXhGUVVGQk8wMUJSbTVDTzFGQlMwOHNWMEZCVnp0UlFVTllMRmxCUVZrc1JVRkJRVHRGUVhSRU5VSTdTVUY1UkZFc1kwRkJZenRKUVVOa0xHZENRVUZuUWp0SlFVTm9RaXh4UTBGQmNVTTdTVUZEY2tNc2JVSkJRVzFDTEVWQlFVRTdTVXhVZGtJN1RVdHVSRW83VVVFclJGa3NZVUZCWVN4RlFVRkJMRVZCYVVKcFFqdEpRV2hHTVVNN1RVRnJSVmtzYjBKQlFXRTdUVUZCWWl4dlFrRkJZVHROUVVGaUxHRkJRV0U3VFVGRFlpeDVRa0ZCT0VJN1ZVRkJPVUlzYzBKQlFUaENPMk5CUVRsQ0xEaENRVUU0UWp0TlFVTTVRaXg1UWtGQmJVSTdWVUZCYmtJc2MwSkJRVzFDTzJOQlFXNUNMRzFDUVVGdFFqdE5RVU51UWl4clFrRkJhMElzUlVGQlFUdEpRWEpGT1VJN1RVRjNSVmtzWlVGQlpUdE5RVU5tTEdsQ1FVRnBRanROUVVOcVFpeHhRa0ZCY1VJc1JVRkJRVHRKUVRGRmFrTTdUVUUyUlZrc2JVSkJRVzFDTEVWQlFVRTdUVXd4UWpOQ08xRkxia1JLTzFWQlowWm5RaXh0UWtGQmJVSXNSVUZCUVN4RlFVRkxPMFZCYUVaNFF6dEpRVzFHVVN4WlFVRlpPMGxCUTFvc1dVRkJXVHRKUVVOYUxHZENRVUZuUWp0SlFVTm9RaXhyUWtGQmEwSTdTVUZEYkVJc2EwSkJRV3RDTzBsQlEyeENMR1ZCUVdVc1JVRkJRVHRKVEhKRGJrSTdUVXR1UkVvN1VVRXlSbGtzWVVGQllTeEZRVUZCTEVWQmQwSkhPMGxCYmtnMVFqdE5RVGhHV1N4clFrRkJhMEk3VFVGRGJFSXNUMEZCVHp0TlFVTlFMRTFCUVUwN1RVRkRUaXhaUVVGWk8wMUJRMW9zVlVGQlZUdE5RVU5XTEd0Q1FVRnJRanROUVVOc1Fpd3lRa0ZCTWtJN1RVRkRNMElzZFVKQlFXVTdUVUZCWml4bFFVRmxMRVZCUVVFN1NVRnlSek5DTzAxQmVVZFpMR3RDUVVGclFqdE5RVU5zUWl4UlFVRlJPMDFCUTFJc1ZVRkJWVHROUVVOV0xHMURRVUV5UWp0alFVRXpRaXd5UWtGQk1rSXNSVUZCUVR0SlFUVkhka003VFVFclIxa3NhMEpCUVd0Q08wMUJRMnhDTEZGQlFWRTdUVUZEVWl4WFFVRlhPMDFCUTFnc2JVTkJRVEpDTzJOQlFUTkNMREpDUVVFeVFqdE5RVU16UWl4WFFVRlhMRVZCUVVFN1JVRnVTSFpDTzBsQmRVaFJMSFZDUVVGMVFpeEZRVUZCTzBWQmRrZ3ZRanRKUVRCSVVTeFhRVUZYTEVWQlFVRTdSVUV4U0c1Q08wbEJOa2hSTEZkQlFWY3NSVUZCUVRzN1FVRkZia0k3UlVGRFNTeHJRa0ZCYTBJN1JVRkRiRUlzYjBKQlFXRTdSVUZCWWl4dlFrRkJZVHRGUVVGaUxHRkJRV0U3UlVGRFlpeDVRa0ZCYlVJN1RVRkJia0lzYzBKQlFXMUNPMVZCUVc1Q0xHMUNRVUZ0UWp0RlFVTnVRaXh2UWtGQmIwSXNSVUZCUVR0RlRHaEdjRUk3U1VzMFJVbzdUVUZQVVN3MFFrRkJPRUk3VFVGQk9VSXNPRUpCUVRoQ08xVkJRVGxDTEd0RFFVRTRRanRqUVVFNVFpdzRRa0ZCT0VJN1RVRkRPVUlzZDBKQlFXdENPMVZCUVd4Q0xIRkNRVUZyUWp0alFVRnNRaXhyUWtGQmEwSXNSVUZCUVN4RlFVRkxPenRCUVVjdlFqdEZRVU5KTEcxQ1FVRnRRaXhGUVVGQk96dEJRVVYyUWp0RlFVTkpMSGxDUVVGNVFqdEZRVU42UWl4blFrRkJaMEk3UlVGRGFFSXNaVUZCWlR0RlFVTm1MR2xDUVVGcFFqdEZRVU5xUWl4eFFrRkJjVUk3UlVGRGNrSXNlVUpCUVhsQ08wVkJRM3BDTEZsQlFWa3NSVUZCUVR0RlRHcEhXanRKU3pCR1NqdE5RVlZSTEdWQlFXVTdUVUZEWml4blFrRkJaMEk3VFVGRGFFSXNiMEpCUVc5Q0xFVkJRVUVzUlVGQlN6czdRVU42U21wRE8wVkJRMGtzYzBKQlFYTkNPMFZCUTNSQ0xITkRRVUZ6UXp0RlFVTjBReXgzUWtGQmQwSTdSVUZEZUVJc2EwSkJRV3RDTzBWQlEyeENMRmxCUVZrc1JVRkJRVHRGVGpoRFdqdEpUVzVFU2p0TlFWRlJMRzFDUVVGdFFpeEZRVUZCTEVWQlYxazdSVUZTYmtNN1NVRkRTU3hwUWtGQmFVSTdTVUZEYWtJc1kwRkJZenRKUVVOa0xGZEJRVmM3U1VGRFdDeHJRa0ZCYTBJN1NVRkRiRUlzY1VKQlFYRkNMRVZCUVVFN1NVNXRRM3BDTzAxTmVFTkJPMUZCVVZFc2IwSkJRVzlDTEVWQlFVRXNSVUZCU3pzN1FVRlJja003UlVGRFNTeHZRa0ZCWVR0RlFVRmlMRzlDUVVGaE8wVkJRV0lzWVVGQllUdEZRVU5pTEhsQ1FVRnRRanROUVVGdVFpeHpRa0ZCYlVJN1ZVRkJia0lzYlVKQlFXMUNPMFZCUTI1Q0xIbENRVUU0UWp0TlFVRTVRaXh6UWtGQk9FSTdWVUZCT1VJc09FSkJRVGhDTzBWQlF6bENMRzFDUVVGbE8wMUJRV1lzWlVGQlpUdEZRVU5tTEc5Q1FVRnZRanRGUVVOd1FpeG5Ra0ZCWjBJc1JVRkJRVHRGVG10Q2FFSTdTVTE0UWtvN1RVRlRVU3hoUVVGaE8wMUJRMklzY1VOQlFYRkRPMDFCUTNKRExHdERRVUZyUXp0TlFVTnNReXh4UWtGQmNVSTdUVUZEY2tJc2EwSkJRV3RDTEVWQlFVRXNSVUZSVVR0RlRrYzVRanRKVFhoQ1NqdE5RV2RDVVN4eFEwRkJjVU03VFVGRGNrTXNhME5CUVd0RE8wMUJRMnhETEhGQ1FVRnhRaXhGUVVGQkxFVkJSMHM3UlU1SE9VSTdTVTE0UWtvN1RVRnhRbEVzY1VKQlFYRkNMRVZCUVVFc1JVRkJTenM3UVVGSGJFTTdSVUZEU1N4bFFVRmxPMFZCUTJZc2FVSkJRV2xDTzBWQlEycENMR3RDUVVGclFqdEZRVU5zUWl4dFFrRkJiVUk3UlVGRGJrSXNaVUZCWlR0RlFVTm1MSFZDUVVGbE8wVkJRV1lzWlVGQlpUdEZRVU5tTEd0Q1FVRnJRanRGUVVOc1FpeHRRa0ZCYlVJc1JVRkJRVHRGUVZKMlFqdEpRVmxSTEhGQ1FVRnhRanRKUVVOeVFpeGpRVUZqTEVWQlFVRTdSVTVpYkVJN1NVMUJTanROUVdsQ1VTeGxRVUZsTzAxQlEyWXNhVUpCUVdsQ08wMUJRMnBDTEd0Q1FVRnJRaXhGUVVGQkxFVkJVMFk3UlU0MVFuQkNPMGxOUVVvN1RVRnpRbEVzYlVKQlFXMUNPMDFCUTI1Q0xHRkJRV0VzUlVGQlFTeEZRVXRITzBWQlJuQkNPMGxCUTBrc01rSkJRVEpDTzBsQlF6TkNMRmRCUVZjc1JVRkJRVHM3UVVGSGJrSTdSVUZEU1N4dlFrRkJZVHRGUVVGaUxHOUNRVUZoTzBWQlFXSXNZVUZCWVR0RlFVTmlMRzFDUVVGbE8wMUJRV1lzWlVGQlpUdEZRVU5tTEZOQlFWTXNSVUZCUVRzN1FVRkZZanRGUVVOSkxHVkJRV1U3UlVGRFppeG5Ra0ZCWjBJN1JVRkRhRUlzZFVKQlFXVTdSVUZCWml4bFFVRmxMRVZCUVVFN1JVNTJRMlk3U1UxdlEwbzdUVUZOVVN4blFrRkJaMElzUlVGQlFTeEZRVkZOTzBWQlpEbENPMGxCVTFFc0swSkJRWFZDTzFsQlFYWkNMSFZDUVVGMVFpeEZRVUZCTzBWQlZDOUNPMGxCV1ZFc1YwRkJWenRKUVVOWUxGbEJRVms3U1VGRFdpeHZRa0ZCYVVJN1QwRkJha0lzYVVKQlFXbENMRVZCUVVFN08wRkJTWHBDTzBWQlEwa3NaMEpCUVdkQ08wVkJRMmhDTEZsQlFWazdSVUZEV2l4aFFVRmhPMFZCUTJJc2IwSkJRVzlDTzBWQlEzQkNMREpDUVVFeVFqdEZRVU16UWl4WFFVRlhPMFZCUTFnc2EwSkJRV3RDTzBWQlEyeENMR3RDUVVGclFqdEZRVU5zUWl4M1FrRkJkMEk3UlVGRGVFSXNaVUZCWlR0RlFVTm1MRmxCUVZrN1JVRkRXaXgxUWtGQlpUdEZRVUZtTEdWQlFXVXNSVUZCUVR0RlRteEZaanRKVFhORVNqdE5RV1ZSTEdkQ1FVRm5RanROUVVOb1FpeFpRVUZaTzAxQlExb3NZVUZCWVN4RlFVRkJMRVZCVFdkQ08wVk9OMFZxUXp0SlRYTkVTanROUVc5Q1VTeFZRVUZWTEVWQlFVRXNSVUZIYlVJN1JVRjJRbkpETzBsQmRVSlJMR2REUVVGM1FqdFpRVUY0UWl4M1FrRkJkMElzUlVGQlFUczdRVUZGYUVNN1JVRkRTU3huUWtGQlowSTdSVUZEYUVJc1pVRkJaVHRGUVVObUxHbENRVUZwUWp0RlFVTnFRaXhaUVVGWkxFVkJRVUU3UlU1dVJsbzdTVTByUlVvN1RVRlBVU3hsUVVGbE8wMUJRMllzYVVKQlFXbENPMDFCUTJwQ0xGbEJRVmtzUlVGQlFTeEZRVUZMT3p0QlFVVjZRanRGUVVOSkxHZENRVUZuUWp0RlFVTm9RaXhsUVVGbE8wVkJRMllzYVVKQlFXbENMRVZCUVVFN1JVNDNSbXBDTzBsTk1FWktPMDFCVFZFc1pVRkJaVHROUVVObUxHbENRVUZwUWl4RlFVRkJMRVZCUVVzN08wRkJSVGxDTzBWQlEwa3NhMEpCUVd0Q08wVkJRMnhDTEZOQlFWTTdSVUZEVkN4WFFVRlhPMFZCUTFnc1YwRkJWenRGUVVOWUxGbEJRVmtzUlVGQlFUdEZUbmhIV2p0SlRXMUhTanROUVZGUkxGTkJRVk1zUlVGQlFTeEZRVUZMT3p0QlFVZDBRanRGUVVOSkxHdENRVUZyUWp0RlFVTnNRaXhYUVVGWE8wVkJRMWdzVlVGQlZUdEZRVU5XTEdkRFFVRjNRanRWUVVGNFFpeDNRa0ZCZDBJN1JVRkRlRUlzZVVKQlFYbENPMFZCUTNwQ0xHZENRVUZuUWp0RlFVTm9RaXh2UWtGQmIwSTdSVUZEY0VJc2EwSkJRV3RDTzBWQlEyeENMSGxDUVVGNVFqdEZRVU42UWl4alFVRmpMRVZCUVVFN1JVNTRTR1E3U1UwNFIwbzdUVUZoVVN4aFFVRmhMRVZCUVVFc1JVRkJTenM3UVVNNVN6RkNPMFZCUTBrc2NVSkJRWEZDTEVWQlFVRTdPMEZCUlhwQ08wVkJRMGtzYTBKQlFXdENMRVZCUVVFN08wRkJSM1JDTzBWQlEwa3NiVUpCUVcxQ08wVkJRMjVDTEhsQ1FVRjVRanRGUVVONlFpeG5Ra0ZCWjBJN1JVRkRhRUlzVjBGQlZ6dEZRVU5ZTEcxQ1FVRnRRaXhGUVVGQk8wVlFkVU51UWp0SlR6VkRTanROUVZGUkxHdENRVUZyUWp0TlFVTnNRaXhuUTBGQlowTXNSVUZCUVN4RlFUWkRTanRGVUZab1F6dEpUelZEU2p0TlFWbFJMR1ZCUVdVN1RVRkRaaXhYUVVGWE8wMUJRMWdzYlVKQlFXMUNMRVZCUVVFc1JVRjNRMU03UlVGMFEyaERPMGxCUTBrc2EwSkJRV3RDTzBsQlEyeENMRkZCUVZFN1NVRkRVaXh0UTBGQk1rSTdXVUZCTTBJc01rSkJRVEpDTzBsQlF6TkNMRmRCUVZjc1JVRkJRVHRKVUhkQ1pqdE5UelZDUVR0UlFVOVJMRmRCUVZjN1VVRkRXQ3haUVVGWk8xRkJRMW9zVjBGQlZ6dFJRVU5ZTEZGQlFWRXNSVUZCUVN4RlFVbFRPMGxCWkhoQ08wMUJZVThzVjBGQlZ6dE5RVU5ZTEZsQlFWa3NSVUZCUVR0RlFVVndRanRKUVVOSkxIbENRVUY1UWp0SlFVTjZRaXhuUWtGQlowSTdTVUZEYUVJc1pVRkJaVHRKUVVObUxHbENRVUZwUWp0SlFVTnFRaXh4UWtGQmNVSTdTVUZEY2tJc2VVSkJRWGxDTzBsQlEzcENMRzlDUVVGdlFqdEpRVU53UWl4clFrRkJhMElzUlVGQlFUdEpVRWwwUWp0TlQxcEJPMUZCVjFFc1pVRkJaVHRSUVVObUxHbENRVUZwUWl4RlFVRkJMRVZCUVVzN1JVRkZPVUk3U1VGRFNTeDVRa0ZCZVVJN1NVRkRla0lzWjBKQlFXZENPMGxCUTJoQ0xHVkJRV1U3U1VGRFppeHBRa0ZCYVVJc1JVRkJRVHRKVUU1eVFqdE5UMFZCTzFGQlQxRXNaVUZCWlR0UlFVTm1MR2xDUVVGcFFpeEZRVUZCTEVWQlFVczdPMEZCVFd4RE8wVkJRMGtzYjBKQlFXRTdSVUZCWWl4dlFrRkJZVHRGUVVGaUxHRkJRV0VzUlVGQlFUdEZVR3BDWWp0SlQyZENTanROUVVsUkxEUkNRVUZ6UWp0TlFVRjBRaXcyUWtGQmMwSTdWVUZCZEVJc01FSkJRWE5DTzJOQlFYUkNMSE5DUVVGelFqdE5RVU4wUWl4NVFrRkJiVUk3VlVGQmJrSXNjMEpCUVcxQ08yTkJRVzVDTEcxQ1FVRnRRaXhGUVVGQkxFVkJkVVZSTzBWQmJrVXZRanRKUVVOSkxHbENRVUZwUWp0SlFVTnFRaXhyUTBGQmMwTTdTVUZEZEVNc2EwSkJRV3RDTzBsQlEyeENMRmxCUVZrN1NVRkRXaXhoUVVGaE8wbEJRMklzYTBKQlFXdENPMGxCUTJ4Q0xHMUNRVUZ0UWp0SlFVTnVRaXhyUWtGQmEwSXNSVUZCUVR0SlVHcERkRUk3VFU5NVFrRTdVVUZqVVN4WFFVRlhPMUZCUTFnc1dVRkJXU3hGUVVGQkxFVkJUVlU3U1ZBNVF6bENPMDFQZVVKQk8xRkJhMEpSTEZsQlFWazdVVUZEV2l4aFFVRmhPMUZCUTJJc1pVRkJaVHRSUVVObUxHbENRVUZwUWl4RlFVRkJMRVZCUVVzN1JVRkxPVUk3U1VGRFNTeHJRa0ZCYTBJN1NVRkRiRUlzVVVGQlVUdEpRVU5TTEZOQlFWTTdTVUZEVkN4M1EwRkJaME03V1VGQmFFTXNaME5CUVdkRE8wbEJRMmhETEc5Q1FVRnZRanRKUVVOd1FpeHJRa0ZCYTBJc1JVRkJRVHRGUVVWMFFqdEpRVU5KTEhsQ1FVRjVRanRKUVVONlFpeG5Ra0ZCWjBJN1NVRkRhRUlzWlVGQlpUdEpRVU5tTEdsQ1FVRnBRanRKUVVOcVFpeHJRa0ZCYTBJN1NVRkRiRUlzWTBGQll6dEpRVU5rTEdkQ1FVRm5RaXhGUVVGQk8wbFFiRVZ3UWp0TlR6SkVRVHRSUVZWUkxHVkJRV1VzUlVGQlFTeEZRVWxQTzBsUWVrVTVRanROVHpKRVFUdFJRV0ZSTEdWQlFXVTdVVUZEWml4cFFrRkJhVUlzUlVGQlFTeEZRVUZMTzBWQlJ6bENPMGxCUTBrc2VVSkJRWGxDTzBsQlEzcENMR2RDUVVGblFqdEpRVU5vUWl4bFFVRmxPMGxCUTJZc2FVSkJRV2xDTzBsQlEycENMR3RDUVVGclFqdEpRVU5zUWl4alFVRmpPMGxCUTJRc1owSkJRV2RDTzBsQlEyaENMR05CUVdNN1NVRkRaQ3huUWtGQlowSXNSVUZCUVR0SlVISkdjRUk3VFU4MFJVRTdVVUZaVVN4bFFVRmxPMUZCUTJZc1pVRkJaU3hGUVVGQkxFVkJSMDA3U1ZBMVJqZENPMDFQTkVWQk8xRkJaVkVzWlVGQlpUdFJRVU5tTEdkQ1FVRm5RaXhGUVVGQkxFVkJRVXM3TzBGQlNXcERPMFZCUTBrc2EwSkJRV3RDTzBWQlEyeENMRmxCUVZrN1JVRkRXaXhqUVVGak8wVkJRMlFzZVVKQlFXbENPMVZCUVdwQ0xHbENRVUZwUWl4RlFVRkJPMFZRY0VkcVFqdEpUMmRIU2p0TlFVOVJMR1ZCUVdVN1RVRkRaaXhYUVVGWE8wMUJRMWdzWVVGQllTeEZRVUZCTEVWQlFVczdPMEZETlVveFFqdEZRVU5KTEd0Q1FVRnJRaXhGUVVGQk8wVlNhMFJzUWp0SlVXNUVTanROUVVkUkxHRkJRV0VzUlVGQlFTeEZRVUZMT3p0QlFVTXhRanRGUVVOSkxHdENRVUZyUWl4RlFVRkJPenRCUVVkMFFqdEZRVU5KTEc5Q1FVRmhPMFZCUVdJc2IwSkJRV0U3UlVGQllpeGhRVUZoTzBWQlEySXNlVUpCUVRoQ08wMUJRVGxDTEhOQ1FVRTRRanRWUVVFNVFpdzRRa0ZCT0VJN1JVRkRPVUlzYTBKQlFXdENPMFZCUTJ4Q0xIRkNRVUZ4UWl4RlFVRkJPenRCUVV0NlFqdEZRVU5KTEc5Q1FVRmhPMFZCUVdJc2IwSkJRV0U3UlVGQllpeGhRVUZoTzBWQlEySXNXVUZCV1R0RlFVTmFMR2RDUVVGblFqdEZRVU5vUWl4NVFrRkJiVUk3VFVGQmJrSXNjMEpCUVcxQ08xVkJRVzVDTEcxQ1FVRnRRanRGUVVOdVFpeDFRa0ZCYzBJN1RVRkJkRUlzYjBKQlFYTkNPMVZCUVhSQ0xITkNRVUZ6UWp0RlFVTjBRaXhuUWtGQlowSTdSVUZEYUVJc1VVRkJVU3hGUVVGQk8wVkJTVkk3U1VGRFNTeHJRa0ZCYTBJN1NVRkRiRUlzWjBKQlFXZENMRVZCUVVFN1JVRkZjRUk3U1VGRFNTeDVRa0ZCZVVJN1NVRkRla0lzWjBKQlFXZENPMGxCUTJoQ0xHVkJRV1U3U1VGRFppeHBRa0ZCYVVJN1NVRkRha0lzY1VKQlFYRkNPMGxCUTNKQ0xHOUNRVUZ2UWp0SlFVTndRaXh0UWtGQmJVSTdTVUZEYmtJc2EwSkJRV3RDTEVWQlFVRTdPMEZCVDNSQ08wVkJRMGtzWjBKQlFXZENPMFZCUTJoQ0xHbENRVUZwUWp0RlFVTnFRaXhoUVVGaE8wVkJRMklzWjBKQlFXZENPMFZCUTJoQ0xFMUJRVTA3UlVGRFRpeHJRa0ZCYTBJN1JVRkRiRUlzZFVKQlFXVTdSVUZCWml4bFFVRmxMRVZCUVVFN1JVRlFiRUk3U1VGVlR5eDVRa0ZCZVVJc1JVRkJRVHRGUVZab1F6dEpRV0ZQTEZkQlFWY3NSVUZCUVR0RlFXSnNRanRKUVdkQ1R5eFhRVUZYTEVWQlFVRTdPMEZCU1c1Q08wVkJRMGtzZDBKQlFYZENPMFZCUTNoQ0xHZENRVUZuUWp0RlFVTm9RaXhsUVVGbE8wVkJRMllzYVVKQlFXbENPMFZCUTJwQ0xITkNRVUZ6UWp0RlFVTjBRaXg1UWtGQmVVSTdSVUZEZWtJc2IwSkJRVzlDTzBWQlEzQkNMRzlDUVVGdlFpeEZRVUZCT3p0QlFVVjRRanRGUVVOSkxIbENRVUY1UWp0RlFVTjZRaXhyUWtGQmEwSTdSVUZEYkVJc1owSkJRV2RDTzBWQlEyaENMR1ZCUVdVN1JVRkRaaXhwUWtGQmFVSTdSVUZEYWtJc1kwRkJZeXhGUVVGQk96dEJRVWQwUWp0RlFVTkpMR3RDUVVGclFqdEZRVU5zUWl4UFFVRlBPMFZCUTFBc1lVRkJZVHRGUVVOaUxGZEJRVmNzUlVGQlFUczdRVUZGWmp0RlFVTkpMRmRCUVZjN1JVRkRXQ3hyUWtGQmEwSTdSVUZEYkVJc1ZVRkJWU3hGUVVGQk96dEJRVVZrTzBWQlEwa3NWMEZCVnp0RlFVTllMR3RDUVVGclFqdEZRVU5zUWl4WFFVRlhMRVZCUVVFN08wRkRjRWRtTzBWQlEwa3NaMEpCUVdkQ08wVkJRMmhDTEhORFFVRnpRenRGUVVOMFF5eGxRVUZsTEVWQlFVRTdSVlJuUkdZN1NWTnVSRW83VFVGTlVTeHRRa0ZCYlVJc1JVRkJRU3hGUVVGTE96dEJRVVZvUXp0RlFVTkpMSEZDUVVGeFFpeEZRVUZCTzBWVU1FTnlRanRKVXpORFNqdE5RVWxSTEc5Q1FVRnZRaXhGUVVGQkxFVkJRVXM3TzBGQlR6ZENPMFZCUTBrc2IwSkJRV0U3UlVGQllpeHZRa0ZCWVR0RlFVRmlMR0ZCUVdFN1JVRkRZaXg1UWtGQk9FSTdUVUZCT1VJc2MwSkJRVGhDTzFWQlFUbENMRGhDUVVFNFFqdEZRVU01UWl4dFFrRkJaVHROUVVGbUxHVkJRV1U3UlVGRFppeFpRVUZaTzBWQlExb3NhMEpCUVd0Q0xFVkJRVUU3UlZReVFuUkNPMGxUYUVOQk8wMUJVVkVzV1VGQldTeEZRVUZCTEVWQlFVczdPMEZCUjNwQ08wVkJRMGtzZVVKQlFYbENPMFZCUTNwQ0xHZENRVUZuUWp0RlFVTm9RaXhsUVVGbE8wVkJRMllzYVVKQlFXbENPMFZCUTJwQ0xITkNRVUZ6UWp0RlFVTjBRaXg1UWtGQmVVSTdSVUZEZWtJc2IwSkJRVzlDTzBWQlEzQkNMRlZCUVZVN1JVRkRWaXh2UWtGQmIwSXNSVUZCUVR0RlFWUjJRanRKUVZsUExHZENRVUZuUWp0SlFVTm9RaXh2UWtGQmIwSTdTVUZEY0VJc2FVSkJRV2xDTzBsQlEycENMSEZDUVVGeFFqdEpRVU55UWl4VlFVRlZPMGxCUTFZc2FVSkJRV2xDTEVWQlFVRTdSVlJKZWtJN1NWTnlRa0U3VFVGdlFsRXNaVUZCWlR0TlFVTm1MR2xDUVVGcFFpeEZRVUZCTEVWQlFVczdPMEZCUld4RE8wVkJRMGtzYTBKQlFXdENMRVZCUVVFN08wRkJSWFJDTzBWQlEwa3NhMEpCUVd0Q08wVkJRMnhDTEdWQlFXVXNSVUZCUVR0RlFVWnVRanRKUVV0UkxGZEJRVmNzUlVGQlFUdEZWRlptTzBsVFMwbzdUVUZSVVN4bFFVRmxPMDFCUTJZc2FVSkJRV2xDTEVWQlFVRXNSVUZCU3pzN1FVRkhPVUk3UlVGRFNTeHJRa0ZCYTBJN1JVRkRiRUlzVFVGQlRUdEZRVU5PTEZsQlFWa3NSVUZCUVR0RlZIQkNXanRKVTJsQ1NqdE5RVTFSTEZkQlFWYzdUVUZEV0N4blFrRkJaMElzUlVGQlFTeEZRVkZOTzBWVWFFTXhRanRKVTJsQ1NqdE5RVlZSTEdkQ1FVRm5RanROUVVOb1FpeFRRVUZUTzAxQlExUXNWMEZCVnl4RlFVRkJPMDFCV201Q08xRkJaVmtzVjBGQlZ5eEZRVUZCTEVWQlFVYzdPMEZCU3pGQ08wVkJRMGtzYTBKQlFXdENPMFZCUTJ4Q0xHVkJRV1VzUlVGQlFUdEZWSFpEWmp0SlUzRkRTanROUVV0UkxHVkJRV1U3VFVGRFppeHBRa0ZCYVVJc1JVRkJRU3hGUVUxdlFqdEZRVm8zUXp0SlFWTlJMSFZDUVVGbE8wbEJRV1lzWlVGQlpTeEZRVUZCTzBsQlZIWkNPMDFCVjFrc05FSkJRVFJDTzAxQlF6VkNMREJDUVVFd1FpeEZRVUZCT3p0QlEzQkhkRU03UlVGRFNTeHhRa0ZCY1VJc1JVRkJRVHRGVm10RWNrSTdTVlZ1UkVvN1RVRkpVU3h2UWtGQmIwSXNSVUZCUVN4RlFYRkpjVU03UlVGdVNUZEVPMGxCUTBrc2EwSkJRV3RDTEVWQlFVRTdSVUZGZEVJN1NVRkRTU3hoUVVGaE8wbEJRMklzY1VOQlFYRkRPMGxCUTNKRExHdERRVUZyUXp0SlFVTnNReXh6UWtGQmMwSTdTVUZEZEVJc2EwSkJRV3RDTzBsQlEyeENMRzlDUVVGdlFqdEpRVU53UWl4clFrRkJhMElzUlVGQlFUdEpWbTFEZEVJN1RWVXhRMEU3VVVGVlVTeHhRa0ZCY1VJN1VVRkRja0lzYTBKQlFXdENPMUZCUTJ4Q0xIRkRRVUZ4UXp0UlFVTnlReXhyUTBGQmEwTXNSVUZCUVN4RlFXbERTVHRKVmtvNVF6dE5WVEZEUVR0UlFXZENVU3h4UTBGQmNVTTdVVUZEY2tNc2EwTkJRV3RETzFGQlEyeERMRzlDUVVGdlFqdFJRVU53UWl4clFrRkJhMElzUlVGQlFTeEZRVEpDYjBJN1NVRjZRakZETzAxQlEwa3NlVUpCUVhsQ08wMUJRM3BDTEdkQ1FVRm5RanROUVVOb1FpeGxRVUZsTzAxQlEyWXNhVUpCUVdsQ08wMUJRMnBDTEc5Q1FVRnZRanROUVVOd1FpeHJRa0ZCYTBJc1JVRkJRVHROVm1VeFFqdFJWWEpDU1R0VlFWTlJMR1ZCUVdVN1ZVRkRaaXhsUVVGbE8xVkJRMllzYVVKQlFXbENPMVZCUTJwQ0xHZENRVUZuUWl4RlFVRkJMRVZCWVdkQ08wMUJla0oyUXp0UlFXbENUeXhuUWtGQlowSTdVVUZEYUVJc2IwSkJRVzlDTzFGQlEzQkNMR2xDUVVGcFFqdFJRVU5xUWl4eFFrRkJjVUk3VVVGRGNrSXNhMEpCUVd0Q08xRkJRMnhDTEdWQlFXVTdVVUZEWml4clFrRkJhMEk3VVVGRGJFSXNVVUZCVVR0UlFVTlNMRzFEUVVFeVFqdG5Ra0ZCTTBJc01rSkJRVEpDTEVWQlFVRTdSVUZIZGtNN1NVRkRTU3huUWtGQlowSXNSVUZCUVR0SlFVVm9RanROUVVOSkxHOUNRVUZoTzAxQlFXSXNiMEpCUVdFN1RVRkJZaXhoUVVGaE8wMUJRMklzZVVKQlFUaENPMVZCUVRsQ0xITkNRVUU0UWp0alFVRTVRaXc0UWtGQk9FSTdUVUZET1VJc2JVSkJRVzFDTzAxQlEyNUNMR2REUVVGblF5eEZRVUZCTzAxV1pIaERPMUZWVlVrN1ZVRlBVU3h0UWtGQmJVSXNSVUZCUVN4RlFVRkxPMGxCUjJoRE8wMUJRMGtzZVVKQlFYbENPMDFCUTNwQ0xHZENRVUZuUWp0TlFVTm9RaXhsUVVGbE8wMUJRMllzYVVKQlFXbENPMDFCUTJwQ0xIbENRVUY1UWp0TlFVTjZRaXh2UWtGQmIwSTdUVUZEY0VJc2IwSkJRVzlDTzAxQlEzQkNMR1ZCUVdVc1JVRkJRVHROVmpWQ2RrSTdVVlZ2UWtrN1ZVRlhVU3hsUVVGbE8xVkJRMllzYVVKQlFXbENMRVZCUVVFc1JVRmpVenROUVZnNVFqdFJRVU5KTEd0Q1FVRnJRaXhGUVVGQk8xRkJSSEpDTzFWQlNVOHNWMEZCVnp0VlFVTllMREpDUVVFeVFqdFZRVU16UWl4WFFVRlhPMVZCUTFnc2NVSkJRWEZDTzFWQlEzSkNMR3RDUVVGclFqdFZRVU5zUWl4WFFVRlhPMVZCUTFnc1dVRkJXVHRWUVVOYUxIVkNRVUZsTzFWQlFXWXNaVUZCWlN4RlFVRkJPMGxCU1ROQ08wMUJRMGtzYTBKQlFXdENPMDFCUTJ4Q0xHVkJRV1U3VFVGRFppeHBRa0ZCYVVJN1RVRkRha0lzYjBKQlFXOUNPMDFCUTNCQ0xHZENRVUZuUWp0TlFVTm9RaXh0UWtGQmJVSTdUVUZEYmtJc2JVSkJRVzFDTEVWQlFVRTdUVlo2UkROQ08xRlZhMFJKTzFWQlZWRXNaVUZCWlR0VlFVTm1MR2xDUVVGcFFqdFZRVU5xUWl4clFrRkJhMElzUlVGQlFTeEZRVUZMTzBsQlJTOUNPMDFCUTBrc2FVSkJRV2xDTEVWQlFVRTdUVUZFY0VJN1VVRkhUeXhwUWtGQmFVSTdVVUZEYWtJc1pVRkJaVHRSUVVObUxHbENRVUZwUWp0UlFVTnFRaXh2UWtGQmIwSXNSVUZCUVR0TlZuUkZhRU03VVZWblJVazdWVUZUVVN4cFFrRkJhVUlzUlVGQlFUdFZRVlI0UWp0WlFWbFhMR1ZCUVdVN1dVRkRaaXhwUWtGQmFVSTdXVUZEYWtJc1kwRkJZeXhGUVVGQkxFVkJRVWM3U1VGRk4wSTdUVUZEU1N4blFrRkJaMEk3VFVGRGFFSXNjMEpCUVhOQ0xFVkJRVUU3VFVGSGRFSTdVVUZEU1N4M1EwRkJkME1zUlVGQlFUczdRVUZIZUVRN1JVRkRTU3hYUVVGWE8wVkJRMWdzV1VGQldTeEZRVUZCT3p0QlFVZG9RanRGUVVOSkxHdENRVUZyUWp0RlFVTnNRaXhqUVVGak8wVkJRMlFzVVVGQlVTeEZRVUZCTzBWV2FrZFNPMGxWT0VaS08wMUJUVkVzWVVGQllTeEZRVUZCTEVWQlFVczdPMEZEZGtveFFqdEZRVU5KTEdkQ1FVRm5RanRGUVVOb1FpeHpRMEZCYzBNN1JVRkRkRU1zWlVGQlpTeEZRVUZCTzBWWVowUm1PMGxYYmtSS08wMUJUVkVzYlVKQlFXMUNMRVZCUVVFc1JVRlpRenRGUVZaNFFqdEpRVU5KTEhGQ1FVRnhRaXhGUVVGQk8wVkJSWHBDTzBsQlEwa3NiMEpCUVdFN1NVRkJZaXh2UWtGQllUdEpRVUZpTEdGQlFXRTdTVUZEWWl4dFFrRkJaVHRSUVVGbUxHVkJRV1U3U1VGRFppeFRRVUZUTzBsQlExUXNlVUpCUVRoQ08xRkJRVGxDTEhOQ1FVRTRRanRaUVVFNVFpdzRRa0ZCT0VJc1JVRkJRVHRKV0c5RGJFTTdUVmQ0UTBFN1VVRlBVU3hUUVVGVExFVkJRVUVzUlVGQlN6czdRVUZITVVJN1JVRkRTU3gxUWtGQmRVSTdSVUZEZGtJc1pVRkJaU3hGUVVGQk8wVllORUptTzBsWE9VSktPMDFCUzFFc2RVSkJRWFZDTEVWQlFVRXNSVUZ4UWxjN1JWaEpkRU03U1ZjNVFrbzdUVUZSVVN4WFFVRlhMRVZCUVVFc1JVRnJRblZDTzBWQmFFSjBRenRKUVVOSkxHZENRVUZuUWp0SlFVTm9RaXhwUTBGQmFVTXNSVUZCUVR0RlFVVnlRenRKUVVOSkxGZEJRVmM3U1VGRFdDeFpRVUZaTzBsQlExb3NiMEpCUVdsQ08wOUJRV3BDTEdsQ1FVRnBRaXhGUVVGQk8wVkJSWEpDTzBsQlEwa3NiMEpCUVc5Q08wbEJRM0JDTEdWQlFXVTdTVUZEWml4cFFrRkJhVUk3U1VGRGFrSXNiMEpCUVc5Q0xFVkJRVUU3U1ZoUGVFSTdUVmRZUVR0UlFVOVJMSFZDUVVGMVFpeEZRVUZCTEVWQlFVczdPMEZCU1hoRE8wVkJRMGtzWTBGQll6dEZRVU5rTEd0Q1FVRnJRanRGUVVOc1FpeFhRVUZYTzBWQlExZ3NhMEpCUVd0Q08wVkJRMnhDTEdWQlFXVTdSVUZEWml4cFFrRkJhVUk3UlVGRGFrSXNhMEpCUVd0Q08wVkJRMnhDTEhWRFFVRXJRanRWUVVFdlFpd3JRa0ZCSzBJN1JVRkRMMElzYjBKQlFXOUNPMFZCUTNCQ0xHVkJRV1VzUlVGQlFUdEZXRlptTzBsWFFVbzdUVUZoVVN4alFVRmpMRVZCUVVFc1JVRkJTenM3UVVOb1JUTkNPMFZCUTBrc2QwTkJRWGRETzBWQlEzaERMSE5DUVVGelFqdEZRVU4wUWl4clFrRkJhMEk3UlVGRGJFSXNjME5CUVhORE8wVkJRM1JETEd0Q1FVRnJRaXhGUVVGQk8wVmFPRU5zUWp0SldXNUVTanROUVZGUkxHMUNRVUZ0UWl4RlFVRkJMRVZCU1VNN1JVRkdlRUk3U1VGRFNTeHZRa0ZCYjBJN1NVRkRjRUlzWlVGQlpTeEZRVUZCT3p0QlFVbDJRanRGUVVOSkxHdENRVUZyUWp0RlFVTnNRaXhYUVVGWE8wVkJRMWdzWVVGQllUdEZRVU5pTEcxQ1FVRnRRanRGUVVOdVFpeG5Ra0ZCWjBJc1JVRkJRVHRGV2poQ2FFSTdTVmx1UTBvN1RVRlJVU3hoUVVGaE8wMUJRMklzYlVKQlFXMUNMRVZCUVVFc1JVRTJSRWM3UlVFelJERkNPMGxCUTBrc2EwSkJRV3RDTzBsQlEyeENMRmRCUVZjN1NVRkRXQ3haUVVGWk8wbEJRMW9zYjBKQlFXbENPMDlCUVdwQ0xHbENRVUZwUWl4RlFVRkJPMFZCUjNKQ08wbEJRMGtzYTBKQlFXdENPMGxCUTJ4Q0xGRkJRVkU3U1VGRFVpeFRRVUZUTzBsQlExUXNkME5CUVdkRE8xbEJRV2hETEdkRFFVRm5ReXhGUVVGQk8wbGFZWEJETzAxWmFrSkJPMUZCVDFFc1pVRkJaU3hGUVVGQkxFVkJRVXM3UlVGSE5VSTdTVUZEU1N4clFrRkJhMEk3U1VGRGJFSXNWVUZCVlR0SlFVTldMRmxCUVZrN1NVRkRXaXhaUVVGWk8wbEJRMW9zWVVGQllUdEpRVU5pTEhWQ1FVRjFRanRKUVVOMlFpeDVRa0ZCZVVJN1NVRkRla0lzYjBSQlFUUkRPMWxCUVRWRExEUkRRVUUwUXp0SlFVTTFReXhyUWtGQmEwSXNSVUZCUVR0SldrWjBRanROV1ZCQk8xRkJXVkVzVjBGQlZ6dFJRVU5ZTEZOQlFWTXNSVUZCUVN4RlFVZFRPMGxhVkRGQ08wMVpVRUU3VVVGblFsRXNZVUZCWVN4RlFVRkJMRVZCUVVzN1JVRkZNVUk3U1VGRFNTeHJRa0ZCYTBJN1NVRkRiRUlzVFVGQlRUdEpRVU5PTEU5QlFVODdTVUZEVUN4blFrRkJaMEk3U1VGRGFFSXNZVUZCWVR0SlFVTmlMRmRCUVZjN1NVRkRXQ3huUWtGQlowSXNSVUZCUVR0SldteENjRUk3VFZsWFFUdFJRVlZSTEdOQlFXTTdVVUZEWkN4dFFrRkJiVUlzUlVGQlFUdFJRVmd4UWp0VlFXRlhMRzlDUVVGdlFpeEZRVUZCTzFGQllpOUNPMVZCWjBKWExGZEJRVmM3VlVGRFdDeFpRVUZaTEVWQlFVRXNSVUZCUnp0RlFVa3pRanRKUVVOSkxGZEJRVmM3U1VGRFdDeGxRVUZsTzBsQlEyWXNhVUpCUVdsQ0xFVkJRVUU3TzBGQlJYcENPMFZCUTBrc1YwRkJWenRGUVVOWUxGbEJRVms3UlVGRFdpeHRRa0ZCYlVJc1JVRkJRVHM3UVVGSGRrSTdSVUZEU1N4WFFVRlhPMFZCUTFnc1pVRkJaVHRGUVVObUxEWkNRVUUyUWl4RlFVRkJPMFZhT1VNM1FqdEpXVEpEU2p0TlFVMVJMRzlDUVVGdlFpeEZRVUZCTEVWQk1FTlJPMFZCZUVOb1F6dEpRVU5KTEdWQlFXVTdTVUZEWml4cFFrRkJhVUk3U1VGRGFrSXNhMEpCUVd0Q08wbEJRMnhDTEhOQ1FVRnpRanRKUVVOMFFpeDVRa0ZCZVVJN1NVRkRla0lzYjBKQlFXOUNPMGxCUTNCQ0xHMUNRVUZ0UWl4RlFVRkJPMGxhTVVSMlFqdE5XVzFFUVR0UlFWVlJMR1ZCUVdVN1VVRkRaaXhwUWtGQmFVSTdVVUZEYWtJc2IwSkJRVzlDTEVWQlFVRXNSVUZIUVR0SldteEZOVUk3VFZsdFJFRTdVVUZsVVN4bFFVRmxMRVZCUVVFc1JVRkJTenRGUVVzMVFqdEpRVU5KTEdOQlFXTTdTVUZEWkN4dlFrRkJZVHRKUVVGaUxHOUNRVUZoTzBsQlFXSXNZVUZCWVR0SlFVTmlMSGxDUVVFNFFqdFJRVUU1UWl4elFrRkJPRUk3V1VGQk9VSXNPRUpCUVRoQ08wbEJRemxDTEdkQ1FVRm5RaXhGUVVGQk8wbGFNMFZ3UWp0TldYVkZRVHRSUVU5UkxHMUNRVUZsTzFsQlFXWXNaVUZCWlR0UlFVTm1MSGRDUVVGMVFqdFpRVUYyUWl4eFFrRkJkVUk3WjBKQlFYWkNMSFZDUVVGMVFpeEZRVUZCTEVWQlFVczdSVUZGY0VNN1NVRkRTU3hsUVVGbE8wbEJRMllzYVVKQlFXbENPMGxCUTJwQ0xHdENRVUZyUWp0SlFVTnNRaXh6UWtGQmMwSTdTVUZEZEVJc2VVSkJRWGxDTEVWQlFVRTdTVnAwUmpkQ08wMVphVVpCTzFGQlVWRXNiMEpCUVc5Q08xRkJRM0JDTEdWQlFXVTdVVUZEWml4cFFrRkJhVUlzUlVGQlFTeEZRVUZMT3p0QlFVVnNRenRGUVVOSkxGZEJRVmM3UlVGRFdDeGxRVUZsTzBWQlEyWXNaVUZCWlR0RlFVTm1MR2xDUVVGcFFpeEZRVUZCTzBWYWFrZHFRanRKV1RaR1NqdE5RVTlSTEdWQlFXVTdUVUZEWml4cFFrRkJhVUlzUlVGQlFTeEZRVUZMT3p0QlFVYzVRanRGUVVOSkxHdENRVUZyUWp0RlFVTnNRaXhaUVVGWk8wVkJRMW9zVjBGQlZ6dEZRVU5ZTEhsQ1FVRnBRanRWUVVGcVFpeHBRa0ZCYVVJc1JVRkJRVHRGV2pWSGFrSTdTVmwzUjBvN1RVRlBVU3hYUVVGWE8wMUJRMWdzVVVGQlVUdE5RVU5TTEZkQlFWY3NSVUZCUVN4RlFVRkxPenRCUVVWNFFqdEZRVU5KTEd0Q1FVRnJRanRGUVVOc1FpeGhRVUZoTzBWQlEySXNWMEZCVnp0RlFVTllMSGxDUVVGcFFqdFZRVUZxUWl4cFFrRkJhVUlzUlVGQlFUdEZXblpJYWtJN1NWbHRTRW83VFVGUFVTeGhRVUZoTEVWQlFVRXNSVUZCU3lJc0ltWnBiR1VpT2lKaGNIQXVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaU9uSnZiM1FnZTF4dUlDQXRMV010YjNKaGJtZGxPaUFqUmtRNE1USTNPMXh1SUNBdExXTXRZbXgxWlRvZ0l6QXlNVUUwTWp0Y2JseHVJQ0F0TFdKbkxXZHlaWGt0YkdsbmFIUTZJQ05HTWtZeVJqSTdYRzRnSUMwdFl5MW5jbVY1T2lBak5VRTFRVFZCTzF4dVhHNGdJQzB0WXkxbWIyNTBMV0pzZFdVNklDTXdNakZCTkRJN1hHNGdJQzB0WXkxbWIyNTBMV2R5WlhrNklDTkJOMEUzUVRjN1hHNWNibHh1SUNBdExXSnZjbVJsY2kxeVlXUXRZbXh2WTJzNklEWXdjSGc3SUZ4dVhHNWNibjFjYmx4dVhHNWNiaUlzSWk1elpXTjBhVzl1TFhScGRHeGxJSHRjY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblRtVnZVMkZ1YzFjeFJ5Y3NJRUZ5YVdGc0xDQklaV3gyWlhScFkyRXNJSE5oYm5NdGMyVnlhV1k3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUE1Tm5CNE8xeHlYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV4TlhCNE8xeHlYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2NseHVJQ0FnSUdOdmJHOXlPaUIyWVhJb0xTMWpMV1p2Ym5RdFozSmxlU2s3WEhKY2JpQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01UTXdjSGc3WEhKY2JpQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOelZ3ZUR0Y2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGd3TUhCNEtTQjdYSEpjYmlBZ0lDQXVjMlZqZEdsdmJpMTBhWFJzWlNCN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUEwT0hCNE8xeHlYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBMU9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTFNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBME1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1Y2NseHVYSEpjYmk1elpXTjBhVzl1TFhScGRHeGxMUzFpYkhWbElIdGNjbHh1SUNBZ0lHTnZiRzl5T2lCMllYSW9MUzFqTFdadmJuUXRZbXgxWlNrN1hISmNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4eVhHNTlYSEpjYmx4eVhHNHVjMlZqZEdsdmJpMTBhWFJzWlMwdGQyaHBkR1VnZTF4eVhHNGdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hISmNibjFjY2x4dVhISmNiaTVpYjJ4a0lIdGNjbHh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hISmNibjFjY2x4dVhISmNiaTV6WldOMGFXOXVMWFJwZEd4bFgxOXBiV2NnZTF4eVhHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dMVEV3Y0hnN1hISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUE0TURCd2VDa2dlMXh5WEc0Z0lDQWdMbk5sWTNScGIyNHRkR2wwYkdWZlgybHRaeUI3WEhKY2JpQWdJQ0FnSUNBZ2JXRjRMV2hsYVdkb2REb2dOVEp3ZUR0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBdE5YQjRPMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXhNSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHVjMlZqZEdsdmJpMTBhWFJzWlMwdGQzSmhjQ0I3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTVRBd2NIZzdYSEpjYm4xY2NseHVYSEpjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBMk1EQndlQ2tnZTF4eVhHNGdJQ0FnTG5ObFkzUnBiMjR0ZEdsMGJHVXRMWGR5WVhBZ2UxeHlYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ05qQndlRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dUxtUmxZMTlrWlhOcklIdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlR0Y2NseHVmVnh5WEc1Y2NseHVMbVJsWTE5dGIySWdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRGd3TUhCNEtTQjdYSEpjYmlBZ0lDQXVaR1ZqWDJSbGMyc2dlMXh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQmNjbHh1SUNBZ0lDNWtaV05mYlc5aUlIdGNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTG0xdllsOTNjbUZ3SUh0Y2NseHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMbWhwWkdSbGJpQjdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4eVhHNTlYSEpjYmx4eVhHNHVjR1ZqY3lCN1hISmNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHlYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dNWE03WEhKY2JuMWNjbHh1WEhKY2JpNXdaV056WDJScGMyRndjR1ZoY2lCN1hISmNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHlYRzU5WEhKY2JseHlYRzR1Wm1sNFpXUkNiRzlqYXlCN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1FnSVdsdGNHOXlkR0Z1ZER0Y2NseHVJQ0FnSUcxaGVDMTNhV1IwYURvZ2FXNW9aWEpwZER0Y2NseHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ2RHOXdPaUF3TzF4eVhHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01DQWhhVzF3YjNKMFlXNTBPMXh5WEc1OVhISmNibHh5WEc0dWFHbGtaR1Z1UW14dlkyc2dlMXh5WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjY2x4dUlDQWdJSFJ2Y0RvZ01UVXdjSGdnSVdsdGNHOXlkR0Z1ZER0Y2NseHVmVnh5WEc0aUxDSkFabTl1ZEMxbVlXTmxJSHRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nWENKTmIyNTBjMlZ5Y21GMFhDSTdYRzRnSUNBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MGN5OU5iMjUwYzJWeWNtRjBMVkpsWjNWc1lYSXVkSFJtWENJcE8xeHVmVnh1WEc1QVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJN1hHNGdJQ0FnYzNKak9pQjFjbXdvWENJdUxpOW1iMjUwY3k5TmIyNTBjMlZ5Y21GMExVSnZiR1F1ZEhSbVhDSXBPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVmVnh1WEc1QVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJN1hHNGdJQ0FnYzNKak9pQjFjbXdvWENJdUxpOW1iMjUwY3k5TmIyNTBjMlZ5Y21GMExVeHBaMmgwTG5SMFpsd2lLVHRjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJzYVdkb2REdGNibjFjYmx4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJRndpVG1WdlUyRnVjMWN4UjF3aU8xeHVJQ0FnSUhOeVl6b2dkWEpzS0Z3aUxpNHZabTl1ZEhNdlRtVnZVMkZ1YzFjeFJ5MVNaV2QxYkdGeUxtOTBabHdpS1R0Y2JuMWNibHh1UUdadmJuUXRabUZqWlNCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklGd2lUbVZ2VTJGdWMxY3hSMXdpTzF4dUlDQWdJSE55WXpvZ2RYSnNLRndpTGk0dlptOXVkSE12VG1WdlUyRnVjMWN4UnkxTWFXZG9kQzV2ZEdaY0lpazdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2diR2xuYUhRN1hHNTlJaXdpWEc0dktpQk1ZWEpuWlNCa1pYTnJkRzl3Y3lCaGJtUWdiR0Z3ZEc5d2N5QXFMMXh1UUcxcGVHbHVJRzEzTVRFNE1DQjdYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhPREJ3ZUNsN1hHNGdJQ0FnSUNBZ0lFQmpiMjUwWlc1ME8xeHVJQ0FnSUgxY2JuMWNibHh1THlvZ1UzQmxZMmxoYkNCemFYcGxJR1p2Y2lCbllXeHNaWEo1SUNvdlhHNUFiV2w0YVc0Z2JYY3hNRE13SUh0Y2JpQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTVRBek1IQjRLWHRjYmlBZ0lDQWdJQ0FnUUdOdmJuUmxiblE3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZLaUJNWVc1a2MyTmhjR1VnZEdGaWJHVjBjeUJoYm1RZ2JXVmthWFZ0SUdSbGMydDBiM0J6SUNvdlhHNUFiV2w0YVc0Z2JYYzVOemtnZTF4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUE1Tnpsd2VDbDdYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh1SUNBZ0lIMWNibjFjYmx4dUx5b2dVRzl5ZEhKaGFYUWdkR0ZpYkdWMGN5QmhibVFnYzIxaGJHd2daR1Z6YTNSdmNITWdLaTljYmtCdGFYaHBiaUJ0ZHpjMk9DQjdYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJPSEI0S1h0Y2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hHNGdJQ0FnZlZ4dWZWeHVMeW9nVEdGdVpITmpZWEJsSUhCb2IyNWxjeUJoYm1RZ2NHOXlkSEpoYVhRZ2RHRmliR1YwY3lBcUwxeHVRRzFwZUdsdUlHMTNOakF3SUh0Y2JpQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTmpBd2NIZ3BlMXh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQjlYRzU5WEc1Y2JpOHFJRkJ2Y25SeVlXbDBJSEJvYjI1bGN5QmhibVFnYzIxaGJHeGxjaUFxTDF4dVFHMXBlR2x1SUcxM05EZ3dJSHRjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dORGd3Y0hncGUxeHVJQ0FnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNCOVhHNTlYRzVjYmk4cUlFbHdhRzl1WlNBMUlDb3ZYRzVBYldsNGFXNGdiWGN6TWpBZ2UxeHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBek1qQndlQ2w3WEc0Z0lDQWdJQ0FnSUVCamIyNTBaVzUwTzF4dUlDQWdJSDFjYm4xY2JseHVMeW9nVFhWc2RIbHdkWEp3YjNObElHMWhlQzEzYVdSMGFDQnRhWGhwYmlBcUwxeHVRRzFwZUdsdUlHMTNLQ1IzYVdSMGFDa2dlMXh1SUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQWtkMmxrZEdnZ0t5QW5jSGduS1NCN1hHNGdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2JpQWdJQ0I5WEc1OVhHNWNiaThxSUUxMWJIUjVjSFZ5Y0c5elpTQnRhVzR0ZDJsa2RHZ2diV2w0YVc0Z0tpOWNia0J0YVhocGJpQnRhVzUzS0NSM2FXUjBhQ2tnZTF4dUlDQWdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUFrZDJsa2RHZ2dLeUFuY0hnbktTQjdYRzRnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNCOVhHNTlYRzVjYmx4dUx5b2dVbVZ6Y0c5dWMybDJaU0J3WVhKaGJXVjBjbk1nS2k5Y2JseHVKRzFoZUZkcFpIUm9PaUF4T0RZd08xeHVYRzVBYldsNGFXNGdZV1JoY0hScGRtVXRabTl1ZENna2NHTlRhWHBsTENBa2JXOWlVMmw2WlNrZ2UxeHVJQ0FnSUNSaFpHUlRhWHBsT2lBa2NHTlRhWHBsSUMwZ0pHMXZZbE5wZW1VN1hHNGdJQ0FnSkcxaGVGZHBaSFJvT2lBa2JXRjRWMmxrZEdnZ0xTQXpNakE3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUJqWVd4aktDTjdKRzF2WWxOcGVtVWdLeUJ3ZUgwZ0t5QWpleVJoWkdSVGFYcGxmU0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBamV5UnRZWGhYYVdSMGFIMHBLVHRjYm4xY2JseHVRRzFwZUdsdUlHRmtZWEIwYVhabExYQmhaR1JwYm1jb0pIQmpVMmw2WlN3Z0pHMXZZbE5wZW1VcElIdGNiaUFnSUNBa1lXUmtVMmw2WlRvZ0pIQmpVMmw2WlNBdElDUnRiMkpUYVhwbE8xeHVJQ0FnSUNSdFlYaFhhV1IwYURvZ0pHMWhlRmRwWkhSb0lDMGdNekl3TzF4dUlDQWdJSEJoWkdScGJtYzZJR05oYkdNb0kzc2tiVzlpVTJsNlpTQXJJSEI0ZlNBcklDTjdKR0ZrWkZOcGVtVjlJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SUNON0pHMWhlRmRwWkhSb2ZTa3BPMXh1ZlZ4dVhHNUFiV2w0YVc0Z1lXUmhjSFJwZG1VdGNHRmtaR2x1Wnkxc1pXWjBLQ1J3WTFOcGVtVXNJQ1J0YjJKVGFYcGxLU0I3WEc0Z0lDQWdKR0ZrWkZOcGVtVTZJQ1J3WTFOcGVtVWdMU0FrYlc5aVUybDZaVHRjYmlBZ0lDQWtiV0Y0VjJsa2RHZzZJQ1J0WVhoWGFXUjBhQ0F0SURNeU1EdGNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJR05oYkdNb0kzc2tiVzlpVTJsNlpTQXJJSEI0ZlNBcklDTjdKR0ZrWkZOcGVtVjlJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SUNON0pHMWhlRmRwWkhSb2ZTa3BPMXh1ZlZ4dVhHNUFiV2w0YVc0Z1lXUmhjSFJwZG1VdGNHRmtaR2x1WnkxeWFXZG9kQ2drY0dOVGFYcGxMQ0FrYlc5aVUybDZaU2tnZTF4dUlDQWdJQ1JoWkdSVGFYcGxPaUFrY0dOVGFYcGxJQzBnSkcxdllsTnBlbVU3WEc0Z0lDQWdKRzFoZUZkcFpIUm9PaUFrYldGNFYybGtkR2dnTFNBek1qQTdYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nWTJGc1l5Z2pleVJ0YjJKVGFYcGxJQ3NnY0hoOUlDc2dJM3NrWVdSa1UybDZaWDBnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z0kzc2tiV0Y0VjJsa2RHaDlLU2s3WEc1OVhHNWNia0J0YVhocGJpQmhaR0Z3ZEdsMlpTMTNhV1IwYUNna2NHTlRhWHBsTENBa2JXOWlVMmw2WlNrZ2UxeHVJQ0FnSUNSaFpHUlRhWHBsT2lBa2NHTlRhWHBsSUMwZ0pHMXZZbE5wZW1VN1hHNGdJQ0FnSkcxaGVGZHBaSFJvT2lBa2JXRjRWMmxrZEdnZ0xTQXpNakE3WEc0Z0lDQWdkMmxrZEdnNklHTmhiR01vSTNza2JXOWlVMmw2WlNBcklIQjRmU0FySUNON0pHRmtaRk5wZW1WOUlDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJQ043SkcxaGVGZHBaSFJvZlNrcE8xeHVmVnh1WEc1QWJXbDRhVzRnWVdSaGNIUnBkbVV0YUdWcFoyaDBLQ1J3WTFOcGVtVXNJQ1J0YjJKVGFYcGxLU0I3WEc1Y2JpQWdJQ0FrWVdSa1UybDZaVG9nSkhCalUybDZaU0F0SUNSdGIySlRhWHBsTzF4dUlDQWdJQ1J0WVhoWGFXUjBhRG9nSkcxaGVGZHBaSFJvSUMwZ016SXdPMXh1SUNBZ0lHaGxhV2RvZERvZ1kyRnNZeWdqZXlSdGIySlRhWHBsSUNzZ2NIaDlJQ3NnSTNza1lXUmtVMmw2WlgwZ0tpQW9LREV3TUhaM0lDMGdNekl3Y0hncElDOGdJM3NrYldGNFYybGtkR2g5S1NrN1hHNTlYRzVjYmk4cUlFVnVaQ0J5WlhOd2IyNXphWFpsSUhCaGNtRnRaWFJ5Y3lBcUx5SXNJaW9nZTF4dUlDQXRkMlZpYTJsMExXSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lDQWdJQ0FnSUNBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmlBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVYRzVpYjJSNUlIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZE5iMjUwYzJWeWNtRjBKeXdnUVhKcFlXd3NJSE5oYm5NdGMyVnlhV1k3WEc0Z0lHSmhZMnRuY205MWJtUTZJSFpoY2lndExXSm5MV2R5WlhrdGJHbG5hSFFwTzF4dWZWeHVYRzVvTVN4Y2JtZ3lMRnh1YURNc1hHNW9OQ3hjYm1nMUxGeHVhRFlnZTF4dUlDQnRZWEpuYVc0NklEQTdYRzU5WEc1Y2JpNWpiMjUwWVdsdVpYSWdlMXh1SUNCdFlYZ3RkMmxrZEdnNklERTVNakJ3ZUR0Y2JpQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJR052Ykc5eU9pQjJZWElvTFMxakxXWnZiblF0Y21WbmRXeGhjaWs3WEc0Z0lHMXBiaTEzYVdSMGFEb2dNekl3Y0hnN1hHNGdJSEJoWkdScGJtYzZJREl3Y0hnN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2MyTnliMnhzTFhOdVlYQXRkSGx3WlRvZ2VTQnRZVzVrWVhSdmNuazdYRzU5WEc1Y2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTRNREJ3ZUNrZ2UxeHVJQ0F1WTI5dWRHRnBibVZ5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4TW5CNE8xeHVJQ0I5WEc1OVhHNWNiaTUzY21Gd0lIdGNiaUFnYldGNExYZHBaSFJvT2lBeE1UWXdjSGc3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYm4xY2JseHVYRzVzYVN3Z2RXd2dlMXh1SUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dWZWeHVYRzVoSUh0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JuMWNibHh1WEc0aUxDSXVZblJ1SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNamd3Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUExTkhCNE8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFdNdFoyOXNaQzF3Y21sdFlYSjVLVHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUNBZ1ltOXlaR1Z5T2lCdWIyNWxPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURJM2NIZzdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RKYm5SbGNpYzdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlOSEI0TzF4dUlDQWdJR052Ykc5eU9pQWpSa1pHUmtaR08xeHVJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUF1TW5NN1hHNGdJQ0FnUUdsdVkyeDFaR1VnYlhjb056WTRLU0I3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UUndlRHNnZlZ4dVhHNWNiaUFnSUNBbU9taHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdFl5MWlkRzR0Y0hKcGJXRnllU2s3SUgxY2JseHVJQ0FnSUNZdGQyaHBkR1VnZTF4dUlDQWdJQ0FnSUNCQVpYaDBaVzVrSUM1aWRHNDdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUNObVptWTdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQjJZWElvTFMxakxXWnZiblF0WW14aFkyc3BPMXh1WEc0Z0lDQWdJQ0FnSUNZNmFHOTJaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZG1GeUtDMHRZeTFpZEc0dGMyVmpMV2h2ZG1WeUtUc2dmU0I5SUgxY2JseHVMbk5vYVc1bElIdDlYRzVjYmx4dVhHNWNibHh1WEc1Y2JpSXNJaTVpZFhKblpYSmZiV1Z1ZFNCN1hHNGdJQ0FnZDJsa2RHZzZJREk0Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF5TTNCNE8xeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYlhjb01UTXdNQ2tnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenNnZlNCOVhHNGlMQ0pjYmk1dmRtVnliR0Y1TFdSaGNtc2dlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQndiM05wZEdsdmJqb2dabWw0WldRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0l6QXdNRHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNBZ0lIb3RhVzVrWlhnNklDMHhNRHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUF1TTNNN0lIMWNibHh1TG05MlpYSnNZWGt0TFhOb2IzZHVJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF1T0R0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF4TURBd095QjlYRzVjYmk1dGIyUmhiQ0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR1pwZUdWa08xeHVJQ0FnSUhSdmNEb2dMVFV3SlR0Y2JpQWdJQ0JzWldaME9pQTFNQ1U3WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dMVFV3SlNrN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0kyWm1aanRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBek0zQjRPMXh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZJREp3ZUNBd2NIZ2dPSEI0SURSd2VDQnlaMkpoS0RNMExDQTJNQ3dnT0RBc0lEQXVNaWs3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVEF3TURBN1hHNGdJQ0FnYjNCaFkybDBlVG9nTUR0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lBdU1uTTdYRzRnSUNBZ2QybGtkR2c2SURFeE5qQndlRHRjYmlBZ0lDQm9aV2xuYUhRNklEY3lNSEI0TzF4dVhHNWNiaUFnSUNBbVgxOTNjbUZ3SUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ05qQndlRHNnZlZ4dVhHNGdJQ0FnSmw5ZmFXMWhaMlZ6SUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnWjJGd09pQXlNSEI0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTmpCd2VEc2dmVnh1WEc0Z0lDQWdKbDlmYVcxaFoyVWdlMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNSEI0TzF4dUlDQWdJQ0FnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklETXdKVHRjYmx4dUlDQWdJQ0FnSUNCcGJXY2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1F0Wm1sME9pQmpiM1psY2pzZ2ZTQjlYRzVjYmx4dVhHNGdJQ0FnSmw5ZmRHVjRkQ0I3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ056VWxPMXh1WEc1Y2JpQWdJQ0FnSUNBZ2NDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTXpCd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5UVzl1ZEhObGNuSmhkQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESTBjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2RtRnlLQzB0WXkxbmNtVjVLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBek1IQjRPeUI5SUgxY2JseHVYRzVjYmx4dVhHNWNibHh1SUNBZ0lDWmZYMk5zYjNObElIdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0IwYjNBNklEWXdjSGc3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUEyTUhCNE8xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF5TkhCNE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklESTBjSGc3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1SUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUF4TzF4dVhHNWNiaUFnSUNBZ0lDQWdKam82WW1WbWIzSmxMRnh1SUNBZ0lDQWdJQ0FtT2pwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF6Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjNBNklEVXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTXpNek95QjlYRzVjYmx4dUlDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BPeUI5WEc1Y2JseHVJQ0FnSUNBZ0lDQW1PanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE5EVmtaV2NwT3lCOUlIMWNibHh1SUNBZ0lDWXViM0JsYm1Wa0xXMXZaR0ZzSUh0Y2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ01TQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdJQ0IwYjNBNklEVXdKVHNnZlNCOVhHNGlMQ0l1YUdWaFpHVnlJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ05UVndlQ0E0TUhCNE8xeHVJQ0FnSUdOdmJHOXlPaUFqWm1abU8xeHVYRzVjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzEzS0Rrd01Da2dlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF6TUhCNElESXdjSGc3SUgxY2JseHVYRzVjYmlBZ0lDQW1MWFJ2Y0NCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmx4dUlDQWdJQ0FnSUNBbVgxOWlaeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnZWkxcGJtUmxlRG9nTFRFN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYVd4MFpYSTZJR0p5YVdkb2RHNWxjM01vTlRBbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHMWhlQzEzYVdSMGFEb2dNVEF3SlZ4dUlDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOMExXWnBkRG9nWTI5MlpYSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nWTJGc1l5Z3hNREFsSUNzZ01UVXdjSGdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ2RtRnlLQ0F0TFdKdmNtUmxjaTF5WVdRdFlteHZZMnNwSUhaaGNpZ2dMUzFpYjNKa1pYSXRjbUZrTFdKc2IyTnJLU0F3SURBN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEWXdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nWTJGc1l5Z3hNREFsSUNzZ01UQXdjSGdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE13Y0hnZ016QndlQ0F3SURBN0lIMGdmVnh1WEc0Z0lDQWdJQ0FnSUNaZlgySm5MWFpwWkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ0xURTdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXeDBaWEk2SUdKeWFXZG9kRzVsYzNNb05UQWxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRzFoZUMxM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVpXTjBMV1pwZERvZ1kyOTJaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ1kyRnNZeWd4TURBbElDc2dNVFV3Y0hncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dkbUZ5S0NBdExXSnZjbVJsY2kxeVlXUXRZbXh2WTJzcElIWmhjaWdnTFMxaWIzSmtaWEl0Y21Ga0xXSnNiMk5yS1NBd0lEQTdJSDFjYmx4dVhHNWNibHh1SUNBZ0lDQWdJQ0FtWDE5c2IyZHZJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dNVGc1Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGFHVnBaMmgwT2lBM09YQjRPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBiV2NnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHNnZlNCOUlIMWNibHh1SUNBZ0lDNXVMVzFsYm5VZ2UxeHVJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJRFEySlR0Y2JpQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTRNREJ3ZUR0Y2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNneU5UVXNJREkxTlN3Z01qVTFMQ0F3TGpFMUtUdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ09UQndlRHRjYmx4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5Z3hNekF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE95QjlYRzVjYmlBZ0lDQWdJQ0FnSmw5ZmJHbHpkQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklETXdjSGdnTlRCd2VEc2dmVnh1WEc0Z0lDQWdJQ0FnSUNaZlgybDBaVzBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESTBjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01DNHhaVzA3SUgxY2JseHVJQ0FnSUNBZ0lDQW1YMTlwZEdWdE9tNXZkQ2c2YkdGemRDMWphR2xzWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dOVEJ3ZUR0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb01UUXlNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJREkxY0hnN0lIMGdmU0I5WEc1Y2JpQWdJQ0F1Ymkxc1lXNW5JSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREUyTUhCNE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEWXdjSGc3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDTm1abVk3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFZ3ZUR0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNWNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvTVRNd01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHNnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmZYM04zYVhSamFDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEVXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFdNdGIzSmhibWRsS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUM0emN6c2dmVnh1WEc1Y2JpQWdJQ0FnSUNBZ0psOWZjblVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQXlPSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPeUI5WEc1Y2JpQWdJQ0FnSUNBZ0psOWZaVzRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5YVdkb2REb2dNamh3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE5UQWxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBak1EQXdPeUI5SUgxY2JseHVYRzRnSUNBZ0xtNHRiR0Z1Wnk1bGJpQXViaTFzWVc1blgxOXpkMmwwWTJnZ2UxeHVJQ0FnSUNBZ0lDQnNaV1owT2lCallXeGpLREV3TUNVZ0xTQTRNSEI0S1RzZ2ZWeHVYRzRnSUNBZ0xtNHRiR0Z1Wnk1bGJpQXViaTFzWVc1blgxOXlkU0I3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqTURBd095QjlYRzVjYmlBZ0lDQXViaTFzWVc1bkxtVnVJQzV1TFd4aGJtZGZYMlZ1SUh0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNObVptWTdJSDBnZlZ4dVhHNHVhR1ZoWkdWeUxXMWhhVzRnZTF4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBME9EQndlRHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERTFjSGc3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlneE16QXdLU0I3WEc0Z0lDQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNHRjbVYyWlhKelpUdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUhOMFlYSjBPeUI5SUgxY2JseHVYRzR1YUdWaFpHVnlMVzFoYVc1ZlgzUnBkR3hsSUh0Y2JpQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQTFNSEI0T3lCOVhHNWNiaTVvWldGa1pYSXRiV0ZwYmw5ZmMzVmlkR2wwYkdVZ2UxeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5UVzl1ZEhObGNuSmhkQ2M3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklETTJjSGc3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFMU1DVTdYRzRnSUNBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SURBdU1XVnRPMXh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJQ0FnZDJsa2RHZzZJRFE0TUhCNE8xeHVYRzRnSUNBZ1FHbHVZMngxWkdVZ2JYY29PREF3S1NCN1hHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JpQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQXlPREJ3ZUR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURFMWNIZzdJSDBnZlZ4dUlpd2lMbkJ5YjJSMVkzUWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ2RtRnlLQzB0WW05eVpHVnlMWEpoWkMxaWJHOWpheWs3WEc0Z0lDQWdjMk55YjJ4c0xYTnVZWEF0WVd4cFoyNDZJSE4wWVhKME8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF4TURBN1hHNWNiaUFnSUNCQWFXNWpiSFZrWlNCdGR5ZzJNREFwSUh0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTXpCd2VEc2dmVnh1WEc1Y2JpQWdJQ0FtWDE5M2NtRndJSHRjYmlBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBeE1Ua3djSGc3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTUNCaGRYUnZPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXdJREUxY0hnZ01UTXdjSGc3WEc1Y2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29OakF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNREJ3ZURzZ2ZTQjlJSDFjYmx4dVhHNWNibHh1TG5CeWIyUjFZM1J6SUh0OVhHNWNibHh1TG5CeWIyUjFZM1J6TFcxbGJuVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc0Z0lDQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUEzTlhCNE8xeHVJQ0FnSUcxcGJpMTNhV1IwYURvZ016QXdjSGc3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlneE1qQXdLU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdkeWFXUTdYRzRnSUNBZ0lDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ2NtVndaV0YwS0RNc0lERm1jaWs3WEc0Z0lDQWdJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRjbTkzY3pvZ2NtVndaV0YwS0RJc0lERm1jaWs3WEc0Z0lDQWdJQ0FnSUdkeWFXUXRZMjlzZFcxdUxXZGhjRG9nTXpCd2VEdGNiaUFnSUNBZ0lDQWdaM0pwWkMxeWIzY3RaMkZ3T2lBeE5YQjRPeUI5WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlnMU1EQXBJSHRjYmlBZ0lDQWdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQnlaWEJsWVhRb01pd2dNV1p5S1R0Y2JpQWdJQ0FnSUNBZ1ozSnBaQzEwWlcxd2JHRjBaUzF5YjNkek9pQnlaWEJsWVhRb015d2dNV1p5S1R0Y2JpQWdJQ0FnSUNBZ1ozSnBaQzFqYjJ4MWJXNHRaMkZ3T2lBeU1IQjRPeUI5WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlnek5UQXBJSHRjYmlBZ0lDQWdJQ0FnWjNKcFpDMWpiMngxYlc0dFoyRndPaUF4TUhCNE95QjlJSDFjYmx4dVhHNHVjSEp2WkhWamRITXRiV1Z1ZFY5ZmFYUmxiU0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TkhCNE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlPWEI0TzF4dUlDQWdJSEJoWkdScGJtYzZJREl3Y0hnZ016QndlRHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeE1IQjRPMXh1SUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lBdU0zTTdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUhkb2FYUmxMWE53WVdObE9pQnViM2R5WVhBN1hHNWNibHh1SUNBZ0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFqWm1RNE1ESTNObVU3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqTURBd01EQXdPeUI5WEc1Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZ3dNQ2tnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlNSEI0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeE1IQjRJREUxY0hnN0lIMWNibHh1SUNBZ0lFQnBibU5zZFdSbElHMTNLRE0zTUNrZ2UxeHVJQ0FnSUNBZ0lDQjNhR2wwWlMxemNHRmpaVG9nYm05eWJXRnNPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF4TUhCNE95QjlYRzVjYmx4dUlDQWdJQ1l0TFdGamRHbDJaU0I3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFdNdGIzSmhibWRsS1R0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNObVptWTdJSDBnZlZ4dVhHNWNiaTV3Y205a2RXTjBjeTFzYVhOMElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lHWnNaWGd0ZDNKaGNEb2dkM0poY0R0Y2JpQWdJQ0JuWVhBNklESTFjSGc3SUgxY2JseHVMbkJ5YjJSMVkzUnpMV3hwYzNSZlgybDBaVzBnZTF4dUlDQWdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklETTNNSEI0TzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUM0eWN6dGNibHh1SUNBZ0lFQnBibU5zZFdSbElHMTNLRFl3TUNrZ2UxeHVJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREkxTkhCNE95QjlYRzVjYmlBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdabWxzZEdWeU9pQmljbWxuYUhSdVpYTnpLREV1TVNrN0lIMWNibHh1SUNBZ0lHbHRaeUI3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUc5aWFtVmpkQzFtYVhRNklHTnZkbVZ5T3lCOUlIMWNibHh1TG5CeWIyUjFZM1JmWDI5eVpHVnlJSHQ5WEc1Y2JpNXZjbVJsY2lCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ016WndlRHRjYmlBZ0lDQjNhV1IwYURvZ016VXdjSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQXhPRGR3ZUR0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXlNREp3ZUR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCMllYSW9MUzFqTFc5eVlXNW5aU2s3WEc0Z0lDQWdZMjlzYjNJNklDTm1abVk3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dOREJ3ZUNBMk5IQjRPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCc1pXWjBPaUJqWVd4aktERXdNQ1VnTFNBek5UQndlQ2s3WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0FnSUhvdGFXNWtaWGc2SURFd01EdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQXVNbk03WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNE1EQXBJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ05UQndlRHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRE13Tm5CNE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERTBPWEI0T3lCOVhHNWNiaUFnSUNCQWFXNWpiSFZrWlNCdGR5ZzBOVEFwSUh0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nTWpKd2VEc2dmVnh1WEc0Z0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJR1pwYkhSbGNqb2dZbkpwWjJoMGJtVnpjeWd4TVRBbEtUc2dmU0I5WEc1Y2JpNXZjbVJsY2w5ZmRHVjRkQ0I3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURJd2NIZzdYRzRnSUNBZ2QybGtkR2c2SURFM01IQjRPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvT0RBd0tTQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRKd2VEdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFMWNIZzdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNakZ3ZURzZ2ZTQjlYRzVjYmk1dmNtUmxjbDlmZG05c0lIdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTmpSd2VEdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dOemh3ZUR0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZ3dNQ2tnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklEUTRjSGc3WEc0Z0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQTFPWEI0T3lCOUlIMWNibHh1TG05eVpHVnlYMTloY25JZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0IwYjNBNklEa3djSGc3WEc0Z0lDQWdjbWxuYUhRNklEY3djSGc3WEc0Z0lDQWdkMmxrZEdnNklEUXdjSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQXpOWEI0TzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYlhjb09EQXdLU0I3WEc0Z0lDQWdJQ0FnSUhSdmNEb2dOakp3ZURzZ2ZTQjlYRzVjYmx4dUxuQnliMlIxWTNSZlgyUmxZMjl5SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdjbWxuYUhRNklDMHpOeVU3WEc0Z0lDQWdkRzl3T2lBME1qUndlRHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZzVNR1JsWnlrN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZE9aVzlUWVc1elZ6RkhKenRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01URTFMakl5TW5CNE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhNemh3ZUR0Y2JpQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNBZ0lHTnZiRzl5T2lBalJqaEdPRVk0TzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYlhjb01UVXpNQ2tnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPeUI5SUgxY2JpSXNJaTV0YVhOemFXOXVJSHRjYmlBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01UTXdjSGc3SUgxY2JseHVMbTFwYzNOcGIyNWZYM2R5WVhBZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlRzZ2ZWeHVYRzVjYmk1dGFYTnphVzl1TFcxaGFXNGdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEa3djSGdnTVRFemNIZzdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdFl5MWliSFZsS1R0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURZMU0zQjRPMXh1SUNBZ0lHTnZiRzl5T2lBalptWm1PMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURjMWNIZzdYRzVjYmlBZ0lDQkFhVzVqYkhWa1pTQnRkeWcyTURBcElIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dOakJ3ZUNBMU1IQjRPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXpNSEI0SURNd2NIZ2dNSEI0SURCd2VEc2dmVnh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvT0RBd0tTQjdYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nYm05dVpUdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRFV3Y0hnN0lIMWNibHh1SUNBZ0lDWmZYMmx0WnlCN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBME1DVTdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE5UQWxLVHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dMVFUxY0hnN1hHNWNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvTmpBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVROd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTWpWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bFpuUTZJQzB5TlhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5d09pQXpNeVU3SUgxY2JseHVJQ0FnSUNBZ0lDQnBiV2NnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3SUgwZ2ZWeHVYRzRnSUNBZ0psOWZkR2wwYkdVZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjA1bGIxTmhibk5YTVVjbk8xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRE0yY0hnN1hHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUEwTTNCNE8xeHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01DNHhaVzA3WEc0Z0lDQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF4TlhCNE8xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzVjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb05qQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qUndlRHNnZlNCOVhHNWNiaUFnSUNBbVgxOTBaWGgwSUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2ROYjI1MGMyVnljbUYwSnp0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dUlDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNamx3ZUR0Y2JseHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnRkeWcyTURBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01USndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TlhCNE95QjlJSDBnZlZ4dVhHNWNibHh1WEc1Y2JpNXRhWE56YVc5dUxXRmtkaUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZ3dNQ2tnZTF4dUlDQWdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5T3lCOVhHNWNibHh1WEc0Z0lDQWdKbDlmYVhSbGJTQjdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZMjlzYjNJNklHaHpiR0VvTWpFNExDQTVOQ1VzSURFekpTd2dNQzR6S1R0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTlRBbE8xeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ016QXdjSGc3WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTXpBd2NIZzdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXRNVFZ3ZUR0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYRzVjYmx4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLREV4T0RBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF5TlhaM08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5TlhaM095QjlYRzVjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb09EQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01qSTNjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklESXlOM0I0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ0xURTFjSGc3SUgwZ2ZWeHVYRzVjYmx4dVhHNGdJQ0FnSmw5ZmRHVjRkQ0I3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNBZ0lHeGxablE2SURVd0pUdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dMVFV3SlNrN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lCMllYSW9MUzFqTFdKc2RXVXBPMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3SUgxY2JseHVJQ0FnSUNaZlgzUnZjQzEwWlhoMElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkT1pXOVRZVzV6VnpGSEp6dGNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUEyTkhCNE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTnpkd2VEdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNBZ0lDQWdiV2x1TFdobGFXZG9kRG9nT0RCd2VEdGNibHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlneE1EQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRFV3Y0hnN0lIMWNibHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNE1EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dOalJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBeE5YQjRPeUI5SUgxY2JseHVYRzRnSUNBZ0psOWZjM1ZpZEdWNGRDQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblRXOXVkSE5sY25KaGRDYzdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFek1DVTdYRzRnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ00xUVRWQk5VRTdYRzRnSUNBZ0lDQWdJRzFwYmkxM2FXUjBhRG9nTWpVd2NIZzdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQnRhVzR0YUdWcFoyaDBPaUE0TUhCNE8xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RFd01EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFwYmkxM2FXUjBhRG9nWVhWMGJ6c2dmVnh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNE1EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFwYmkxM2FXUjBhRG9nTWpVd2NIZzdJSDBnZlNCOVhHNWNibHh1WEc0dWJXbHpjMmx2Ymw5ZlpHVmpJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2NtbG5hSFE2SURJM05uQjRPMXh1SUNBZ0lHSnZkSFJ2YlRvZ0xURTFNSEI0TzF4dUlDQWdJR1pwYkhSbGNqb2dZbXgxY2lnNWNIZ3BPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvT0RBd0tTQjdYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nT0RCd2VEdGNiaUFnSUNBZ0lDQWdjbWxuYUhRNklEY3ljSGc3WEc0Z0lDQWdJQ0FnSUdKdmRIUnZiVG9nTFRFMWNIZzdJSDBnZlZ4dUlpd2lMbWhwYzNSdmNua2dlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCQWFXNWpiSFZrWlNCdGR5ZzRPREFwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHNnZlNCOVhHNHVhR2x6ZEc5eWVWOWZkM0poY0NCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsT3lCOVhHNWNibHh1TG5KaGFXd2dlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01UTXdjSGc3SUgxY2JseHVYRzVjYmx4dUxubGxZWElnZTF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnYUdWcFoyaDBPaUExTW5CNE8xeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklEWXdjSGc3WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITjBZWEowTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdsamEzazdYRzRnSUNBZ2RHOXdPaUExTUNVN1hHNWNibHh1WEc0Z0lDQWdKbDlmWVhKeUlIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBME1IQjRPMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeE5YQjRPeUI5WEc1Y2JpQWdJQ0FtWDE5dWRXMGdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0owNWxiMU5oYm5OWE1VY25PMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURZMGNIZzdYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBM04zQjRPMXh1SUNBZ0lDQWdJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dNQzR4WlcwN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lCMllYSW9MUzFqTFdKc2RXVXBPMXh1SUNBZ0lDQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREl3Y0hnN0lIMGdmVnh1WEc1Y2JseHVMbVYyWlc1MGN5QjdYRzVjYmx4dUlDQWdJQ1pmWDJsMFpXMGdlMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURZMk1IQjRPMXh1SUNBZ0lDQWdJQ0J0YVc0dGFHVnBaMmgwT2lBeU5UVndlRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTmpCd2VEdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSTJabVpqdGNiaUFnSUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUM0MGN6dGNibHh1SUNBZ0lDQWdJQ0FtT201MGFDMWphR2xzWkNneWJpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdFl5MWliSFZsS1RzZ2ZWeHVYRzRnSUNBZ0lDQWdJQ1k2Ym5Sb0xXTm9hV3hrS0RKdUtTQXVaWFpsYm5SelgxOTBhWFJzWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJMlptWmpzZ2ZWeHVYRzRnSUNBZ0lDQWdJQ1k2Ym5Sb0xXTm9hV3hrS0RKdUtTQXVaWFpsYm5SelgxOTBaWGgwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWpabVptT3lCOUlIMWNibHh1WEc1Y2JpQWdJQ0FtWDE5MGFYUnNaU0I3WEc0Z0lDQWdJQ0FnSUc5dWRDMW1ZVzFwYkhrNklDZE9aVzlUWVc1elZ6RkhKenRjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBek5uQjRPMXh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01UUXdKVHRjYmlBZ0lDQWdJQ0FnYkdWMGRHVnlMWE53WVdOcGJtYzZJREF1TURWbGJUdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklIWmhjaWd0TFdNdFlteDFaU2s3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF4TlhCNE95QjlYRzVjYmlBZ0lDQW1YMTkwWlhoMElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkTmIyNTBjMlZ5Y21GMEp6dGNiaUFnSUNBZ0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJMGNIZzdYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeE5EQWxPMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJelZCTlVFMVFUc2dmU0I5WEc1Y2JseHVMbWhwYzNSdmNubGZYMlJsWXlCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJR3hsWm5RNklEQTdYRzRnSUNBZ1ltOTBkRzl0T2lBeE5UQndlRHRjYmlBZ0lDQjZMV2x1WkdWNE9pQXRNVHNnZlZ4dVhHNHVhR2x6ZEc5eWVWOWZaR1ZqYjNJdFkybHlZMnhsSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdkRzl3T2lBeU5UQndlRHNnZlZ4dVhHNHVhR2x6ZEc5eWVWOWZaR1ZqYjNJdFkybHlZMnhsTFRJZ2UxeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0IwYjNBNklERXlNREJ3ZURzZ2ZWeHVJaXdpTG1kbGIyZHlZWEJvZVNCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0kyWm1aanRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lCMllYSW9MUzFpYjNKa1pYSXRjbUZrTFdKc2IyTnJLVHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJREUxY0hnN1hHNWNiaUFnSUNCQWFXNWpiSFZrWlNCdGR5ZzJNREFwSUh0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTXpCd2VEc2dmU0I5WEc1Y2JpNW5aVzluY21Gd2FIbGZYM2R5WVhBZ2UxeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF4TlRCd2VEdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHMTNLRGd3TUNrZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ05qQndlRHNnZlNCOVhHNWNibHh1WEc0dVkyOTFiblJ5YVdWeklIdGNibHh1WEc0Z0lDQWdKbDlmYkdsemRDQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYmlBZ0lDQWdJQ0FnWm14bGVDMTNjbUZ3T2lCM2NtRndPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dOVEV3Y0hnN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTWpCd2VEdGNibHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNE1EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBek5qQndlRHNnZlNCOVhHNWNibHh1SUNBZ0lDWmZYMmwwWlcwZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjAxdmJuUnpaWEp5WVhRbk8xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF5TkhCNE8xeHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01DNHdOV1Z0TzF4dUlDQWdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nZG1GeUtDMHRZeTFuY21WNUtUdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklEVXdKVHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREUxY0hnN1hHNWNiaUFnSUNBZ0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lYRnd5TURJeVhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZG1GeUtDMHRZeTFpYkhWbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF0TVdWdE95QjlYRzVjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb09EQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qQndlRHNnZlNCOUlIMWNibHh1TG1kbGIyZHlZWEJvZVY5ZmJXRndMWGR5WVhBZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlRzZ2ZWeHVYRzR1YldGd0lIdGNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJRFUxY0hnN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh1WEc0Z0lDQWdhVzFuSUh0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdJSDFjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzEzS0Rnd01Da2dlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklEQTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBMU1IQjRPeUI5SUgxY2JseHVYRzR1YkdGaVpXd2dlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lDQWdjbWxuYUhRNklERTFNSEI0TzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYlhjb01UQXdNQ2tnZTF4dUlDQWdJQ0FnSUNCeWFXZG9kRG9nTlRCd2VEdGNiaUFnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUF5TlRCd2VEc2dmVnh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvT0RBd0tTQjdYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTVRJMWNIZzdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJRE13Y0hnN1hHNWNiaUFnSUNBZ0lDQWdhVzFuSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsT3lCOUlIMGdmVnh1WEc1Y2JseHVYRzRqYldGd0lIdGNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJRFUxY0hnN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvT0RBd0tTQjdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ01EdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURVd2NIZzdJSDFjYmx4dUlDQWdJSEJoZEdnZ2UxeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUF1TW5NN1hHNGdJQ0FnSUNBZ0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSeWIydGxMWGRwWkhSb09pQTFjSGdnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4wY205clpUb2dJMlkxWm1ZMlppQWhhVzF3YjNKMFlXNTBPeUI5SUgwZ2ZWeHVJaXdpTG5kdmNtc2dlMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBeE16QndlRHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzEzS0RVMU1Da2dlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOekJ3ZURzZ2ZWeHVYRzRnSUNBZ0psOWZkM0poY0NCN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUc2dmVnh1WEc0Z0lDQWdKaTFoWkhZZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm5jbWxrTzF4dUlDQWdJQ0FnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJSEpsY0dWaGRDZ3pMQ0F4Wm5JcE8xeHVJQ0FnSUNBZ0lDQm5jbWxrTFhSbGJYQnNZWFJsTFhKdmQzTTZJSEpsY0dWaGRDZ3lMQ0F4Wm5JcE8xeHVJQ0FnSUNBZ0lDQm5jbWxrTFdOdmJIVnRiaTFuWVhBNklERXlNSEI0TzF4dUlDQWdJQ0FnSUNCbmNtbGtMWEp2ZHkxbllYQTZJRFF3Y0hnN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBM05YQjRPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklETTFjSGc3WEc1Y2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29NVEF3TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpDMWpiMngxYlc0dFoyRndPaUEyTUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpDMXliM2N0WjJGd09pQXpNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTWl3Z01XWnlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0Y205M2N6b2djbVZ3WldGMEtETXNJREZtY2lrN0lIMWNibHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnME9EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nY21Wd1pXRjBLREVzSURGbWNpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCbmNtbGtMWFJsYlhCc1lYUmxMWEp2ZDNNNklISmxjR1ZoZENnMkxDQXhabklwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEVXdjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5jbWxrTFhKdmR5MW5ZWEE2SURFMWNIZzdJSDFjYmx4dUlDQWdJQ0FnSUNBbVgxOXBkR1Z0SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblRXOXVkSE5sY25KaGRDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESTBjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2RtRnlLQzB0WXkxbmNtVjVLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29ORGd3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURJMU1IQjRPeUI5WEc1Y2JseHVYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklGd2lYRnd5TmpBMVhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIWmhjaWd0TFdNdFlteDFaU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklHSnZiR1E3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF0TXpWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREkwY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nTlRBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TlRBbEtUc2dmU0I5SUgxY2JseHVYRzRnSUNBZ0ppMW1iM0p0SUh0Y2JpQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTFOakJ3ZUR0Y2JseHVJQ0FnSUNBZ0lDQW1YMTlqWVhSeklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUExTUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dNM0I0SUhOdmJHbGtJQ05FT1VRNVJEazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLRFUxTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURNd2NIZzdJSDBnZlZ4dVhHNWNiaUFnSUNBZ0lDQWdKbDlmWTJGMElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5UVzl1ZEhObGNuSmhkQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU1IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREkwY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUhaaGNpZ3RMV010WjNKbGVTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTVRad2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvTlRVd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TW5CNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TlhCNE95QjlYRzVjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdKaTB0WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCMllYSW9MUzFqTFc5eVlXNW5aU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQTBjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZkSFJ2YlRvZ0xUTndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dMak56T3lCOUlIMGdmVnh1WEc0Z0lDQWdJQ0FnSUNaZlgyeHBjM1FnZTMxY2JseHVJQ0FnSUNBZ0lDQW1YMTlwZEdWdElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2SURNMWNIZ2dOVEJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpSd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlPWEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIWmhjaWd0TFdNdFozSmxlU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFqWm1abU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNakJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERTFjSGc3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RVMU1Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTWpSd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXlOWEI0SURNd2NIZzdJSDBnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmZYMjltWm1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTFNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdjQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTEwYjNBNklERXdjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeU9YQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjJZWElvTFMxakxXZHlaWGtwT3lCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEVTFNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXpNSEI0TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREl3Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBd095QjlJSDBnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmZYMnhwYm1zZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEa3dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCMllYSW9MUzFqTFc5eVlXNW5aU2s3WEc1Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSmkwdGMzUjViR1VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREp3ZUNCemIyeHBaQ0IyWVhJb0xTMWpMVzl5WVc1blpTazdJSDBnZlNCOUlIMWNibHh1WEc0dWQyOXlhMTlmWVhKeUlIdGNiaUFnSUNCM2FXUjBhRG9nTWpKd2VEdGNiaUFnSUNCb1pXbG5hSFE2SURFMWNIZzdJSDFjYmx4dVhHNHVkMjl5YTE5ZmNHVnljMjl1SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdZbTkwZEc5dE9pQXRNVE13Y0hnN1hHNGdJQ0FnY21sbmFIUTZJREE3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlneE1EVXdLU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdJSDBnZlZ4dUlpd2lMbTVsZDNNZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDTm1abVk3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ2RtRnlLQzB0WW05eVpHVnlMWEpoWkMxaWJHOWpheWs3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F4TlhCNE8xeHVYRzRnSUNBZ1FHbHVZMngxWkdVZ2JYY29OakF3S1NCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURNd2NIZzdJSDFjYmx4dUlDQWdJQ1pmWDNkeVlYQWdlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dNak13Y0hnN0lIMWNibHh1SUNBZ0lDWmZYMnhwYzNRZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEc0Z0lDQWdJQ0FnSUdkaGNEb2dNelZ3ZUR0Y2JpQWdJQ0FnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZzFNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaMkZ3T2lBeE5YQjRPeUI5SUgwZ2ZWeHVYRzVjYmk1dVpYZHpMV2wwWlcwZ2UxeHVJQ0FnSUhkcFpIUm9PaUJqWVd4aktETXpKU0F0SURNMWNIZ3BPMXh1SUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZzFNQ2tnZTF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nWTJGc1l5ZzFNQ1VnTFNBeE5YQjRLVHNnZlZ4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYlhjb05UQXdLU0I3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE95QjlYRzVjYmlBZ0lDQW1YMTlwYldjdGQzSmhjQ0I3WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE13Y0hnZ016QndlQ0F3Y0hnZ016QndlRHNnZlZ4dVhHNGdJQ0FnSmw5ZmFXMW5JSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnYjJKcVpXTjBMV1pwZERvZ1kyOTJaWEk3SUgxY2JseHVJQ0FnSUNaZlgyUmxjMk1nZTF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBek1IQjRJRE13Y0hnZ01EdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTWpSd2VEdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklIWmhjaWd0TFdNdFozSmxlU2s3WEc1Y2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29OVEF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF4TlhCNElETXdjSGdnTmpCd2VEc2dmU0I5SUgxY2JseHVYRzVjYmk1dVpYZHpYMTl6Y0c5cGJHVnlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01URTFjSGc3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qUndlRHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1TFd4cGJtVTZJSFZ1WkdWeWJHbHVaVHRjYmlBZ0lDQmpiMnh2Y2pvZ2RtRnlLQzB0WXkxbmNtVjVLVHRjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNWNiaUFnSUNCQWFXNWpiSFZrWlNCdGR5ZzFNREFwSUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREE3SUgwZ2ZWeHVJaXdpTG1admIzUmxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tDNHVMMmx0WVdkbGN5OW1iMjkwWlhJdlltY3VjRzVuS1R0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeU8xeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHhNREJ3ZUR0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQjJZWElvTFMxaWIzSmtaWEl0Y21Ga0xXSnNiMk5yS1R0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlnMk1EQXBJSHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNekJ3ZURzZ2ZWeHVYRzRnSUNBZ0psOWZkM0poY0NCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBM05YQjRPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3SURFMWNIZzdJSDBnZlZ4dVhHNWNibHh1TG1admIzUmxjaTF0WVhBZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0JvWldsbmFIUTZJRGN3TUhCNE8xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE13Y0hnN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzEzS0RVd01Da2dlMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREU1TlhCNE8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeE1IQjRPeUI5WEc1Y2JpQWdJQ0FtWDE5cGJXY2dlMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUc5aWFtVmpkQzFtYVhRNklHTnZkbVZ5T3lCOVhHNWNibHh1SUNBZ0lDWmZYMmxqYjI0Z2UxeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ05EZ2xPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQTFNU1U3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtDMDFNQ1VzSUMwMU1DVXBPMXh1WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZ3dNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUF4Tm5CNE95QjlJSDFjYmx4dVhHNGdJQ0FnSmw5ZllXUnlaWE56SUh0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQjBiM0E2SURFeU4zQjRPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNVFkwY0hnN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBek1EQndlRHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4T0ROd2VEdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05YQjRJRFl3Y0hnN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJSFpoY2lndExXTXRZbXgxWlNrN1hHNGdJQ0FnSUNBZ0lHSnZlQzF6YUdGa2IzYzZJREJ3ZUNBMWNIZ2dNakJ3ZUNCeVoySmhLREFzSURBc0lEQXNJREF1TURVcE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQTBOWEI0SURRd2NIZzdYRzVjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb01USXdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbWxuYUhRNklEVXdjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURNd2NIZzdJSDFjYmx4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5ZzFNREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN0lIMGdmVnh1WEc0Z0lDQWdKbDlmWVdSeVpYTnpMbTF2WWlCN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF6TUhCNE8xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nWVhWMGJ6dGNiaUFnSUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUF6TURCd2VEdGNibHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnMU1EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSTJabVptWm1aanRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjJZWElvTFMxakxXZHlaWGtwT3lCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhOMlp5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklESXljSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5TlhCNE95QjlJSDBnZlZ4dVhHNWNibHh1SUNBZ0lDWmZYMkZrY21WemN5MTBaWGgwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpCd2VEdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURJMGNIZzdJSDBnZlZ4dVhHNHViV0Z3WDJSdmRDQjdYRzRnSUNBZ2QybGtkR2c2SURJeWNIZzdYRzRnSUNBZ2FHVnBaMmgwT2lBeE9IQjRPMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJeWNIZzdJSDFjYmx4dVhHNHVZMjl1ZEdGamRITWdlMXh1SUNBZ0lHTnZiRzl5T2lBalptWm1PMXh1SUNBZ0lIQmhaR1JwYm1jNklEYzFjSGdnTUR0Y2JpQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdJMlptWmp0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEWXdNQ2tnZTF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBek5YQjRJREFnTXpCd2VEc2dmVnh1WEc0Z0lDQWdKbDlmY0dodmJtVWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURRNGNIZzdYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBMU9YQjRPMXh1SUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUd4bGRIUmxjaTF6Y0dGamFXNW5PaUF3TGpBMVpXMDdYRzRnSUNBZ0lDQWdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXpOWEI0TzF4dUlDQWdJQ0FnSUNCM2FHbDBaUzF6Y0dGalpUb2dibTkzY21Gd08xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RVd01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXpNbkI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURNNWNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTWpCd2VEc2dmVnh1WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tETTFNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TlhCNE95QjlJSDFjYmx4dVhHNWNibHh1SUNBZ0lDWmZYMlZ0WVdsc2N5QjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUNBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nT0RBd2NIZzdYRzVjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb05qQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0TFhkeVlYQTZJSGR5WVhBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqc2dmU0I5WEc1Y2JpQWdJQ0FtWDE5bGJXRnBiQ0I3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qUndlRHRjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESTVjSGc3WEc0Z0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdJQ0FnSUNBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SURBdU1EVmxiVHRjYmlBZ0lDQWdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmx4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5ZzJNREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXhOWEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESXdjSGc3SUgwZ2ZTQjlYRzVjYmk1bWIyOTBaWEpmWDNCdmJHbGplU0I3WEc0Z0lDQWdZMjlzYjNJNklDTm1abVk3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dOREJ3ZUNBd08xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTWpCd2VEdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHMTNLRFl3TUNrZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV5Y0hnN1hHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TlhCNE95QjlJSDFjYmx4dVhHNHVabTl2ZEdWeVgxOWtaV014SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdjbWxuYUhRNklERTRNSEI0TzF4dUlDQWdJSFJ2Y0RvZ0xURXdNSEI0TzF4dUlDQWdJR1pwYkhSbGNqb2dZbXgxY2lnNWNIZ3BPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvTmpBd0tTQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQTVNM0I0TzF4dUlDQWdJQ0FnSUNCMGIzQTZJRE53ZUR0Y2JpQWdJQ0FnSUNBZ2NtbG5hSFE2SURRMWNIZzdJSDBnZlZ4dVhHNHVabTl2ZEdWeVgxOWtaV015SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdZbTkwZEc5dE9pQXlPRFZ3ZUR0Y2JpQWdJQ0JzWldaME9pQTFNelJ3ZUR0Y2JpQWdJQ0JtYVd4MFpYSTZJR0pzZFhJb09YQjRLVHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzEzS0Rnd01Da2dlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE95QjlJSDFjYmlKZGZRPT0gKi9cbiIsIi5zZWN0aW9uLXRpdGxlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTmVvU2Fuc1cxRycsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgZm9udC1zaXplOiA5NnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDExNXB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiB2YXIoLS1jLWZvbnQtZ3JleSk7XHJcbiAgICBwYWRkaW5nLXRvcDogMTMwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNzVweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XHJcbiAgICAuc2VjdGlvbi10aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiA0OHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA1OHB4O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA1MHB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA0MHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbi5zZWN0aW9uLXRpdGxlLS1ibHVlIHtcclxuICAgIGNvbG9yOiB2YXIoLS1jLWZvbnQtYmx1ZSk7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uc2VjdGlvbi10aXRsZS0td2hpdGUge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5ib2xkIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5zZWN0aW9uLXRpdGxlX19pbWcge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLTEwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgLnNlY3Rpb24tdGl0bGVfX2ltZyB7XHJcbiAgICAgICAgbWF4LWhlaWdodDogNTJweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAtNXB4O1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VjdGlvbi10aXRsZS0td3JhcCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmctbGVmdDogMTAwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgLnNlY3Rpb24tdGl0bGUtLXdyYXAge1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogNjBweDtcclxuICAgIH1cclxufVxyXG5cclxuLmRlY19kZXNrIHtcclxuICAgIGRpc3BsYXk6IGlubGluZTtcclxufVxyXG5cclxuLmRlY19tb2Ige1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XHJcbiAgICAuZGVjX2Rlc2sge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5kZWNfbW9iIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLm1vYl93cmFwIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxufVxyXG5cclxuLmhpZGRlbiB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4ucGVjcyB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogMXM7XHJcbn1cclxuXHJcbi5wZWNzX2Rpc2FwcGVhciB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uZml4ZWRCbG9jayB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcclxuICAgIG1heC13aWR0aDogaW5oZXJpdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uaGlkZGVuQmxvY2sge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRvcDogMTUwcHggIWltcG9ydGFudDtcclxufVxyXG4iLCJAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LVJlZ3VsYXIudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUJvbGQudHRmXCIpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUxpZ2h0LnR0ZlwiKTtcbiAgICBmb250LXN0eWxlOiBsaWdodDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiTmVvU2Fuc1cxR1wiO1xuICAgIHNyYzogdXJsKFwiLi4vZm9udHMvTmVvU2Fuc1cxRy1SZWd1bGFyLm90ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiTmVvU2Fuc1cxR1wiO1xuICAgIHNyYzogdXJsKFwiLi4vZm9udHMvTmVvU2Fuc1cxRy1MaWdodC5vdGZcIik7XG4gICAgZm9udC1zdHlsZTogbGlnaHQ7XG59IiwiXG4vKiBMYXJnZSBkZXNrdG9wcyBhbmQgbGFwdG9wcyAqL1xuQG1peGluIG13MTE4MCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExODBweCl7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuLyogU3BlY2lhbCBzaXplIGZvciBnYWxsZXJ5ICovXG5AbWl4aW4gbXcxMDMwIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAzMHB4KXtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG4vKiBMYW5kc2NhcGUgdGFibGV0cyBhbmQgbWVkaXVtIGRlc2t0b3BzICovXG5AbWl4aW4gbXc5Nzkge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5NzlweCl7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuLyogUG9ydHJhaXQgdGFibGV0cyBhbmQgc21hbGwgZGVza3RvcHMgKi9cbkBtaXhpbiBtdzc2OCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuLyogTGFuZHNjYXBlIHBob25lcyBhbmQgcG9ydHJhaXQgdGFibGV0cyAqL1xuQG1peGluIG13NjAwIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpe1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbi8qIFBvcnRyYWl0IHBob25lcyBhbmQgc21hbGxlciAqL1xuQG1peGluIG13NDgwIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpe1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbi8qIElwaG9uZSA1ICovXG5AbWl4aW4gbXczMjAge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCl7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuLyogTXVsdHlwdXJwb3NlIG1heC13aWR0aCBtaXhpbiAqL1xuQG1peGluIG13KCR3aWR0aCkge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkd2lkdGggKyAncHgnKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbi8qIE11bHR5cHVycG9zZSBtaW4td2lkdGggbWl4aW4gKi9cbkBtaXhpbiBtaW53KCR3aWR0aCkge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkd2lkdGggKyAncHgnKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG59XG5cblxuLyogUmVzcG9uc2l2ZSBwYXJhbWV0cnMgKi9cblxuJG1heFdpZHRoOiAxODYwO1xuXG5AbWl4aW4gYWRhcHRpdmUtZm9udCgkcGNTaXplLCAkbW9iU2l6ZSkge1xuICAgICRhZGRTaXplOiAkcGNTaXplIC0gJG1vYlNpemU7XG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XG4gICAgZm9udC1zaXplOiBjYWxjKCN7JG1vYlNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aH0pKTtcbn1cblxuQG1peGluIGFkYXB0aXZlLXBhZGRpbmcoJHBjU2l6ZSwgJG1vYlNpemUpIHtcbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xuICAgICRtYXhXaWR0aDogJG1heFdpZHRoIC0gMzIwO1xuICAgIHBhZGRpbmc6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xufVxuXG5AbWl4aW4gYWRhcHRpdmUtcGFkZGluZy1sZWZ0KCRwY1NpemUsICRtb2JTaXplKSB7XG4gICAgJGFkZFNpemU6ICRwY1NpemUgLSAkbW9iU2l6ZTtcbiAgICAkbWF4V2lkdGg6ICRtYXhXaWR0aCAtIDMyMDtcbiAgICBwYWRkaW5nLWxlZnQ6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xufVxuXG5AbWl4aW4gYWRhcHRpdmUtcGFkZGluZy1yaWdodCgkcGNTaXplLCAkbW9iU2l6ZSkge1xuICAgICRhZGRTaXplOiAkcGNTaXplIC0gJG1vYlNpemU7XG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XG4gICAgcGFkZGluZy1yaWdodDogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGh9KSk7XG59XG5cbkBtaXhpbiBhZGFwdGl2ZS13aWR0aCgkcGNTaXplLCAkbW9iU2l6ZSkge1xuICAgICRhZGRTaXplOiAkcGNTaXplIC0gJG1vYlNpemU7XG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XG4gICAgd2lkdGg6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xufVxuXG5AbWl4aW4gYWRhcHRpdmUtaGVpZ2h0KCRwY1NpemUsICRtb2JTaXplKSB7XG5cbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xuICAgICRtYXhXaWR0aDogJG1heFdpZHRoIC0gMzIwO1xuICAgIGhlaWdodDogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGh9KSk7XG59XG5cbi8qIEVuZCByZXNwb25zaXZlIHBhcmFtZXRycyAqLyIsIioge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3V0bGluZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JywgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGJhY2tncm91bmQ6IHZhcigtLWJnLWdyZXktbGlnaHQpO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW46IDA7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDE5MjBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGNvbG9yOiB2YXIoLS1jLWZvbnQtcmVndWxhcik7XG4gIG1pbi13aWR0aDogMzIwcHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgc2Nyb2xsLXNuYXAtdHlwZTogeSBtYW5kYXRvcnk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICB9XG59XG5cbi53cmFwIHtcbiAgbWF4LXdpZHRoOiAxMTYwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbn1cblxuXG5saSwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuXG4iLCIuYnRuIHtcbiAgICB3aWR0aDogMjgwcHg7XG4gICAgaGVpZ2h0OiA1NHB4O1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWMtZ29sZC1wcmltYXJ5KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDI3cHg7XG4gICAgZm9udC1mYW1pbHk6ICdJbnRlcic7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG4gICAgQGluY2x1ZGUgbXcoNzY4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuXG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tYy1idG4tcHJpbWFyeSk7IH1cblxuICAgICYtd2hpdGUge1xuICAgICAgICBAZXh0ZW5kIC5idG47XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jLWZvbnQtYmxhY2spO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tYy1idG4tc2VjLWhvdmVyKTsgfSB9IH1cblxuLnNoaW5lIHt9XG5cblxuXG5cblxuXG5cbiIsIi5idXJnZXJfbWVudSB7XG4gICAgd2lkdGg6IDI4cHg7XG4gICAgaGVpZ2h0OiAyM3B4O1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgQGluY2x1ZGUgbXcoMTMwMCkge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4iLCJcbi5vdmVybGF5LWRhcmsge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHotaW5kZXg6IC0xMDtcbiAgICB0cmFuc2l0aW9uOiAuM3M7IH1cblxuLm92ZXJsYXktLXNob3duIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvcGFjaXR5OiAuODtcbiAgICB6LWluZGV4OiAxMDAwOyB9XG5cbi5tb2RhbCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogLTUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAzM3B4O1xuICAgIGJveC1zaGFkb3c6IDJweCAwcHggOHB4IDRweCByZ2JhKDM0LCA2MCwgODAsIDAuMik7XG4gICAgei1pbmRleDogMTAwMDA7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG4gICAgd2lkdGg6IDExNjBweDtcbiAgICBoZWlnaHQ6IDcyMHB4O1xuXG5cbiAgICAmX193cmFwIHtcbiAgICAgICAgcGFkZGluZzogNjBweDsgfVxuXG4gICAgJl9faW1hZ2VzIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZ2FwOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuXG4gICAgJl9faW1hZ2Uge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBtYXgtd2lkdGg6IDMwJTtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsgfSB9XG5cblxuXG4gICAgJl9fdGV4dCB7XG4gICAgICAgIG1heC13aWR0aDogNzUlO1xuXG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAzMHB4OyB9IH1cblxuXG5cblxuXG5cblxuICAgICZfX2Nsb3NlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDYwcHg7XG4gICAgICAgIHJpZ2h0OiA2MHB4O1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBvcGFjaXR5OiAxO1xuXG5cbiAgICAgICAgJjo6YmVmb3JlLFxuICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOyB9XG5cblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG5cblxuICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9IH1cblxuICAgICYub3BlbmVkLW1vZGFsIHtcbiAgICAgICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgICAgICB0b3A6IDUwJTsgfSB9XG4iLCIuaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogNTVweCA4MHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuXG5cblxuICAgIEBpbmNsdWRlIG13KDkwMCkge1xuICAgICAgICBwYWRkaW5nOiAzMHB4IDIwcHg7IH1cblxuXG5cbiAgICAmLXRvcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICAmX19iZyB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBmaWx0ZXI6IGJyaWdodG5lc3MoNTAlKTtcbiAgICAgICAgICAgIC8vIG1heC13aWR0aDogMTAwJVxuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogY2FsYygxMDAlICsgMTUwcHgpO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKCAtLWJvcmRlci1yYWQtYmxvY2spIHZhciggLS1ib3JkZXItcmFkLWJsb2NrKSAwIDA7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDYwMCkge1xuICAgICAgICAgICAgICAgIGhlaWdodDogY2FsYygxMDAlICsgMTAwcHgpO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHggMzBweCAwIDA7IH0gfVxuXG4gICAgICAgICZfX2JnLXZpZCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBmaWx0ZXI6IGJyaWdodG5lc3MoNTAlKTtcbiAgICAgICAgICAgIC8vIG1heC13aWR0aDogMTAwJVxuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogY2FsYygxMDAlICsgMTUwcHgpO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKCAtLWJvcmRlci1yYWQtYmxvY2spIHZhciggLS1ib3JkZXItcmFkLWJsb2NrKSAwIDA7IH1cblxuXG5cblxuICAgICAgICAmX19sb2dvIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTg5cHg7XG4gICAgICAgICAgICBtYXgtaGVpZ2h0OiA3OXB4O1xuXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsgfSB9IH1cblxuICAgIC5uLW1lbnUge1xuICAgICAgICBtYXgtd2lkdGg6IDQ2JTtcbiAgICAgICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTBweDtcblxuICAgICAgICBAaW5jbHVkZSBtdygxMzAwKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lOyB9XG5cbiAgICAgICAgJl9fbGlzdCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggNTBweDsgfVxuXG4gICAgICAgICZfX2l0ZW0ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07IH1cblxuICAgICAgICAmX19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogNTBweDtcblxuICAgICAgICAgICAgQGluY2x1ZGUgbXcoMTQyMCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDI1cHg7IH0gfSB9XG5cbiAgICAubi1sYW5nIHtcbiAgICAgICAgd2lkdGg6IDE2MHB4O1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoMTMwMCkge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuXG4gICAgICAgICZfX3N3aXRjaCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWMtb3JhbmdlKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC4zczsgfVxuXG5cbiAgICAgICAgJl9fcnUge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICBsZWZ0OiAyOHB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XG5cbiAgICAgICAgJl9fZW4ge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICByaWdodDogMjhweDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwOyB9IH1cblxuXG4gICAgLm4tbGFuZy5lbiAubi1sYW5nX19zd2l0Y2gge1xuICAgICAgICBsZWZ0OiBjYWxjKDEwMCUgLSA4MHB4KTsgfVxuXG4gICAgLm4tbGFuZy5lbiAubi1sYW5nX19ydSB7XG4gICAgICAgIGNvbG9yOiAjMDAwOyB9XG5cbiAgICAubi1sYW5nLmVuIC5uLWxhbmdfX2VuIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH0gfVxuXG4uaGVhZGVyLW1haW4ge1xuICAgIHBhZGRpbmctdG9wOiA0ODBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG5cbiAgICBAaW5jbHVkZSBtdygxMzAwKSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0YXJ0OyB9IH1cblxuXG4uaGVhZGVyLW1haW5fX3RpdGxlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiA1MHB4OyB9XG5cbi5oZWFkZXItbWFpbl9fc3VidGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE1MCU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgd2lkdGg6IDQ4MHB4O1xuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1cHg7IH0gfVxuIiwiLnByb2R1Y3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZC1ibG9jayk7XG4gICAgc2Nyb2xsLXNuYXAtYWxpZ246IHN0YXJ0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxMDA7XG5cbiAgICBAaW5jbHVkZSBtdyg2MDApIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDsgfVxuXG5cbiAgICAmX193cmFwIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMTkwcHg7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOiAwIDE1cHggMTMwcHg7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoNjAwKSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMDBweDsgfSB9IH1cblxuXG5cblxuLnByb2R1Y3RzIHt9XG5cblxuLnByb2R1Y3RzLW1lbnUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIG1pbi13aWR0aDogMzAwcHg7XG5cbiAgICBAaW5jbHVkZSBtdygxMjAwKSB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogMzBweDtcbiAgICAgICAgZ3JpZC1yb3ctZ2FwOiAxNXB4OyB9XG5cbiAgICBAaW5jbHVkZSBtdyg1MDApIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcbiAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAyMHB4OyB9XG5cbiAgICBAaW5jbHVkZSBtdygzNTApIHtcbiAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxMHB4OyB9IH1cblxuXG4ucHJvZHVjdHMtbWVudV9faXRlbSB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICAgIHBhZGRpbmc6IDIwcHggMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAuM3M7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmQ4MDI3NmU7XG4gICAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG5cblxuICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7IH1cblxuICAgIEBpbmNsdWRlIG13KDM3MCkge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgICAgICBwYWRkaW5nOiAxMHB4OyB9XG5cblxuICAgICYtLWFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWMtb3JhbmdlKTtcbiAgICAgICAgY29sb3I6ICNmZmY7IH0gfVxuXG5cbi5wcm9kdWN0cy1saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBnYXA6IDI1cHg7IH1cblxuLnByb2R1Y3RzLWxpc3RfX2l0ZW0ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXgtd2lkdGg6IDM3MHB4O1xuICAgIHRyYW5zaXRpb246IC4ycztcblxuICAgIEBpbmNsdWRlIG13KDYwMCkge1xuICAgICAgICBtYXgtd2lkdGg6IDI1NHB4OyB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMSk7IH1cblxuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyOyB9IH1cblxuLnByb2R1Y3RfX29yZGVyIHt9XG5cbi5vcmRlciB7XG4gICAgbWFyZ2luLXRvcDogMzZweDtcbiAgICB3aWR0aDogMzUwcHg7XG4gICAgaGVpZ2h0OiAxODdweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMDJweDtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jLW9yYW5nZSk7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgcGFkZGluZzogNDBweCA2NHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiBjYWxjKDEwMCUgLSAzNTBweCk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHotaW5kZXg6IDEwMDtcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG5cbiAgICBAaW5jbHVkZSBtdyg4MDApIHtcbiAgICAgICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICAgICAgd2lkdGg6IDMwNnB4O1xuICAgICAgICBoZWlnaHQ6IDE0OXB4OyB9XG5cbiAgICBAaW5jbHVkZSBtdyg0NTApIHtcbiAgICAgICAgbGVmdDogMjJweDsgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGZpbHRlcjogYnJpZ2h0bmVzcygxMTAlKTsgfSB9XG5cbi5vcmRlcl9fdGV4dCB7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDE3MHB4O1xuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE1cHg7XG4gICAgICAgIHdpZHRoOiAxMjFweDsgfSB9XG5cbi5vcmRlcl9fdm9sIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogNjRweDtcbiAgICBsaW5lLWhlaWdodDogNzhweDtcblxuICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA1OXB4OyB9IH1cblxuLm9yZGVyX19hcnIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDkwcHg7XG4gICAgcmlnaHQ6IDcwcHg7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIHRvcDogNjJweDsgfSB9XG5cblxuLnByb2R1Y3RfX2RlY29yIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IC0zNyU7XG4gICAgdG9wOiA0MjRweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgZm9udC1mYW1pbHk6ICdOZW9TYW5zVzFHJztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTE1LjIyMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMzhweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAjRjhGOEY4O1xuXG4gICAgQGluY2x1ZGUgbXcoMTUzMCkge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiIsIi5taXNzaW9uIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTMwcHg7IH1cblxuLm1pc3Npb25fX3dyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG5cbi5taXNzaW9uLW1haW4ge1xuICAgIHBhZGRpbmc6IDkwcHggMTEzcHg7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tYy1ibHVlKTtcbiAgICBtYXgtd2lkdGg6IDY1M3B4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIG1hcmdpbi1ib3R0b206IDc1cHg7XG5cbiAgICBAaW5jbHVkZSBtdyg2MDApIHtcbiAgICAgICAgcGFkZGluZzogNjBweCA1MHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAzMHB4IDMwcHggMHB4IDBweDsgfVxuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuICAgICZfX2ltZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA0MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgbGVmdDogLTU1cHg7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoNjAwKSB7XG4gICAgICAgICAgICB3aWR0aDogMTNweDtcbiAgICAgICAgICAgIGhlaWdodDogMjVweDtcbiAgICAgICAgICAgIGxlZnQ6IC0yNXB4O1xuICAgICAgICAgICAgdG9wOiAzMyU7IH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7IH0gfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LWZhbWlseTogJ05lb1NhbnNXMUcnO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA0M3B4O1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoNjAwKSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjRweDsgfSB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMjlweDtcblxuICAgICAgICBAaW5jbHVkZSBtdyg2MDApIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4OyB9IH0gfVxuXG5cblxuXG5cbi5taXNzaW9uLWFkdiB7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cblxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkO1xuICAgICAgICBib3JkZXItY29sb3I6IGhzbGEoMjE4LCA5NCUsIDEzJSwgMC4zKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICB3aWR0aDogMzAwcHg7XG4gICAgICAgIGhlaWdodDogMzAwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMTVweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG5cblxuXG4gICAgICAgIEBpbmNsdWRlIG13KDExODApIHtcbiAgICAgICAgICAgIHdpZHRoOiAyNXZ3O1xuICAgICAgICAgICAgaGVpZ2h0OiAyNXZ3OyB9XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgICAgICB3aWR0aDogMjI3cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDIyN3B4O1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTE1cHg7IH0gfVxuXG5cblxuXG4gICAgJl9fdGV4dCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jLWJsdWUpO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuICAgICZfX3RvcC10ZXh0IHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdOZW9TYW5zVzFHJztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiA2NHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogNzdweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWluLWhlaWdodDogODBweDtcblxuICAgICAgICBAaW5jbHVkZSBtdygxMDAwKSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7IH1cblxuICAgICAgICBAaW5jbHVkZSBtdyg4MDApIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNjRweDtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxNXB4OyB9IH1cblxuXG4gICAgJl9fc3VidGV4dCB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEzMCU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY29sb3I6ICM1QTVBNUE7XG4gICAgICAgIG1pbi13aWR0aDogMjUwcHg7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtaW4taGVpZ2h0OiA4MHB4O1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDEwMDApIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogYXV0bzsgfVxuICAgICAgICBAaW5jbHVkZSBtdyg4MDApIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgIG1pbi13aWR0aDogMjUwcHg7IH0gfSB9XG5cblxuXG4ubWlzc2lvbl9fZGVjIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDI3NnB4O1xuICAgIGJvdHRvbTogLTE1MHB4O1xuICAgIGZpbHRlcjogYmx1cig5cHgpO1xuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIG1heC13aWR0aDogODBweDtcbiAgICAgICAgcmlnaHQ6IDcycHg7XG4gICAgICAgIGJvdHRvbTogLTE1cHg7IH0gfVxuIiwiLmhpc3Rvcnkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBAaW5jbHVkZSBtdyg4ODApIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4uaGlzdG9yeV9fd3JhcCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cblxuLnJhaWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTMwcHg7IH1cblxuXG5cblxuLnllYXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiA1MnB4O1xuICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiA1MCU7XG5cblxuXG4gICAgJl9fYXJyIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAxNXB4OyB9XG5cbiAgICAmX19udW0ge1xuICAgICAgICBmb250LWZhbWlseTogJ05lb1NhbnNXMUcnO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDY0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA3N3B4O1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jLWJsdWUpO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH0gfVxuXG5cblxuLmV2ZW50cyB7XG5cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBtYXgtd2lkdGg6IDY2MHB4O1xuICAgICAgICBtaW4taGVpZ2h0OiAyNTVweDtcbiAgICAgICAgcGFkZGluZzogNjBweDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHRyYW5zaXRpb246IC40cztcblxuICAgICAgICAmOm50aC1jaGlsZCgybikge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tYy1ibHVlKTsgfVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDJuKSAuZXZlbnRzX190aXRsZSB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjsgfVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDJuKSAuZXZlbnRzX190ZXh0IHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmOyB9IH1cblxuXG5cbiAgICAmX190aXRsZSB7XG4gICAgICAgIG9udC1mYW1pbHk6ICdOZW9TYW5zVzFHJztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTQwJTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgY29sb3I6IHZhcigtLWMtYmx1ZSk7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4OyB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxNDAlO1xuICAgICAgICBjb2xvcjogIzVBNUE1QTsgfSB9XG5cblxuLmhpc3RvcnlfX2RlYyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAxNTBweDtcbiAgICB6LWluZGV4OiAtMTsgfVxuXG4uaGlzdG9yeV9fZGVjb3ItY2lyY2xlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyNTBweDsgfVxuXG4uaGlzdG9yeV9fZGVjb3ItY2lyY2xlLTIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEyMDBweDsgfVxuIiwiLmdlb2dyYXBoeSB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkLWJsb2NrKTtcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG5cbiAgICBAaW5jbHVkZSBtdyg2MDApIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDsgfSB9XG5cbi5nZW9ncmFwaHlfX3dyYXAge1xuICAgIHBhZGRpbmctYm90dG9tOiAxNTBweDtcblxuICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfSB9XG5cblxuXG4uY291bnRyaWVzIHtcblxuXG4gICAgJl9fbGlzdCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICB3aWR0aDogNTEwcHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcblxuICAgICAgICBAaW5jbHVkZSBtdyg4MDApIHtcbiAgICAgICAgICAgIHdpZHRoOiAzNjBweDsgfSB9XG5cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG5cbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFwyMDIyXCI7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tYy1ibHVlKTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMWVtOyB9XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDsgfSB9IH1cblxuLmdlb2dyYXBoeV9fbWFwLXdyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ubWFwIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDU1cHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuXG4gICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cblxuICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1MHB4OyB9IH1cblxuXG4ubGFiZWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDE1MHB4O1xuXG4gICAgQGluY2x1ZGUgbXcoMTAwMCkge1xuICAgICAgICByaWdodDogNTBweDtcbiAgICAgICAgbWF4LXdpZHRoOiAyNTBweDsgfVxuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIG1heC13aWR0aDogMTI1cHg7XG4gICAgICAgIHRvcDogMjBweDtcbiAgICAgICAgcmlnaHQ6IDMwcHg7XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlOyB9IH0gfVxuXG5cblxuXG4jbWFwIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDU1cHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgbXcoODAwKSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7IH1cblxuICAgIHBhdGgge1xuICAgICAgICB0cmFuc2l0aW9uOiAuMnM7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgc3Ryb2tlLXdpZHRoOiA1cHggIWltcG9ydGFudDtcbiAgICAgICAgICAgIHN0cm9rZTogI2Y1ZmY2ZiAhaW1wb3J0YW50OyB9IH0gfVxuIiwiLndvcmsge1xuICAgIHBhZGRpbmctYm90dG9tOiAxMzBweDtcblxuICAgIEBpbmNsdWRlIG13KDU1MCkge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNzBweDsgfVxuXG4gICAgJl9fd3JhcCB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4gICAgJi1hZHYge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xuICAgICAgICBncmlkLWNvbHVtbi1nYXA6IDEyMHB4O1xuICAgICAgICBncmlkLXJvdy1nYXA6IDQwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoMTAwMCkge1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiA2MHB4O1xuICAgICAgICAgICAgZ3JpZC1yb3ctZ2FwOiAzMHB4O1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7IH1cblxuICAgICAgICBAaW5jbHVkZSBtdyg0ODApIHtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEsIDFmcik7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg2LCAxZnIpO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG4gICAgICAgICAgICBncmlkLXJvdy1nYXA6IDE1cHg7IH1cblxuICAgICAgICAmX19pdGVtIHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgQGluY2x1ZGUgbXcoNDgwKSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDI1MHB4OyB9XG5cblxuXG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFwyNjA1XCI7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLWMtYmx1ZSk7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMzVweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfSB9IH1cblxuXG4gICAgJi1mb3JtIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1NjBweDtcblxuICAgICAgICAmX19jYXRzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNEOUQ5RDk7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDU1MCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH0gfVxuXG5cbiAgICAgICAgJl9fY2F0IHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWMtZ3JleSk7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICAgICAgQGluY2x1ZGUgbXcoNTUwKSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4OyB9XG5cblxuICAgICAgICAgICAgJi0tYWN0aXZlIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jLW9yYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTNweDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzOyB9IH0gfVxuXG4gICAgICAgICZfX2xpc3Qge31cblxuICAgICAgICAmX19pdGVtIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDM1cHggNTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWMtZ3JleSk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDU1MCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyNXB4IDMwcHg7IH0gfVxuXG4gICAgICAgICZfX29mZmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA1MHB4O1xuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpOyB9XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDU1MCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuXG4gICAgICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwOyB9IH0gfVxuXG4gICAgICAgICZfX2xpbmsge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jLW9yYW5nZSk7XG5cblxuICAgICAgICAgICAgJi0tc3R5bGUge1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB2YXIoLS1jLW9yYW5nZSk7IH0gfSB9IH1cblxuXG4ud29ya19fYXJyIHtcbiAgICB3aWR0aDogMjJweDtcbiAgICBoZWlnaHQ6IDE1cHg7IH1cblxuXG4ud29ya19fcGVyc29uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAtMTMwcHg7XG4gICAgcmlnaHQ6IDA7XG5cbiAgICBAaW5jbHVkZSBtdygxMDUwKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuIiwiLm5ld3Mge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZC1ibG9jayk7XG4gICAgcGFkZGluZzogMCAxNXB4O1xuXG4gICAgQGluY2x1ZGUgbXcoNjAwKSB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7IH1cblxuICAgICZfX3dyYXAge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjMwcHg7IH1cblxuICAgICZfX2xpc3Qge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGdhcDogMzVweDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDg1MCkge1xuICAgICAgICAgICAgZ2FwOiAxNXB4OyB9IH0gfVxuXG5cbi5uZXdzLWl0ZW0ge1xuICAgIHdpZHRoOiBjYWxjKDMzJSAtIDM1cHgpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBpbmNsdWRlIG13KDg1MCkge1xuICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAxNXB4KTsgfVxuXG4gICAgQGluY2x1ZGUgbXcoNTAwKSB7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9XG5cbiAgICAmX19pbWctd3JhcCB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHggMzBweCAwcHggMzBweDsgfVxuXG4gICAgJl9faW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7IH1cblxuICAgICZfX2Rlc2Mge1xuICAgICAgICBwYWRkaW5nOiAzMHB4IDMwcHggMDtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgICAgY29sb3I6IHZhcigtLWMtZ3JleSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoNTAwKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4IDMwcHggNjBweDsgfSB9IH1cblxuXG5cbi5uZXdzX19zcG9pbGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLXRvcDogMTE1cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1kZWNvcmF0aW9uLWxpbmU6IHVuZGVybGluZTtcbiAgICBjb2xvcjogdmFyKC0tYy1ncmV5KTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICBAaW5jbHVkZSBtdyg1MDApIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDA7IH0gfVxuIiwiLmZvb3RlciB7XG4gICAgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlcy9mb290ZXIvYmcucG5nKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIG1hcmdpbi10b3A6IC0xMDBweDtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkLWJsb2NrKTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBAaW5jbHVkZSBtdyg2MDApIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDsgfVxuXG4gICAgJl9fd3JhcCB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgICAgICBwYWRkaW5nOiAwIDE1cHg7IH0gfVxuXG5cblxuLmZvb3Rlci1tYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDcwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIEBpbmNsdWRlIG13KDUwMCkge1xuICAgICAgICBoZWlnaHQ6IDE5NXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4OyB9XG5cbiAgICAmX19pbWcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyOyB9XG5cblxuICAgICZfX2ljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNDglO1xuICAgICAgICBsZWZ0OiA1MSU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxNnB4OyB9IH1cblxuXG4gICAgJl9fYWRyZXNzIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDEyN3B4O1xuICAgICAgICByaWdodDogMTY0cHg7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxODNweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4IDYwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWMtYmx1ZSk7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgICAgICBwYWRkaW5nOiA0NXB4IDQwcHg7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoMTIwMCkge1xuICAgICAgICAgICAgcmlnaHQ6IDUwcHg7XG4gICAgICAgICAgICB0b3A6IDMwcHg7IH1cblxuICAgICAgICBAaW5jbHVkZSBtdyg1MDApIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4gICAgJl9fYWRyZXNzLm1vYiB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcblxuICAgICAgICBAaW5jbHVkZSBtdyg1MDApIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1jLWdyZXkpOyB9XG5cbiAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDIycHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyNXB4OyB9IH0gfVxuXG5cblxuICAgICZfX2FkcmVzcy10ZXh0IHtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7IH0gfVxuXG4ubWFwX2RvdCB7XG4gICAgd2lkdGg6IDIycHg7XG4gICAgaGVpZ2h0OiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIycHg7IH1cblxuXG4uY29udGFjdHMge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHBhZGRpbmc6IDc1cHggMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcblxuICAgIEBpbmNsdWRlIG13KDYwMCkge1xuICAgICAgICBwYWRkaW5nOiAzNXB4IDAgMzBweDsgfVxuXG4gICAgJl9fcGhvbmUge1xuICAgICAgICBmb250LXNpemU6IDQ4cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiA1OXB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAzNXB4O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDUwMCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDM5cHg7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsgfVxuXG4gICAgICAgIEBpbmNsdWRlIG13KDM1MCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4OyB9IH1cblxuXG5cblxuICAgICZfX2VtYWlscyB7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIG1heC13aWR0aDogODAwcHg7XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoNjAwKSB7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfSB9XG5cbiAgICAmX19lbWFpbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI5cHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICAgICAgICBAaW5jbHVkZSBtdyg2MDApIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7IH0gfSB9XG5cbi5mb290ZXJfX3BvbGljeSB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgcGFkZGluZzogNDBweCAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcblxuICAgIEBpbmNsdWRlIG13KDYwMCkge1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4OyB9IH1cblxuXG4uZm9vdGVyX19kZWMxIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDE4MHB4O1xuICAgIHRvcDogLTEwMHB4O1xuICAgIGZpbHRlcjogYmx1cig5cHgpO1xuXG4gICAgQGluY2x1ZGUgbXcoNjAwKSB7XG4gICAgICAgIHdpZHRoOiA5M3B4O1xuICAgICAgICB0b3A6IDNweDtcbiAgICAgICAgcmlnaHQ6IDQ1cHg7IH0gfVxuXG4uZm9vdGVyX19kZWMyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAyODVweDtcbiAgICBsZWZ0OiA1MzRweDtcbiAgICBmaWx0ZXI6IGJsdXIoOXB4KTtcblxuICAgIEBpbmNsdWRlIG13KDgwMCkge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiJdfQ== */
