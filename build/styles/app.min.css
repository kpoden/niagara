:root{--c-orange: #FD8127;--c-blue: #021A42;--bg-grey-light: #F2F2F2;--c-grey: #5A5A5A;--c-font-blue: #021A42;--c-font-grey: #A7A7A7;--border-rad-block: 60px}.section-title{font-family:'NeoSansW1G',Arial,Helvetica,sans-serif;font-style:normal;font-weight:300;font-size:96px;line-height:115px;text-transform:uppercase;color:var(--c-font-grey);padding-top:130px;padding-bottom:75px}@media (max-width:800px){.section-title{font-size:48px;line-height:58px;padding-top:50px;padding-bottom:40px}}.section-title--blue{color:var(--c-font-blue);font-weight:600}.section-title--white{color:#fff}.bold{font-weight:600}.section-title__img{margin-bottom:-10px}@media (max-width:800px){.section-title__img{max-height:52px;margin-bottom:-5px;margin-left:10px}}.section-title--wrap{display:block;padding-left:100px}@media (max-width:600px){.section-title--wrap{padding-left:60px}}.dec_desk{display:inline}.dec_mob{display:none}@media (max-width:800px){.dec_desk{display:none}.dec_mob{display:inline}.mob_wrap{display:block}}.hidden{display:none}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Regular.ttf)}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Bold.ttf);font-weight:700}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Light.ttf);font-style:light}@font-face{font-family:"NeoSansW1G";src:url(../fonts/NeoSansW1G-Regular.otf)}@font-face{font-family:"NeoSansW1G";src:url(../fonts/NeoSansW1G-Light.otf);font-style:light}*{-webkit-box-sizing:border-box;box-sizing:border-box;outline:0;padding:0}body{font-family:'Montserrat',Arial,sans-serif;background:var(--bg-grey-light)}*,h1,h2,h3,h4,h5,h6{margin:0}.container{max-width:1920px;margin:0 auto;color:var(--c-font-regular);min-width:320px;padding:20px;position:relative}@media (max-width:800px){.container{padding:12px}}.wrap{max-width:1160px;margin:0 auto;width:100%}li,ul{list-style:none}a{text-decoration:none;color:inherit}.btn,.btn-white{width:280px;height:54px;background:var(--c-gold-primary);text-align:center;border:0;border-radius:27px;font-family:'Inter';font-style:normal;font-weight:700;font-size:16px;line-height:24px;color:#fff;cursor:pointer;-webkit-transition:.2s;transition:.2s}@media (max-width:768px){.btn,.btn-white{font-size:14px}}.btn-white:hover,.btn:hover{background:var(--c-btn-primary)}.btn-white{background:#fff;color:var(--c-font-black)}.btn-white:hover{background:var(--c-btn-sec-hover)}.burger_menu{width:28px;height:23px;display:none;cursor:pointer}@media (max-width:1300px){.burger_menu{display:block}}.overlay-dark{width:100%;height:100%;position:fixed;background:#000;opacity:0;z-index:-10;-webkit-transition:.3s;transition:.3s}.overlay--shown{display:block;opacity:.8;z-index:1000}.modal{position:fixed;top:-50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background:#fff;border-radius:33px;-webkit-box-shadow:2px 0 8px 4px rgba(34,60,80,.2);box-shadow:2px 0 8px 4px rgba(34,60,80,.2);z-index:10000;opacity:0;-webkit-transition:.2s;transition:.2s;width:1160px;height:720px}.modal__wrap{padding:60px}.modal__images{display:-webkit-box;display:-ms-flexbox;display:flex;gap:20px;padding-bottom:60px}.modal__image{border-radius:10px;overflow:hidden;max-width:30%}.modal__image img{-o-object-fit:cover;object-fit:cover}.modal__text{max-width:75%}.modal__text p{font-family:'Montserrat';font-style:normal;font-weight:400;font-size:20px;line-height:24px;color:var(--c-grey);padding-bottom:30px}.modal__close{position:absolute;top:60px;right:60px;display:inline-block;width:24px;height:24px;padding:0;border:0;background:0 0;cursor:pointer;opacity:1}.modal__close::after,.modal__close::before{content:'';position:absolute;width:100%;height:3px;top:50%;left:0;background-color:#333}.modal__close::before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal__close::after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal.opened-modal{opacity:1!important;top:50%}.header{position:relative;padding:55px 80px;color:#fff}@media (max-width:900px){.header{padding:30px 20px}}.header-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-top__bg{position:absolute;top:0;left:0;z-index:-1;-webkit-filter:brightness(50%);filter:brightness(50%);-o-object-fit:cover;object-fit:cover;width:100%;height:calc(100% + 150px);border-radius:var(--border-rad-block) var(--border-rad-block) 0 0}@media (max-width:600px){.header-top__bg{height:calc(100% + 100px);border-radius:30px 30px 0 0}}.header-top__logo{max-width:189px;max-height:79px}.header-top__logo img,.modal__image img{width:100%;height:100%}.header .n-menu{max-width:800px;background:rgba(255,255,255,.15);border-radius:90px}@media (max-width:1300px){.header .n-menu{display:none}}.header .n-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 50px}.header .n-menu__item{font-size:20px;line-height:24px;letter-spacing:.1em}.header .n-menu__item:not(:last-child){padding-right:50px}@media (max-width:1420px){.header .n-menu__item:not(:last-child){padding-right:25px}}.header .n-lang{width:160px;height:60px;background:#fff;border-radius:5px;position:relative;cursor:pointer}@media (max-width:1300px){.header .n-lang{display:none}}.header .n-lang__switch{position:absolute;left:0;top:0;height:100%;width:50%;border-radius:5px;background:var(--c-orange);-webkit-transition:.3s;transition:.3s}.header .n-lang__en,.header .n-lang__ru{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.header .n-lang__ru{left:28px}.header .n-lang__en{right:28px;color:#000}.header .n-lang.en .n-lang__switch{left:calc(100% - 80px)}.header .n-lang.en .n-lang__ru{color:#000}.header .n-lang.en .n-lang__en{color:#fff}.header-main{padding-top:480px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:15px}@media (max-width:1300px){.header-main{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:start;-ms-flex-align:start;align-items:start}}.header-main__title{padding-right:50px}.header-main__subtitle{font-family:'Montserrat';font-weight:300;font-size:36px;line-height:150%;letter-spacing:.1em;text-transform:uppercase;width:480px}@media (max-width:800px){.header-main__subtitle{font-size:20px;max-width:280px;padding-bottom:15px}}.product{background-color:#fff;border-radius:var(--border-rad-block)}@media (max-width:600px){.product{border-radius:30px}}.product__wrap{max-width:1190px;margin:0 auto;width:100%;position:relative;padding:0 15px 130px}@media (max-width:600px){.product__wrap{margin-bottom:100px}}.products-menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-bottom:75px;min-width:300px}@media (max-width:1200px){.products-menu{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:30px;grid-row-gap:15px}}@media (max-width:500px){.products-menu{grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr);grid-column-gap:20px}}@media (max-width:350px){.products-menu{grid-column-gap:10px}}.products-menu__item{font-size:24px;line-height:29px;padding:20px 30px;border-radius:10px;cursor:pointer;-webkit-transition:.3s;transition:.3s;text-align:center;white-space:nowrap}.products-menu__item:hover{background:#fd80276e;color:#000}@media (max-width:800px){.products-menu__item{font-size:16px;line-height:20px;padding:10px 15px}}@media (max-width:370px){.products-menu__item{white-space:normal;padding:10px}}.products-menu__item--active{background:var(--c-orange);color:#fff}.products-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:25px}.products-list__item{cursor:pointer;max-width:370px;-webkit-transition:.2s;transition:.2s}@media (max-width:600px){.products-list__item{max-width:254px}}.products-list__item:hover{-webkit-filter:brightness(1.1);filter:brightness(1.1)}.products-list__item img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.order{margin-top:36px;width:350px;height:187px;border-radius:202px;background:var(--c-orange);color:#fff;padding:40px 64px;position:absolute;left:calc(100% - 350px);cursor:pointer;z-index:100;-webkit-transition:.2s;transition:.2s}@media (max-width:800px){.order{margin-top:50px;width:306px;height:149px}}@media (max-width:450px){.order{left:22px}}.order:hover{-webkit-filter:brightness(110%);filter:brightness(110%)}.order__text{font-weight:400;font-size:16px;line-height:20px;width:170px}@media (max-width:800px){.order__text{font-size:12px;line-height:15px;width:121px}}.order__vol{font-weight:400;font-size:64px;line-height:78px}@media (max-width:800px){.order__vol{font-size:48px;line-height:59px}}.order__arr{position:absolute;top:90px;right:70px;width:40px;height:35px}@media (max-width:800px){.order__arr{top:62px}}.product__decor{position:absolute;right:-37%;top:424px;-webkit-transform:rotate(90deg);transform:rotate(90deg);font-family:'NeoSansW1G';font-weight:400;font-size:115.222px;line-height:138px;text-transform:uppercase;color:#f8f8f8}@media (max-width:1530px){.product__decor{display:none}}.mission{padding-bottom:130px}.mission__wrap{position:relative}.mission-main{padding:90px 113px;background:var(--c-blue);max-width:653px;color:#fff;margin-bottom:75px}@media (max-width:600px){.mission-main{padding:60px 50px;border-radius:30px 30px 0 0}}@media (max-width:800px){.mission-main{max-width:none;width:100%;margin-bottom:50px}}.mission-main__img{position:absolute;top:40%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:-55px}@media (max-width:600px){.mission-main__img{width:13px;height:25px;left:-25px;top:33%}}.mission-main__img img{width:100%;height:100%}.mission-main__title{font-family:'NeoSansW1G';font-weight:400;font-size:36px;line-height:43px;letter-spacing:.1em;text-transform:uppercase;padding-bottom:15px;position:relative}@media (max-width:600px){.mission-main__title{font-size:20px;line-height:24px}}.mission-main__text{font-family:'Montserrat';font-weight:400;font-size:24px;line-height:29px}@media (max-width:600px){.mission-main__text{font-size:12px;line-height:15px}}.mission-adv{display:-webkit-box;display:-ms-flexbox;display:flex}@media (max-width:800px){.mission-adv{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.mission-adv__item{border:1px solid;border-color:rgba(2,25,64,.3);border-radius:50%;width:300px;height:300px;position:relative;margin-right:-15px}@media (max-width:1180px){.mission-adv__item{width:25vw;height:25vw}}@media (max-width:800px){.mission-adv__item{width:227px;height:227px;margin-right:0;margin-top:-15px}}.mission-adv__text{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:var(--c-blue);text-align:center}.mission-adv__top-text{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;text-align:center;display:block;min-height:80px}@media (max-width:1000px){.mission-adv__top-text{font-size:50px}}@media (max-width:800px){.mission-adv__top-text{font-size:64px;padding-top:15px}}.mission-adv__subtext{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:130%;text-align:center;color:#5a5a5a;min-width:250px;display:block;min-height:80px}@media (max-width:1000px){.mission-adv__subtext{font-size:16px;min-width:auto}}@media (max-width:800px){.mission-adv__subtext{font-size:20px;min-width:250px}}.mission__dec{position:absolute;right:276px;bottom:-150px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:800px){.mission__dec{max-width:80px;right:72px;bottom:-15px}}.history{position:relative}@media (max-width:880px){.history{display:none}}.history__wrap{position:relative}.rail,.year{display:-webkit-box;display:-ms-flexbox;display:flex}.rail{position:relative;padding-bottom:130px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.year{height:52px;margin-top:60px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}.year__arr{margin-right:40px;margin-top:15px}.year__num{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;letter-spacing:.1em;color:var(--c-blue);white-space:nowrap;margin-right:20px}.events__item{max-width:660px;min-height:255px;padding:60px;background:#fff}.events__item:nth-child(2n){background:var(--c-blue)}.events__item:nth-child(2n) .events__text,.events__item:nth-child(2n) .events__title{color:#fff}.events__text,.events__title{font-weight:400;line-height:140%}.events__title{ont-family:'NeoSansW1G';letter-spacing:.05em;text-transform:uppercase;color:var(--c-blue);padding-bottom:15px;font-size:36px}.events__text{font-family:'Montserrat';font-style:normal;font-size:24px;color:#5a5a5a}.history__dec{position:absolute;left:0;bottom:150px}.history__decor-circle,.history__decor-circle-2{width:100%;position:absolute;top:250px}.history__decor-circle-2{top:1200px}.geography{background:#fff;border-radius:var(--border-rad-block);padding:0 15px}@media (max-width:600px){.geography{border-radius:30px}}.geography__wrap{padding-bottom:150px}@media (max-width:800px){.geography__wrap{padding-bottom:60px}}.countries__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;width:510px;padding-left:20px}@media (max-width:800px){.countries__list{width:360px}}.countries__item{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;letter-spacing:.05em;text-transform:uppercase;color:var(--c-grey);width:50%;padding-bottom:15px}.countries__item::before,.work-adv__item::before{color:var(--c-blue);font-weight:700;display:inline-block}.countries__item::before{width:1em;content:"\2022";margin-left:-1em}@media (max-width:800px){.countries__item{font-size:16px;line-height:20px}}.geography__map-wrap{position:relative}.map{padding-left:55px;max-width:100%}.map img{width:100%}@media (max-width:800px){.map{padding-left:0;padding-top:50px}}.label{position:absolute;top:0;right:150px}@media (max-width:1000px){.label{right:50px;max-width:250px}}@media (max-width:800px){.label{max-width:125px;top:20px;right:30px}.label img{width:100%}}.work{padding-bottom:130px}@media (max-width:550px){.work{padding-bottom:70px}}.work__wrap{position:relative}.work-adv{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:120px;grid-row-gap:40px;padding-bottom:75px;padding-left:35px}@media (max-width:1000px){.work-adv{grid-column-gap:60px;grid-row-gap:30px;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr)}}@media (max-width:480px){.work-adv{grid-template-columns:repeat(1,1fr);grid-template-rows:repeat(6,1fr);padding-bottom:50px;grid-row-gap:15px}}.work-adv__item{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;color:var(--c-grey);position:relative}@media (max-width:480px){.work-adv__item{font-size:16px;line-height:20px;max-width:250px}}.work-adv__item::before{content:"\2605";margin-left:-35px;font-size:24px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.work-form{max-width:560px}.work-form__cats{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:50px;border-bottom:3px solid #d9d9d9}@media (max-width:550px){.work-form__cats{margin-bottom:30px}}.work-form__cat{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;text-transform:uppercase;color:var(--c-grey);padding-bottom:16px;cursor:pointer}@media (max-width:550px){.work-form__cat{font-size:12px;line-height:15px}}.work-form__cat--active{position:relative}.work-form__cat--active::before{content:"";background:var(--c-orange);width:100%;display:inline-block;position:absolute;height:4px;bottom:-3px;-webkit-transition:.3s;transition:.3s}.work-form__item{padding:35px 50px;font-size:24px;line-height:29px;color:var(--c-grey);background:#fff;margin-bottom:20px;border-radius:15px}@media (max-width:550px){.work-form__item{font-size:20px;line-height:24px;padding:25px 30px}}.work-form__offer{padding-top:50px}.work-form__offer p{padding-top:10px;font-size:24px;line-height:29px;color:var(--c-grey)}@media (max-width:550px){.work-form__offer{padding-top:30px}.work-form__offer p{font-size:16px;line-height:20px;padding-top:0}}.work-form__link{font-weight:900;color:var(--c-orange)}.work-form__link--style{border-bottom:2px solid var(--c-orange)}.work__arr{width:22px;height:15px}.work__person{position:absolute;bottom:-130px;right:0}@media (max-width:1050px){.work__person{display:none}}.news{background:#fff;border-radius:var(--border-rad-block);padding:0 15px}@media (max-width:600px){.news{border-radius:30px}}.news__wrap{padding-bottom:230px}.news__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:35px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:850px){.news__list{gap:15px}}.news-item{width:calc(33% - 35px);cursor:pointer}@media (max-width:850px){.news-item{width:calc(50% - 15px)}}@media (max-width:500px){.news-item{width:100%}}.news-item__img-wrap{overflow:hidden;border-radius:30px 30px 0 30px}.news-item__img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.news-item__desc{padding:30px 30px 0;font-size:20px;line-height:24px;color:var(--c-grey)}@media (max-width:500px){.news-item__desc{padding:15px 30px 60px}}.news__spoiler{display:block;padding-top:115px;width:100%;font-size:20px;line-height:24px;text-align:center;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:var(--c-grey);cursor:pointer}@media (max-width:500px){.news__spoiler{padding-top:0}}.footer{background:url(../images/footer/bg.png);background-size:cover;margin-top:-100px;border-radius:var(--border-rad-block);position:relative}@media (max-width:600px){.footer{border-radius:30px}}.footer__wrap{padding:0 15px}.footer-map{position:relative;width:100%;height:700px;border-radius:30px;overflow:hidden}@media (max-width:500px){.footer-map{height:195px;border-radius:10px}}.footer-map__img{position:absolute;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.footer-map__icon{position:absolute;top:48%;left:51%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@media (max-width:800px){.footer-map__icon{max-width:16px}}.footer-map__adress{position:absolute;top:127px;right:164px;width:300px;height:183px;border-radius:5px 60px;background:var(--c-blue);-webkit-box-shadow:0 5px 20px rgba(0,0,0,.05);box-shadow:0 5px 20px rgba(0,0,0,.05);padding:45px 40px}@media (max-width:1200px){.footer-map__adress{right:50px;top:30px}}@media (max-width:500px){.footer-map__adress{display:none}}.footer-map__adress.mob{position:relative;top:0;left:0;margin-top:30px;display:none;width:auto;max-width:300px}@media (max-width:500px){.footer-map__adress.mob{display:block;background:#fff}.footer-map__adress.mob p{color:var(--c-grey)}.footer-map__adress.mob svg{width:22px;height:25px}}.footer-map__adress-text{color:#fff;font-size:20px;line-height:24px}.map_dot{width:22px;height:18px;margin-bottom:22px}.contacts{color:#fff;padding:75px 0;border-bottom:1px solid #fff}@media (max-width:600px){.contacts{padding:35px 0 30px}}.contacts__phone{font-size:48px;line-height:59px;text-align:center;letter-spacing:.05em;text-transform:uppercase;padding-bottom:35px;white-space:nowrap}@media (max-width:500px){.contacts__phone{font-size:32px;line-height:39px;padding-bottom:20px}}@media (max-width:350px){.contacts__phone{font-size:25px}}.contacts__emails{margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:800px}@media (max-width:600px){.contacts__emails{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.contacts__email{font-size:24px;line-height:29px;text-align:center;letter-spacing:.05em;text-transform:uppercase}@media (max-width:600px){.contacts__email{padding-bottom:15px;font-size:16px;line-height:20px}}.footer__policy{color:#fff;padding:40px 0;font-size:16px;line-height:20px}@media (max-width:600px){.footer__policy{font-size:12px;line-height:15px}}.footer__dec1{position:absolute;right:180px;top:-100px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:600px){.footer__dec1{width:93px;top:3px;right:45px}}.footer__dec2{position:absolute;bottom:285px;left:534px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:800px){.footer__dec2{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
