@-webkit-keyframes zoomIn{0%{-webkit-transform:scale(.3);transform:scale(.3)}60%{-webkit-transform:scale(.5);transform:scale(.5)}94%{-webkit-transform:scale(.5);transform:scale(.5);opacity:1}95%{-webkit-transform:scale(.9);transform:scale(.9);opacity:1}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes zoomIn{0%{-webkit-transform:scale(.3);transform:scale(.3)}60%{-webkit-transform:scale(.5);transform:scale(.5)}94%{-webkit-transform:scale(.5);transform:scale(.5);opacity:1}95%{-webkit-transform:scale(.9);transform:scale(.9);opacity:1}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}:root{--c-orange: #FD8127;--c-blue: #021A42;--bg-grey-light: #F2F2F2;--c-grey: #5A5A5A;--c-font-blue: #021A42;--c-font-grey: #A7A7A7;--border-rad-block: 60px}.section-title{font-family:'NeoSansW1G',Arial,Helvetica,sans-serif;font-style:normal;font-weight:300;font-size:96px;line-height:115px;text-transform:uppercase;color:var(--c-font-grey);padding-top:130px;padding-bottom:75px}@media (max-width:800px){.section-title{font-size:48px;line-height:58px;padding-top:50px;padding-bottom:40px}}.section-title--blue{color:var(--c-font-blue);font-weight:600}.section-title--white{color:#fff}.bold{font-weight:600}.section-title__img{margin-bottom:-10px}@media (max-width:800px){.section-title__img{max-height:52px;margin-bottom:-5px;margin-left:10px}}.section-title--wrap{display:block;padding-left:100px}@media (max-width:600px){.section-title--wrap{padding-left:60px}}.dec_desk{display:inline}.dec_mob{display:none}@media (max-width:800px){.dec_desk{display:none}.dec_mob{display:inline}.mob_wrap{display:block}}.hidden{display:none!important}.pecs{opacity:1;-webkit-transition:1s;transition:1s}.pecs_disappear{opacity:0}.fixedBlock{position:fixed!important;max-width:inherit;width:100%;top:0;margin-top:0!important}.hiddenBlock{opacity:0;top:150px!important}.bolder{font-weight:bolder}.unvisOrder{opacity:0!important;z-index:-5!important;left:calc(100% + 70vw)!important}.scroll-up{position:fixed;right:100px;cursor:pointer;bottom:-100px;-webkit-transition:.2s;transition:.2s;opacity:0}.scroll-up svg{width:75px;height:75px}.scroll-up__appear{opacity:1;bottom:50px;z-index:1000}@media (max-width:1000px){.scroll-up{right:50px}.scroll-up__appear{bottom:50px}}@media (max-width:600px){.scroll-up{right:20px}.scroll-up__appear{bottom:20px}}.fixed_main{position:fixed!important;-webkit-transform:translateX(-50%)!important;transform:translateX(-50%)!important;left:50%;width:100%!important}.filler{height:500px}.animMain{-webkit-animation-name:zoomIn;animation-name:zoomIn;-webkit-animation-duration:.7s;animation-duration:.7s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-delay:.5s;animation-delay:.5s;-webkit-animation-direction:alternate;animation-direction:alternate;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-play-state:running;animation-play-state:running}.inv{opacity:0}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Regular.ttf)}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Bold.ttf);font-weight:700}@font-face{font-family:"Montserrat";src:url(../fonts/Montserrat-Light.ttf);font-style:light}@font-face{font-family:"NeoSansW1G";src:url(../fonts/NeoSansW1G-Regular.otf)}@font-face{font-family:"NeoSansW1G";src:url(../fonts/NeoSansW1G-Light.otf);font-style:light}*{-webkit-box-sizing:border-box;box-sizing:border-box;outline:0;padding:0}body{font-family:'Montserrat',Arial,sans-serif;background:var(--bg-grey-light);overflow-x:hidden}.header,.mission{z-index:0}.header,.history,.mission,.news,.work{position:sticky!important;top:0}*,h1,h2,h3,h4,h5,h6{margin:0}.container{max-width:1920px;margin:0 auto;color:var(--c-font-regular);min-width:360px;padding:20px;position:relative;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory}@media (max-width:800px){.container{padding:12px}}.wrap{max-width:1160px;margin:0 auto;width:100%}li,ul{list-style:none}a{text-decoration:none;color:inherit}.btn,.btn-white{width:280px;height:54px;background:var(--c-gold-primary);text-align:center;border:0;border-radius:27px;font-family:'Inter';font-style:normal;font-weight:700;font-size:16px;line-height:24px;color:#fff;cursor:pointer;-webkit-transition:.2s;transition:.2s}@media (max-width:768px){.btn,.btn-white{font-size:14px}}.btn-white:hover,.btn:hover{background:var(--c-btn-primary)}.btn-white{background:#fff;color:var(--c-font-black)}.btn-white:hover{background:var(--c-btn-sec-hover)}.burger_menu{width:28px;height:23px;display:none;cursor:pointer}@media (max-width:900px){.burger_menu{display:block}}.overlay-dark,.overlay-dark-news{width:100%;height:100%;position:fixed;background:#000;opacity:0;z-index:-10;-webkit-transition:.3s;transition:.3s}.overlay--shown{display:block;opacity:.8;z-index:1000}.modal{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);background:#fff;border-radius:33px;-webkit-box-shadow:2px 0 8px 4px rgba(34,60,80,.2);box-shadow:2px 0 8px 4px rgba(34,60,80,.2);z-index:10000;opacity:0;-webkit-transition:.2s;transition:.2s;top:-1000%;max-width:1360px}.modal__wrap{padding:60px}.modal__images{display:-webkit-box;display:-ms-flexbox;display:flex;gap:20px;padding-bottom:60px}@media (max-width:1400px){.modal__images{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.modal__image{border-radius:10px;overflow:hidden}.modal__image img,.product-modal .pm-header__decorbg img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.modal__text{max-width:75%}@media (max-width:1400px){.modal__text{max-width:90%}}.modal__text p{font-family:'Montserrat';font-style:normal;font-weight:400;font-size:20px;line-height:24px;color:var(--c-grey);padding-bottom:30px}.modal__close,.product-modal{position:absolute;background:0 0}.modal__close{right:30px;display:inline-block;padding:0;border:0;cursor:pointer;opacity:1;top:30px;width:24px;height:24px}.modal__close::after,.modal__close::before{content:'';position:absolute;width:100%;height:3px;top:50%;left:0;background-color:#333}.modal__close::before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal__close::after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal.opened-modal{opacity:1!important;top:50%}.product-modal{width:85%;max-width:1360px;min-width:340px;height:auto;top:-1000%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.product-modal.opened-modal{opacity:1!important;top:150px}@media (max-width:700px){.product-modal{padding:15px}}.product-modal .modal__close{position:absolute;top:-40px;left:-60px;display:inline-block;width:59px;height:59px;padding:0;border:0;background:#fff;cursor:pointer;opacity:1;border-radius:50%;-webkit-transition:.2s;transition:.2s}.product-modal .modal__close::after,.product-modal .modal__close::before{content:'';position:absolute;width:30px;height:3px;top:50%;left:50%;background-color:#333;-webkit-transition:.2s;transition:.2s}@media (max-width:800px){.product-modal .modal__close::after,.product-modal .modal__close::before{width:20px}}.product-modal .modal__close::before{-webkit-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg)}.product-modal .modal__close::after{-webkit-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.product-modal .modal__close:hover{margin-top:-5px}@media (max-width:800px){.product-modal .modal__close{width:40px;height:40px;left:-30px}}@media (max-width:430px){.product-modal .modal__close{left:0;top:-30px}}.product-modal__header{padding:20px;width:100%;height:100%;background:radial-gradient(41.7% 56.55% at 72.16% 50%,#b76aff 0%,#8349b8 100%);border-radius:30px}.product-modal .pm-header{display:grid;grid-template-columns:repeat(5,1fr);grid-template-rows:1fr auto;grid-column-gap:0;grid-row-gap:0;position:relative;overflow:hidden;grid-auto-rows:auto}@media (max-width:1000px){.product-modal .pm-header{grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(4,auto)}}.product-modal .pm-header__decor{position:absolute;width:1282px;height:1282px;left:-202px;top:-130px;background:rgba(255,255,255,.1);border-radius:50%;z-index:0}.product-modal .pm-header__decorbg{width:100%;height:100%;position:absolute}.product-modal .pm-header__decorbg img{background-position:left bottom}.product-modal .pm-header__plashka{position:absolute;z-index:-1;left:-100px;padding-top:100px}.product-modal .pm-header__title{grid-area:1/1/2/4;z-index:1;height:470px}@media (max-width:1000px){.product-modal .pm-header__title{grid-area:1/1/2/3;height:auto}}.product-modal .pm-header__title-sub{font-family:'Montserrat';font-style:normal;font-weight:300;font-size:24px;line-height:150%;text-align:center;letter-spacing:.1em;text-transform:uppercase;color:#fff;max-width:55%;margin-left:auto;padding-top:100px}@media (max-width:1300px){.product-modal .pm-header__title-sub{padding-top:50px}}@media (max-width:1000px){.product-modal .pm-header__title-sub{margin:0 auto;font-size:16px;max-width:none}}.product-modal .pm-header__title-main img{margin-left:auto;display:block;padding-top:40px;max-width:100%}@media (max-width:1000px){.product-modal .pm-header__title-main img{margin:0 auto}}.product-modal .pm-header__flavours{grid-area:2/1/4/4;z-index:1;padding-top:50px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;padding-bottom:50px}@media (max-width:1000px){.product-modal .pm-header__flavours{grid-area:4/1/5/3}}.product-modal .pm-header__display{grid-area:1/4/4/6;z-index:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative;padding-left:20%;padding-top:50px;height:900px}@media (max-width:1000px){.product-modal .pm-header__display{grid-area:2/1/4/3;height:700px;padding-left:0}}@media (max-width:700px){.product-modal .pm-header__display{height:500px}}.product-modal .pm-header .prod-display__img{height:100%;-webkit-transform:scale(.3);transform:scale(.3);opacity:.5;-webkit-transition:all .7s ease .1s;transition:all .7s ease .1s}@media (max-width:1000px){.product-modal .pm-header .prod-display__img{-webkit-transform:scale(1);transform:scale(1);margin:0 auto}}.product-modal .pm-header .prod-display__img img{width:100%;height:80%;-o-object-fit:contain;object-fit:contain}@media (max-width:1200px){.product-modal .pm-header .prod-display__img img{padding-right:20px}}@media (max-width:1000px){.product-modal .pm-header .prod-display__img img{padding-right:0;height:100%}}.flavours{padding-left:100px}@media (max-width:1200px){.flavours{padding-left:30px}}@media (max-width:1000px){.flavours{padding-left:0}}.flavours__title{font-family:'NeoSansW1G';font-weight:400;font-size:40px;line-height:48px;color:#fff;padding-bottom:20px}.flavours__choose,.flavours__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.flavours__choose{-ms-flex-wrap:wrap;flex-wrap:wrap}.flavours__item{width:20%;cursor:pointer;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:220px}@media (max-width:1200px){.flavours__item{height:160px}}@media (max-width:1000px){.flavours__item{width:25%}}.flavours__img-wrap{width:150px;height:150px;border-radius:50%;position:relative;margin-bottom:8px}@media (max-width:1500px){.flavours__img-wrap{width:130px;height:130px}}@media (max-width:1200px){.flavours__img-wrap{width:110px;height:110px}}@media (max-width:1000px){.flavours__img-wrap{width:60px;height:60px}}.flavours__img{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);margin:0 auto;max-width:60px}@media (max-width:1200px){.flavours__img{max-width:45px;max-height:60px}}.flavours__name{font-family:'Montserrat';font-weight:500;font-size:16px;line-height:130%;text-align:center;color:rgba(255,255,255,.4);display:block;width:65%}@media (max-width:1200px){.flavours__name{font-size:14px}}@media (max-width:1000px){.flavours__name{font-size:12px}}@media (max-width:800px){.flavours__name{font-size:10px}}.flavours--active .flavours__img-wrap{border:2px solid #e1e1e1;height:170px;width:170px;z-index:1000}@media (max-width:1500px){.flavours--active .flavours__img-wrap{width:140px;height:140px}}@media (max-width:1200px){.flavours--active .flavours__img-wrap{width:120px;height:120px}}@media (max-width:1000px){.flavours--active .flavours__img-wrap{width:70px;height:70px}}.flavours--active .flavours__name{color:#fff}.switch-wrap{width:60px}.vol-quant-2{height:172px}.vol-quant-3{height:235px}.prod-switch{min-width:60px;border:1px solid rgba(255,255,255,.5);border-radius:90px;position:relative;max-width:100%;cursor:pointer}.prod-switch__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%}.prod-switch__switch,.prod-switch__vol{height:86px;position:relative;width:100%}.prod-switch__vol span{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-family:'NeoSansW1G';font-weight:500;font-size:16px;line-height:100%;text-align:center;color:#5a5a5a}.prod-switch__switch{background:#fff;border-radius:90px;position:absolute;display:block;top:0;-webkit-transition:.2s;transition:.2s}.vol-quant-2 .switched{top:84px}.vol-quant-3 .switched{top:73px}.vol-quant-3 .switched2{top:146px}.pm-adv__wrapper{padding:136px 150px 100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:50px;background:#fff;position:relative}@media (max-width:1200px){.pm-adv__wrapper{padding:136px 100px 100px}}@media (max-width:980px){.pm-adv__wrapper{gap:20px;padding:80px 50px}}@media (max-width:800px){.pm-adv__wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start}}.pm-adv{position:relative}.pm-adv__item{-webkit-box-flex:1;-ms-flex:1;flex:1}@media (max-width:800px){.pm-adv__item{max-width:260px}}.pm-adv__item li{list-style:disc}.pm-adv__item a{text-decoration:underline}.pm-adv__img{margin-bottom:30px}.pm-adv__text,.pm-adv__title{font-family:'Montserrat';line-height:140%;color:var(--c-grey)}.pm-adv__title{padding-bottom:15px;font-weight:700;font-size:24px}.pm-adv__text{font-weight:400;font-size:16px}.prod-info{border-radius:30px;overflow:hidden;min-height:660px;margin-top:-30px}@media (max-width:1000px){.prod-info{min-height:550px}}.prod-info__wrap{width:100%;height:100%;position:relative}.prod-info__decor{position:absolute;top:0;z-index:1;height:100%}.header-top__logo img,.prod-info__bg,.prod-info__decor img{width:100%;height:100%}.prod-info__bg{position:absolute;z-index:0;border-radius:30px;overflow:hidden;min-height:660px}@media (max-width:1000px){.prod-info__bg{min-height:550px}}.prod-info__img,.products-list__item img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.prod-info__text{max-width:500px;padding:170px 0 200px 80px;font-size:24px;color:#fff;position:relative;z-index:2}@media (max-width:599px){.prod-info__text{padding:75px 75px 100px 20px;font-size:16px;line-height:20px}}.prod-info__text p:not(:last-child),.prod-tiger__text p:not(:last-child){padding-bottom:50px}.prod-tiger{position:relative;border-radius:30px;background:#fff}.prod-tiger__img{position:absolute;left:0;bottom:0;margin-left:-20px;margin-bottom:-20px;max-width:45%;border-radius:30px}@media (max-width:968px){.prod-tiger__img{max-height:350px;max-width:100%}}.prod-tiger__info{padding:130px 5vw 130px 0;max-width:55%;margin-left:auto}@media (max-width:968px){.prod-tiger__info{max-width:100%;padding-bottom:350px;padding-top:70px}}.prod-tiger__title{font-family:'NeoSansW1G';font-weight:300;font-size:64px;line-height:77px;text-transform:uppercase;color:#5a5a5a;padding-bottom:50px}.prod-tiger__text{font-size:20px;line-height:24px;color:#5a5a5a}.low,.low__arr{position:absolute;left:50%}.low{top:-39px;-webkit-transform:translateX(-50%);transform:translateX(-50%);margin-bottom:-5px;cursor:pointer}.low:hover .low__arr{opacity:1;bottom:10px}.low__arr{content:'';width:15px;height:15px;border:solid #5a5a5a;border-width:0 3px 3px 0;bottom:15px;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg);opacity:.5;-webkit-transition:.2s;transition:.2s}.pm-star{position:absolute;top:172px;left:20%;z-index:1000}@media (max-width:1000px){.pm-star{left:30%}}@media (max-width:770px){.pm-star{left:23%;top:130px}}@media (max-width:550px){.pm-star{left:18%}}@media (max-width:450px){.pm-star{left:5%}}.pm-star__img{cursor:pointer}.pm-star__text{top:20px;right:20px;position:absolute;font-size:14px;line-height:140%;color:#5a5a5a;width:266px;background:#fff;border-radius:10px;padding:30px 20px;opacity:0;visibility:hidden}@media (max-width:1000px){.pm-star__text{right:auto;left:20px}}@media (max-width:770px){.pm-star__text{width:200px}}.pm-text--showed{opacity:1;visibility:visible}.pm__wrapper{padding:20px;background:#fff;border-radius:30px}.pm-sticky{position:sticky!important}.right-aligned{margin-left:auto!important;padding-right:100px!important;padding-top:75px!important;padding-left:140px!important}.bottom-aligned{padding:30% 0 80px 80px}.dark-text{color:#5a5a5a!important}.bigger-text{font-size:32px;line-height:39px}.smaller-text{font-size:16px;line-height:150%}.neo-title{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;padding-bottom:40px}.wider{max-width:660px!important}.zur-top{padding-top:30%;font-weight:700;font-size:39px;line-height:48px;padding-bottom:50px}.zur-bottom{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.zur-num{font-weight:700;font-size:96px;line-height:80px}.zur-right,.zur-small{font-weight:700;font-size:36px;line-height:44px}.zur-right{padding-left:20px}.prod-template{background:#fff;z-index:1000;position:relative}.template-1{display:-webkit-box;display:-ms-flexbox;display:flex;height:660px;padding:40px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#fff}@media (max-width:1100px){.template-1{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin:0 auto;height:auto}}.prod-template__part{position:relative}.part{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;max-width:409px;height:100%}@media (max-width:1100px){.part{height:500px}}.part__bg,.part__top{position:absolute;z-index:0}.part__bg{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.part__top{top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);max-width:80%}.part__content{position:relative;margin-top:auto;z-index:1;padding:0 33px 75px;color:#fff}.part__title{font-family:'Montserrat';font-style:normal;font-weight:700;font-size:24px;line-height:130%;padding-bottom:20px}.part__text{font-weight:400;font-size:16px;line-height:140%}.header{position:relative;padding:55px 80px;color:#fff}@media (max-width:1025px){.header{padding:30px 20px}}.header-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-top__bg{position:absolute;top:0;left:0;z-index:-1;-webkit-filter:brightness(50%);filter:brightness(50%);-o-object-fit:cover;object-fit:cover;width:100%;height:calc(100% + 150px);border-radius:var(--border-rad-block)}@media (max-width:600px){.header-top__bg{height:calc(100% + 100px);border-radius:30px 30px 0 0}}.header-top__bg-vid{position:absolute;top:0;left:0;z-index:-1;-webkit-filter:brightness(50%);filter:brightness(50%);-o-object-fit:cover;object-fit:cover;width:100%;height:calc(100% + 150px);border-radius:var(--border-rad-block) var(--border-rad-block) 0 0}@media (max-width:600px){.header-top__bg-vid{border-radius:30px 30px 0 0}}.header-top__logo{max-width:189px;max-height:79px}.header .n-menu{max-width:800px;background:rgba(255,255,255,.15);border-radius:90px;z-index:9999}@media (max-width:900px){.header .n-menu{display:none}}.header .n-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:30px 50px}.header .n-menu__item{font-size:20px;line-height:24px;letter-spacing:.1em}@media (max-width:1500px){.header .n-menu__item{font-size:14px}}@media (max-width:1150px){.header .n-menu__item{font-size:12px;letter-spacing:0}}.header .n-menu__item:not(:last-child){padding-right:50px}@media (max-width:1420px){.header .n-menu__item:not(:last-child){padding-right:25px}}.header .n-lang{width:160px;height:60px;background:#fff;border-radius:5px;position:relative;cursor:pointer}@media (max-width:900px){.header .n-lang{display:none}}.header .n-lang__switch{position:absolute;left:0;top:0;height:100%;width:50%;border-radius:5px;background:var(--c-orange);-webkit-transition:.3s;transition:.3s}.header .n-lang__en,.header .n-lang__ru{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.header .n-lang__ru{left:28px}.header .n-lang__en{right:28px;color:#000}.header .n-lang.en .n-lang__switch{left:calc(100% - 80px)}.header .n-lang.en .n-lang__ru{color:#000}.header .n-lang.en .n-lang__en{color:#fff}.header-main{padding-top:480px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:15px}@media (max-width:1300px){.header-main{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:start;-ms-flex-align:start;align-items:start}}.header-main__title{padding-right:50px}.header-main__subtitle{font-family:'Montserrat';font-weight:300;font-size:36px;line-height:150%;letter-spacing:.1em;text-transform:uppercase;width:480px}@media (max-width:800px){.header-main__subtitle{font-size:20px;max-width:280px;padding-bottom:15px}}.product{background-color:#fff;border-radius:var(--border-rad-block);scroll-snap-align:start;position:relative;z-index:100}@media (max-width:600px){.product{border-radius:30px}}.product__wrap{max-width:1190px;margin:0 auto;width:100%;position:relative;padding:0 15px 130px}@media (max-width:600px){.product__wrap{margin-bottom:100px}}.products-menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-bottom:75px;min-width:300px}@media (max-width:1200px){.products-menu{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:30px;grid-row-gap:15px}}@media (max-width:500px){.products-menu{grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr);grid-column-gap:20px}}@media (max-width:350px){.products-menu{grid-column-gap:10px}}.products-menu__item{font-size:24px;line-height:29px;padding:20px 30px;border-radius:10px;cursor:pointer;-webkit-transition:.3s;transition:.3s;text-align:center;white-space:nowrap}.products-menu__item:hover{background:#fd80276e;color:#000}@media (max-width:800px){.products-menu__item{font-size:16px;line-height:20px;padding:10px 15px}}@media (max-width:370px){.products-menu__item{white-space:normal;padding:10px}}.products-menu__item--active{background:var(--c-orange);color:#fff}.products-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:25px}.products-list__item{cursor:pointer;max-width:370px;-webkit-transition:.2s;transition:.2s}@media (max-width:600px){.products-list__item{max-width:254px}}.products-list__item:hover{-webkit-filter:brightness(1.1);filter:brightness(1.1);-webkit-transform:scale(1.1);transform:scale(1.1)}.order{margin-top:36px;width:350px;height:187px;border-radius:202px;background:var(--c-orange);color:#fff;padding:40px 64px;position:absolute;left:calc(100% - 350px);cursor:pointer;z-index:100;-webkit-transition:.2s;transition:.2s}@media (max-width:800px){.order{margin-top:50px;width:306px;height:149px}}@media (max-width:450px){.order{left:22px}}.order:hover{-webkit-filter:brightness(110%);filter:brightness(110%)}.order__text{font-weight:400;font-size:16px;line-height:20px;width:170px}@media (max-width:800px){.order__text{font-size:12px;line-height:15px;width:121px}}.order__vol{font-weight:400;font-size:64px;line-height:78px}@media (max-width:800px){.order__vol{font-size:48px;line-height:59px}}.order__arr{position:absolute;top:90px;right:70px;width:40px;height:35px}@media (max-width:800px){.order__arr{top:62px}}.product__decor{position:absolute;right:-37%;top:424px;-webkit-transform:rotate(90deg);transform:rotate(90deg);font-family:'NeoSansW1G';font-weight:400;font-size:115.222px;line-height:138px;text-transform:uppercase;color:#f8f8f8}@media (max-width:1530px){.product__decor{display:none}}.mission{padding-bottom:130px;background:var(--bg-grey-light)}.mission,.mission__wrap{position:relative}.mission-main{padding:90px 113px;background:url(../images/footer/bg.png);background-position:center center;background-size:cover;max-width:653px;color:#fff;margin-bottom:75px}@media (max-width:600px){.mission-main{padding:60px 50px;border-radius:30px 30px 0 0}}@media (max-width:800px){.mission-main{max-width:none;width:100%;margin-bottom:50px}}.mission-main__img{position:absolute;top:40%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:-55px}@media (max-width:600px){.mission-main__img{width:13px;height:25px;left:-25px;top:33%}}.mission-main__img img{width:100%;height:100%}.mission-main__title{font-family:'NeoSansW1G';font-weight:400;font-size:36px;line-height:43px;letter-spacing:.1em;text-transform:uppercase;padding-bottom:15px;position:relative}@media (max-width:600px){.mission-main__title{font-size:20px;line-height:24px}}.mission-main__text{font-family:'Montserrat';font-weight:400;font-size:24px;line-height:29px}@media (max-width:600px){.mission-main__text{font-size:12px;line-height:15px}}.mission-adv{display:-webkit-box;display:-ms-flexbox;display:flex}@media (max-width:800px){.mission-adv{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.mission-adv__item{border:1px solid;border-color:rgba(2,25,64,.3);border-radius:50%;width:300px;height:300px;margin-right:0;position:relative}@media (max-width:1180px){.mission-adv__item{width:25vw;height:25vw}}@media (max-width:800px){.mission-adv__item{width:227px;height:227px;margin-right:0;margin-top:0}}.mission-adv__text{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:var(--c-blue);text-align:center}.mission-adv__top-text{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;text-align:center;display:block;min-height:80px}@media (max-width:1000px){.mission-adv__top-text{font-size:50px}}@media (max-width:800px){.mission-adv__top-text{font-size:64px;padding-top:15px}}.mission-adv__subtext{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:130%;text-align:center;color:#5a5a5a;min-width:250px;display:block;min-height:80px}@media (max-width:1000px){.mission-adv__subtext{font-size:16px;min-width:auto}}@media (max-width:800px){.mission-adv__subtext{font-size:20px;min-width:250px}}.mission__dec{position:absolute;right:276px;bottom:-150px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:800px){.mission__dec{max-width:80px;right:72px;bottom:-15px}}.history{position:relative;background:var(--bg-grey-light);z-index:102}@media (max-width:880px){.history{display:none}}.countries__item span,.history__wrap{position:relative}.rail,.year{display:-webkit-box;display:-ms-flexbox;display:flex}.rail{position:relative;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.year{height:52px;margin-top:60px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;position:sticky;top:50%;margin-bottom:110px}.year__arr{margin-right:40px;margin-top:15px}.year__num{font-family:'NeoSansW1G';font-weight:400;font-size:64px;line-height:77px;letter-spacing:.1em;color:var(--c-blue);white-space:nowrap;margin-right:20px}.events__item{max-width:660px;min-height:255px;padding:60px;background:#fff;top:0;position:relative;-webkit-transition:.4s;transition:.4s}.events__item:nth-child(2n){background:url(../images/footer/bg.png);background-position:center center;background-size:cover}.events__item:nth-child(2n) .events__text,.events__item:nth-child(2n) .events__title{color:#fff}.events__text,.events__title{font-weight:400;line-height:140%}.events__title{ont-family:'NeoSansW1G';letter-spacing:.05em;text-transform:uppercase;color:var(--c-blue);padding-bottom:15px;font-size:36px}.events__text{font-family:'Montserrat';font-style:normal;font-size:24px;color:#5a5a5a}.history__dec{position:absolute;left:0;bottom:150px;z-index:-1}.history__decor-circle,.history__decor-circle-2{width:100%;position:absolute;top:250px}.history__decor-circle-2{top:1200px}.geography{background:#fff;border-radius:var(--border-rad-block);padding:0 15px;position:relative;z-index:103}@media (max-width:600px){.geography{border-radius:30px}}.geography__wrap{padding-bottom:150px}@media (max-width:800px){.geography__wrap{padding-bottom:60px}}.countries__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;width:510px;padding-left:20px}@media (max-width:800px){.countries__list{width:360px}}.countries__item{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;letter-spacing:.05em;text-transform:uppercase;color:var(--c-grey);width:50%;padding-bottom:15px;position:relative;cursor:pointer}.countries__item::before,.work-adv__item::before{color:var(--c-blue);font-weight:700;display:inline-block}.countries__item::before{width:1em;content:"\2022";margin-left:-1em}.countries__item span:after{background:0 0;bottom:-2px;content:"";display:block;height:3px;left:50%;position:absolute;background:var(--c-orange);-webkit-transition:width .3s ease 0s,left .3s ease 0s;transition:width .3s ease 0s,left .3s ease 0s;width:0%}.countries__item .underline:after,.countries__item span:hover:after{width:100%!important;left:0!important}@media (max-width:800px){.countries__item{font-size:16px;line-height:20px}}.geography__map-wrap{position:relative}#map,.map{padding-left:55px;max-width:100%}.map img{width:100%}@media (max-width:800px){.map{padding-left:0;padding-top:50px}}.label{position:absolute;top:0;right:150px}@media (max-width:1000px){.label{right:50px;max-width:250px}}@media (max-width:800px){.label{max-width:125px;top:20px;right:30px}.label img{width:100%}}@media (max-width:800px){#map{padding-left:0;padding-top:50px}}#map path{-webkit-transition:.2s;transition:.2s;cursor:pointer}#map path:hover,.countryStroke{stroke-width:3px!important;stroke:#3c91ff!important}.work{padding-bottom:130px;position:relative;background:var(--bg-grey-light);z-index:104}@media (max-width:550px){.work{padding-bottom:70px}}.work__wrap{position:relative}.work-adv{display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(2,1fr);grid-column-gap:120px;grid-row-gap:40px;padding-bottom:75px;padding-left:35px}@media (max-width:1000px){.work-adv{grid-column-gap:60px;grid-row-gap:30px;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr)}}@media (max-width:480px){.work-adv{grid-template-columns:repeat(1,1fr);grid-template-rows:repeat(6,1fr);padding-bottom:50px;grid-row-gap:15px}}.work-adv__item{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;color:var(--c-grey);position:relative}@media (max-width:480px){.work-adv__item{font-size:16px;line-height:20px;max-width:250px}}.work-adv__item::before{content:"\2605";margin-left:-35px;font-size:24px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.work-form{max-width:560px}.work-form__cats{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:50px;border-bottom:3px solid #d9d9d9}@media (max-width:550px){.work-form__cats{margin-bottom:30px}}.work-form__cat{font-family:'Montserrat';font-weight:400;font-size:20px;line-height:24px;text-transform:uppercase;color:var(--c-grey);padding-bottom:16px;cursor:pointer}@media (max-width:550px){.work-form__cat{font-size:12px;line-height:15px}}.work-form__cat--active{position:relative}.work-form__cat--active::before{content:"";background:var(--c-orange);width:100%;display:inline-block;position:absolute;height:4px;bottom:-3px;-webkit-transition:.3s;transition:.3s}.work-form__item{padding:35px 50px;font-size:24px;line-height:29px;color:var(--c-grey);background:#fff;margin-bottom:20px;border-radius:15px}@media (max-width:550px){.work-form__item{font-size:20px;line-height:24px;padding:25px 30px}}.work-form__offer{padding-top:50px}.work-form__offer p{padding-top:10px;font-size:24px;line-height:29px;color:var(--c-grey)}@media (max-width:550px){.work-form__offer{padding-top:30px}.work-form__offer p{font-size:16px;line-height:20px;padding-top:0}}.work-form__link{font-weight:900;color:var(--c-orange)}.work-form__link--style{border-bottom:2px solid var(--c-orange)}.work__arr{width:22px;height:15px}.work__person{position:absolute;bottom:-130px;right:0}@media (max-width:1050px){.work__person{display:none}}.news{background:#fff;border-radius:var(--border-rad-block);padding:0 15px;z-index:105;position:relative}@media (max-width:600px){.news{border-radius:30px}}.news__wrap{padding-bottom:230px}.news__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:35px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:850px){.news__list{gap:15px}}.news-item{width:calc(33% - 35px);cursor:pointer}@media (max-width:850px){.news-item{width:calc(50% - 15px)}}@media (max-width:500px){.news-item{width:100%}}.news-item__img-wrap{overflow:hidden;border-radius:30px 30px 0 30px}.news-item__img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.news-item__desc{padding:30px 30px 0;font-size:20px;line-height:24px;color:var(--c-grey)}@media (max-width:500px){.news-item__desc{padding:15px 30px 60px}}.news__spoiler{display:block;padding-top:115px;width:100%;font-size:20px;line-height:24px;text-align:center;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:var(--c-grey);cursor:pointer}@media (max-width:500px){.news__spoiler{padding-top:0}}.footer{background:url(../images/footer/bg.png);background-size:cover;margin-top:-100px;border-radius:var(--border-rad-block);position:relative;z-index:106}@media (max-width:600px){.footer{border-radius:30px}}.footer__wrap{padding:0 15px}.footer-map{position:relative;width:100%;height:700px;border-radius:30px;overflow:hidden}@media (max-width:500px){.footer-map{height:195px;border-radius:10px}}.footer-map__img{position:absolute;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.footer-map__icon{position:absolute;top:48%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@media (max-width:800px){.footer-map__icon{max-width:16px}}.footer-map__adress{position:absolute;top:127px;right:164px;width:300px;height:183px;border-radius:5px 60px;background:var(--c-blue);-webkit-box-shadow:0 5px 20px rgba(0,0,0,.05);box-shadow:0 5px 20px rgba(0,0,0,.05);padding:45px 40px}@media (max-width:1200px){.footer-map__adress{right:50px;top:30px}}@media (max-width:500px){.footer-map__adress{display:none}}.footer-map__adress.mob{position:relative;top:0;left:0;margin-top:30px;display:none;width:auto;max-width:300px}@media (max-width:500px){.footer-map__adress.mob{display:block;background:#fff}.footer-map__adress.mob p{color:var(--c-grey)}.footer-map__adress.mob svg{width:22px;height:25px}}.footer-map__adress-text{color:#fff;font-size:20px;line-height:24px}.map_dot{width:22px;height:18px;margin-bottom:22px}.contacts{color:#fff;padding:75px 0;border-bottom:1px solid #fff}@media (max-width:600px){.contacts{padding:35px 0 30px}}.contacts__phone{font-size:48px;line-height:59px;text-align:center;letter-spacing:.05em;text-transform:uppercase;padding-bottom:35px;white-space:nowrap}@media (max-width:500px){.contacts__phone{font-size:32px;line-height:39px;padding-bottom:20px}}@media (max-width:350px){.contacts__phone{font-size:25px}}.contacts__emails{margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:800px}@media (max-width:600px){.contacts__emails{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.contacts__email{font-size:24px;line-height:29px;text-align:center;letter-spacing:.05em;text-transform:uppercase}@media (max-width:600px){.contacts__email{padding-bottom:15px;font-size:16px;line-height:20px}}.footer__policy{color:#fff;padding:40px 0;font-size:16px;line-height:20px}@media (max-width:600px){.footer__policy{font-size:12px;line-height:15px}}.footer__dec1{position:absolute;right:180px;top:-100px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:600px){.footer__dec1{width:93px;top:3px;right:45px}}.footer__dec2{position:absolute;bottom:285px;left:534px;-webkit-filter:blur(9px);filter:blur(9px)}@media (max-width:800px){.footer__dec2{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
